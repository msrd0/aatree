(function() {var implementors = {};
implementors["aatree"] = [{"text":"impl&lt;K:&nbsp;PartialOrd, V&gt; PartialOrd&lt;AATreeMapEntry&lt;K, V&gt;&gt; for AATreeMapEntry&lt;K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K:&nbsp;PartialOrd, V&gt; PartialOrd&lt;K&gt; for AATreeMapEntry&lt;K, V&gt;","synthetic":false,"types":[]}];
implementors["bstr"] = [{"text":"impl PartialOrd&lt;BString&gt; for BString","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Vec&lt;u8&gt;&gt; for BString","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BString&gt; for Vec&lt;u8&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;[u8]&gt; for BString","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BString&gt; for [u8]","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'a [u8]&gt; for BString","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BString&gt; for &amp;'a [u8]","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;String&gt; for BString","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BString&gt; for String","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;str&gt; for BString","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BString&gt; for str","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'a str&gt; for BString","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BString&gt; for &amp;'a str","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BStr&gt; for BString","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BString&gt; for BStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'a BStr&gt; for BString","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BString&gt; for &amp;'a BStr","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;BStr&gt; for BStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;[u8]&gt; for BStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BStr&gt; for [u8]","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'a [u8]&gt; for BStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BStr&gt; for &amp;'a [u8]","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;str&gt; for BStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BStr&gt; for str","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'a str&gt; for BStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BStr&gt; for &amp;'a str","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Vec&lt;u8&gt;&gt; for BStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BStr&gt; for Vec&lt;u8&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Vec&lt;u8&gt;&gt; for &amp;'a BStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'a BStr&gt; for Vec&lt;u8&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;String&gt; for BStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;BStr&gt; for String","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;String&gt; for &amp;'a BStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'a BStr&gt; for String","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl PartialOrd&lt;BigEndian&gt; for BigEndian","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;LittleEndian&gt; for LittleEndian","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;'g, T:&nbsp;?Sized + Pointable&gt; PartialOrd&lt;Shared&lt;'g, T&gt;&gt; for Shared&lt;'g, T&gt;","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L:&nbsp;PartialOrd, R:&nbsp;PartialOrd&gt; PartialOrd&lt;Either&lt;L, R&gt;&gt; for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["half"] = [{"text":"impl PartialOrd&lt;bf16&gt; for bf16","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;f16&gt; for f16","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl PartialOrd&lt;Level&gt; for Level","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;LevelFilter&gt; for Level","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;LevelFilter&gt; for LevelFilter","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Level&gt; for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PartialOrd&lt;Metadata&lt;'a&gt;&gt; for Metadata&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PartialOrd&lt;MetadataBuilder&lt;'a&gt;&gt; for MetadataBuilder&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl PartialOrd&lt;Ident&gt; for Ident","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl PartialOrd&lt;Span&gt; for Span","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Position&gt; for Position","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Literal&gt; for Literal","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ClassUnicodeRange&gt; for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ClassBytesRange&gt; for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Utf8Sequence&gt; for Utf8Sequence","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Utf8Range&gt; for Utf8Range","synthetic":false,"types":[]}];
implementors["serde_cbor"] = [{"text":"impl PartialOrd&lt;Value&gt; for Value","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl PartialOrd&lt;Lifetime&gt; for Lifetime","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()