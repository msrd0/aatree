var searchIndex = JSON.parse('{\
"aatree":{"doc":"AA-Tree implementation in Rust.","i":[[3,"AATreeMapEntry","aatree","",null,null],[3,"AATreeMap","","",null,null],[3,"AATreeSet","","A set based on an AA-Tree. An AA-Tree is a self-balancing…",null,null],[0,"iter","","",null,null],[3,"AAIter","aatree::iter","The iterator produces from an reference of an AATree-based…",null,null],[3,"AAIntoIter","","The iterator produces from an AATree-based data structure…",null,null],[0,"node","aatree","",null,null],[4,"TraverseStep","aatree::node","This type specifies the requested step for `traverse`.",null,null],[13,"Left","","",0,null],[13,"Right","","",0,null],[13,"Value","","",0,null],[4,"AANode","","",null,null],[13,"Nil","","",1,null],[13,"Node","","",1,null],[12,"level","aatree::node::AANode","",2,null],[12,"content","","",2,null],[12,"left_child","","",2,null],[12,"right_child","","",2,null],[11,"insert","aatree::node","Insert a new node with `content` into the tree. If a node…",1,[[]]],[11,"remove","","Remove a value from this tree. If the value was found, it…",1,[[],["option",4]]],[11,"traverse","","Traverse the tree looking for a specific value. The…",1,[[],["option",4]]],[11,"new","","",1,[[]]],[11,"new","aatree","Construct a new, empty AA-Tree based map.",3,[[]]],[11,"len","","Returns the number of elements in the map.",3,[[]]],[11,"is_empty","","Returns `true` if the map contains no elements.",3,[[]]],[11,"iter","","Creates an iterator over this map that visits all entries…",3,[[],[["aaiter",3],["aatreemapentry",3]]]],[11,"insert","","",3,[[]]],[11,"smallest","","",3,[[],[["option",4],["aatreemapentry",3]]]],[11,"largest","","",3,[[],[["option",4],["aatreemapentry",3]]]],[11,"contains_key","","",3,[[]]],[11,"smallest_geq_than","","",3,[[],[["option",4],["aatreemapentry",3]]]],[11,"largest_leq_than","","",3,[[],[["option",4],["aatreemapentry",3]]]],[11,"new","","Construct a new, empty AA-Tree based set.",4,[[]]],[11,"len","","Returns the number of elements in the set.",4,[[]]],[11,"is_empty","","Returns `true` if the set contains no elements.",4,[[]]],[11,"iter","","Creates an iterator over this set that visits the values…",4,[[],["aaiter",3]]],[11,"insert","","Adds a value to the set.",4,[[]]],[11,"smallest","","Returns the smallest element of the set.",4,[[],["option",4]]],[11,"largest","","Returns the largest element of the set.",4,[[],["option",4]]],[11,"contains","","Returns `true` if the set contains an element with the…",4,[[]]],[11,"smallest_geq_than","","Returns the smallest element of the set that is greater or…",4,[[],["option",4]]],[11,"largest_leq_than","","Returns the largest element of the set that is smaller or…",4,[[],["option",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","aatree::iter","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"par_bridge","","",6,[[],["iterbridge",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"par_bridge","","",7,[[],["iterbridge",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","aatree::node","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",1,[[]]],[11,"into_iter","aatree","",3,[[]]],[11,"into_iter","","",4,[[],["aaintoiter",3]]],[11,"next","aatree::iter","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"clone","aatree::node","",1,[[],["aanode",4]]],[11,"clone","aatree","",5,[[],["aatreemapentry",3]]],[11,"clone","","",3,[[],["aatreemap",3]]],[11,"clone","","",4,[[],["aatreeset",3]]],[11,"default","aatree::node","",1,[[]]],[11,"default","aatree","",3,[[]]],[11,"default","","",4,[[]]],[11,"cmp","","",5,[[],["ordering",4]]],[11,"eq","aatree::node","",1,[[["aanode",4]]]],[11,"ne","","",1,[[["aanode",4]]]],[11,"eq","aatree","",5,[[]]],[11,"eq","","",5,[[]]],[11,"partial_cmp","","",5,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",5,[[],[["ordering",4],["option",4]]]],[11,"fmt","aatree::iter","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","aatree::node","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","aatree","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"from_iter","","",3,[[]]],[11,"from_iter","","",3,[[]]],[11,"from_iter","","",4,[[]]]],"p":[[4,"TraverseStep"],[4,"AANode"],[13,"Node"],[3,"AATreeMap"],[3,"AATreeSet"],[3,"AATreeMapEntry"],[3,"AAIter"],[3,"AAIntoIter"]]},\
"atty":{"doc":"atty is a simple utility that answers one question","i":[[4,"Stream","atty","possible stream sources",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[13,"Stdin","","",0,null],[5,"is","","returns true if this is a tty",null,[[["stream",4]]]],[5,"isnt","","returns true if this is not a tty",null,[[["stream",4]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["stream",4]]]],"p":[[4,"Stream"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]},\
"bstr":{"doc":"An experimental byte string library.","i":[[3,"BStr","bstr","A wrapper for `&[u8]` that provides convenient string…",null,null],[3,"BString","","A wrapper for `Vec<u8>` that provides convenient string…",null,null],[3,"Bytes","","An iterator over the bytes in a byte string.",null,null],[3,"Fields","","An iterator over the fields in a byte string, separated by…",null,null],[3,"FieldsWith","","An iterator over fields in the byte string, separated by a…",null,null],[3,"Find","","An iterator over non-overlapping substring matches.",null,null],[3,"FindReverse","","An iterator over non-overlapping substring matches in…",null,null],[3,"Finder","","A single substring searcher fixed to a particular needle.",null,null],[3,"FinderReverse","","A single substring reverse searcher fixed to a particular…",null,null],[3,"Lines","","An iterator over all lines in a byte string, without their…",null,null],[3,"LinesWithTerminator","","An iterator over all lines in a byte string, including…",null,null],[3,"Split","","An iterator over substrings in a byte string, split by a…",null,null],[3,"SplitN","","An iterator over at most `n` substrings in a byte string,…",null,null],[3,"SplitNReverse","","An iterator over at most `n` substrings in a byte string,…",null,null],[3,"SplitReverse","","An iterator over substrings in a byte string, split by a…",null,null],[3,"DrainBytes","","A draining byte oriented iterator for `Vec<u8>`.",null,null],[3,"FromUtf8Error","","An error that may occur when converting a `Vec<u8>` to a…",null,null],[3,"GraphemeIndices","","An iterator over grapheme clusters in a byte string and…",null,null],[3,"Graphemes","","An iterator over grapheme clusters in a byte string.",null,null],[3,"SentenceIndices","","An iterator over sentences in a byte string, along with…",null,null],[3,"Sentences","","An iterator over sentences in a byte string.",null,null],[3,"WordIndices","","An iterator over words in a byte string and their byte…",null,null],[3,"Words","","An iterator over words in a byte string.",null,null],[3,"WordsWithBreakIndices","","An iterator over all word breaks in a byte string, along…",null,null],[3,"WordsWithBreaks","","An iterator over all word breaks in a byte string.",null,null],[3,"CharIndices","","An iterator over Unicode scalar values in a byte string…",null,null],[3,"Chars","","An iterator over Unicode scalar values in a byte string.",null,null],[3,"Utf8Chunk","","A chunk of valid UTF-8, possibly followed by invalid UTF-8…",null,null],[3,"Utf8Chunks","","An iterator over chunks of valid UTF-8 in a byte slice.",null,null],[3,"Utf8Error","","An error that occurs when UTF-8 decoding fails.",null,null],[5,"B","","A short-hand constructor for building a `&[u8]`.",null,[[]]],[5,"concat","","Concatenate the elements given by the iterator together…",null,[[],["vec",3]]],[5,"join","","Join the elements given by the iterator with the given…",null,[[],["vec",3]]],[5,"decode_utf8","","UTF-8 decode a single Unicode scalar value from the…",null,[[["asref",8]]]],[5,"decode_last_utf8","","UTF-8 decode a single Unicode scalar value from the end of…",null,[[["asref",8]]]],[11,"new","","Create a new finder for the given needle.",0,[[],["finder",3]]],[11,"into_owned","","Convert this finder into its owned variant, such that it…",0,[[],["finder",3]]],[11,"needle","","Returns the needle that this finder searches for.",0,[[]]],[11,"find","","Returns the index of the first occurrence of this needle…",0,[[["asref",8]],["option",4]]],[11,"new","","Create a new reverse finder for the given needle.",1,[[],["finderreverse",3]]],[11,"into_owned","","Convert this finder into its owned variant, such that it…",1,[[],["finderreverse",3]]],[11,"needle","","Returns the needle that this finder searches for.",1,[[]]],[11,"rfind","","Returns the index of the last occurrence of this needle in…",1,[[["asref",8]],["option",4]]],[11,"as_slice","","Views the remaining underlying data as a subslice of the…",2,[[]]],[11,"as_bytes","","Return the original bytes as a slice that failed to…",3,[[]]],[11,"into_vec","","Consume this error and return the original byte string…",3,[[],["vec",3]]],[11,"utf8_error","","Return the underlying UTF-8 error that occurred. This…",3,[[],["utf8error",3]]],[0,"io","","Utilities for working with I/O using byte strings.",null,null],[3,"ByteLines","bstr::io","An iterator over lines from an instance of…",null,null],[3,"ByteRecords","","An iterator over records from an instance of…",null,null],[8,"BufReadExt","","An extention trait for `std::io::BufRead` which provides…",null,null],[11,"byte_lines","","Returns an iterator over the lines of this reader, where…",4,[[],["bytelines",3]]],[11,"byte_records","","Returns an iterator over byte-terminated records of this…",4,[[],["byterecords",3]]],[11,"for_byte_line","","Executes the given closure on each line in the underlying…",4,[[],["result",6]]],[11,"for_byte_record","","Executes the given closure on each byte-terminated record…",4,[[],["result",6]]],[11,"for_byte_line_with_terminator","","Executes the given closure on each line in the underlying…",4,[[],["result",6]]],[11,"for_byte_record_with_terminator","","Executes the given closure on each byte-terminated record…",4,[[],["result",6]]],[11,"as_bytes","bstr","View the underlying data as a subslice of the original data.",5,[[]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",6,[[]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",7,[[]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",8,[[]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",9,[[]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",10,[[]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",11,[[]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",12,[[]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",13,[[]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",14,[[]]],[11,"valid","","Returns the (possibly empty) valid UTF-8 bytes in this…",15,[[]]],[11,"invalid","","Returns the (possibly empty) invalid UTF-8 bytes in this…",15,[[]]],[11,"incomplete","","Returns whether the invalid sequence might still become…",15,[[]]],[11,"valid_up_to","","Returns the byte index of the position immediately…",16,[[]]],[11,"error_len","","Returns the total number of invalid UTF-8 bytes…",16,[[],["option",4]]],[8,"ByteSlice","","A trait that extends `&[u8]` with string oriented methods.",null,null],[11,"as_bstr","","Return this byte slice as a `&BStr`.",17,[[],["bstr",3]]],[11,"as_bstr_mut","","Return this byte slice as a `&mut BStr`.",17,[[],["bstr",3]]],[11,"from_os_str","","Create an immutable byte string from an OS string slice.",17,[[["osstr",3]],["option",4]]],[11,"from_path","","Create an immutable byte string from a file path.",17,[[["path",3]],["option",4]]],[11,"to_str","","Safely convert this byte string into a `&str` if it\'s…",17,[[],[["utf8error",3],["result",4]]]],[11,"to_str_unchecked","","Unsafely convert this byte string into a `&str`, without…",17,[[]]],[11,"to_str_lossy","","Convert this byte string to a valid UTF-8 string by…",17,[[],["cow",4]]],[11,"to_str_lossy_into","","Copy the contents of this byte string into the given owned…",17,[[["string",3]]]],[11,"to_os_str","","Create an OS string slice from this byte string.",17,[[],[["osstr",3],["utf8error",3],["result",4]]]],[11,"to_os_str_lossy","","Lossily create an OS string slice from this byte string.",17,[[],[["cow",4],["osstr",3]]]],[11,"to_path","","Create a path slice from this byte string.",17,[[],[["utf8error",3],["result",4],["path",3]]]],[11,"to_path_lossy","","Lossily create a path slice from this byte string.",17,[[],[["cow",4],["path",3]]]],[11,"repeatn","","Create a new byte string by repeating this byte string `n`…",17,[[],["vec",3]]],[11,"contains_str","","Returns true if and only if this byte string contains the…",17,[[["asref",8]]]],[11,"starts_with_str","","Returns true if and only if this byte string has the given…",17,[[["asref",8]]]],[11,"ends_with_str","","Returns true if and only if this byte string has the given…",17,[[["asref",8]]]],[11,"find","","Returns the index of the first occurrence of the given…",17,[[["asref",8]],["option",4]]],[11,"rfind","","Returns the index of the last occurrence of the given…",17,[[["asref",8]],["option",4]]],[11,"find_iter","","Returns an iterator of the non-overlapping occurrences of…",17,[[],["find",3]]],[11,"rfind_iter","","Returns an iterator of the non-overlapping occurrences of…",17,[[],["findreverse",3]]],[11,"find_byte","","Returns the index of the first occurrence of the given…",17,[[],["option",4]]],[11,"rfind_byte","","Returns the index of the last occurrence of the given…",17,[[],["option",4]]],[11,"find_char","","Returns the index of the first occurrence of the given…",17,[[],["option",4]]],[11,"rfind_char","","Returns the index of the last occurrence of the given…",17,[[],["option",4]]],[11,"find_byteset","","Returns the index of the first occurrence of any of the…",17,[[["asref",8]],["option",4]]],[11,"find_not_byteset","","Returns the index of the first occurrence of a byte that…",17,[[["asref",8]],["option",4]]],[11,"rfind_byteset","","Returns the index of the last occurrence of any of the…",17,[[["asref",8]],["option",4]]],[11,"rfind_not_byteset","","Returns the index of the last occurrence of a byte that is…",17,[[["asref",8]],["option",4]]],[11,"fields","","Returns an iterator over the fields in a byte string,…",17,[[],["fields",3]]],[11,"fields_with","","Returns an iterator over the fields in a byte string,…",17,[[["fnmut",8]],[["fnmut",8],["fieldswith",3]]]],[11,"split_str","","Returns an iterator over substrings of this byte string,…",17,[[],["split",3]]],[11,"rsplit_str","","Returns an iterator over substrings of this byte string,…",17,[[],["splitreverse",3]]],[11,"splitn_str","","Returns an iterator of at most `limit` substrings of this…",17,[[],["splitn",3]]],[11,"rsplitn_str","","Returns an iterator of at most `limit` substrings of this…",17,[[],["splitnreverse",3]]],[11,"replace","","Replace all matches of the given needle with the given…",17,[[["asref",8]],["vec",3]]],[11,"replacen","","Replace up to `limit` matches of the given needle with the…",17,[[["asref",8]],["vec",3]]],[11,"replace_into","","Replace all matches of the given needle with the given…",17,[[["asref",8],["vec",3]]]],[11,"replacen_into","","Replace up to `limit` matches of the given needle with the…",17,[[["asref",8],["vec",3]]]],[11,"bytes","","Returns an iterator over the bytes in this byte string.",17,[[],["bytes",3]]],[11,"chars","","Returns an iterator over the Unicode scalar values in this…",17,[[],["chars",3]]],[11,"char_indices","","Returns an iterator over the Unicode scalar values in this…",17,[[],["charindices",3]]],[11,"utf8_chunks","","Iterate over chunks of valid UTF-8.",17,[[],["utf8chunks",3]]],[11,"graphemes","","Returns an iterator over the grapheme clusters in this…",17,[[],["graphemes",3]]],[11,"grapheme_indices","","Returns an iterator over the grapheme clusters in this…",17,[[],["graphemeindices",3]]],[11,"words","","Returns an iterator over the words in this byte string. If…",17,[[],["words",3]]],[11,"word_indices","","Returns an iterator over the words in this byte string…",17,[[],["wordindices",3]]],[11,"words_with_breaks","","Returns an iterator over the words in this byte string,…",17,[[],["wordswithbreaks",3]]],[11,"words_with_break_indices","","Returns an iterator over the words and their byte offsets…",17,[[],["wordswithbreakindices",3]]],[11,"sentences","","Returns an iterator over the sentences in this byte string.",17,[[],["sentences",3]]],[11,"sentence_indices","","Returns an iterator over the sentences in this byte string…",17,[[],["sentenceindices",3]]],[11,"lines","","An iterator over all lines in a byte string, without their…",17,[[],["lines",3]]],[11,"lines_with_terminator","","An iterator over all lines in a byte string, including…",17,[[],["lineswithterminator",3]]],[11,"trim","","Return a byte string slice with leading and trailing…",17,[[]]],[11,"trim_start","","Return a byte string slice with leading whitespace removed.",17,[[]]],[11,"trim_end","","Return a byte string slice with trailing whitespace removed.",17,[[]]],[11,"trim_with","","Return a byte string slice with leading and trailing…",17,[[["fnmut",8]]]],[11,"trim_start_with","","Return a byte string slice with leading characters…",17,[[["fnmut",8]]]],[11,"trim_end_with","","Return a byte string slice with trailing characters…",17,[[["fnmut",8]]]],[11,"to_lowercase","","Returns a new `Vec<u8>` containing the lowercase…",17,[[],["vec",3]]],[11,"to_lowercase_into","","Writes the lowercase equivalent of this byte string into…",17,[[["vec",3]]]],[11,"to_ascii_lowercase","","Returns a new `Vec<u8>` containing the ASCII lowercase…",17,[[],["vec",3]]],[11,"make_ascii_lowercase","","Convert this byte string to its lowercase ASCII equivalent…",17,[[]]],[11,"to_uppercase","","Returns a new `Vec<u8>` containing the uppercase…",17,[[],["vec",3]]],[11,"to_uppercase_into","","Writes the uppercase equivalent of this byte string into…",17,[[["vec",3]]]],[11,"to_ascii_uppercase","","Returns a new `Vec<u8>` containing the ASCII uppercase…",17,[[],["vec",3]]],[11,"make_ascii_uppercase","","Convert this byte string to its uppercase ASCII equivalent…",17,[[]]],[11,"reverse_bytes","","Reverse the bytes in this string, in place.",17,[[]]],[11,"reverse_chars","","Reverse the codepoints in this string, in place.",17,[[]]],[11,"reverse_graphemes","","Reverse the graphemes in this string, in place.",17,[[]]],[11,"is_ascii","","Returns true if and only if every byte in this byte string…",17,[[]]],[11,"is_utf8","","Returns true if and only if the entire byte string is…",17,[[]]],[11,"last_byte","","Returns the last byte in this byte string, if it\'s…",17,[[],["option",4]]],[11,"find_non_ascii_byte","","Returns the index of the first non-ASCII byte in this byte…",17,[[],["option",4]]],[11,"copy_within_str","","Copies elements from one part of the slice to another part…",17,[[]]],[8,"ByteVec","","A trait that extends `Vec<u8>` with string oriented methods.",null,null],[11,"from_slice","","Create a new owned byte string from the given byte slice.",18,[[["asref",8]],["vec",3]]],[11,"from_os_string","","Create a new byte string from an owned OS string.",18,[[["osstring",3]],[["vec",3],["osstring",3],["result",4]]]],[11,"from_os_str_lossy","","Lossily create a new byte string from an OS string slice.",18,[[["osstr",3]],["cow",4]]],[11,"from_path_buf","","Create a new byte string from an owned file path.",18,[[["pathbuf",3]],[["vec",3],["pathbuf",3],["result",4]]]],[11,"from_path_lossy","","Lossily create a new byte string from a file path.",18,[[["path",3]],["cow",4]]],[11,"push_byte","","Appends the given byte to the end of this byte string.",18,[[]]],[11,"push_char","","Appends the given `char` to the end of this byte string.",18,[[]]],[11,"push_str","","Appends the given slice to the end of this byte string.…",18,[[["asref",8]]]],[11,"into_string","","Converts a `Vec<u8>` into a `String` if and only if this…",18,[[],[["fromutf8error",3],["string",3],["result",4]]]],[11,"into_string_lossy","","Lossily converts a `Vec<u8>` into a `String`. If this byte…",18,[[],["string",3]]],[11,"into_string_unchecked","","Unsafely convert this byte string into a `String`, without…",18,[[],["string",3]]],[11,"into_os_string","","Converts this byte string into an OS string, in place.",18,[[],[["result",4],["vec",3],["osstring",3]]]],[11,"into_os_string_lossy","","Lossily converts this byte string into an OS string, in…",18,[[],["osstring",3]]],[11,"into_path_buf","","Converts this byte string into an owned file path, in place.",18,[[],[["pathbuf",3],["result",4],["vec",3]]]],[11,"into_path_buf_lossy","","Lossily converts this byte string into an owned file path,…",18,[[],["pathbuf",3]]],[11,"pop_byte","","Removes the last byte from this `Vec<u8>` and returns it.",18,[[],["option",4]]],[11,"pop_char","","Removes the last codepoint from this `Vec<u8>` and returns…",18,[[],["option",4]]],[11,"remove_char","","Removes a `char` from this `Vec<u8>` at the given byte…",18,[[]]],[11,"insert_char","","Inserts the given codepoint into this `Vec<u8>` at a…",18,[[]]],[11,"insert_str","","Inserts the given byte string into this byte string at a…",18,[[["asref",8]]]],[11,"replace_range","","Removes the specified range in this byte string and…",18,[[]]],[11,"drain_bytes","","Creates a draining iterator that removes the specified…",18,[[],["drainbytes",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"into_iter","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into_iter","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","bstr::io","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into_iter","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"as_mut","bstr","",20,[[]]],[11,"as_mut","","",20,[[],["bstr",3]]],[11,"as_mut","","",19,[[]]],[11,"as_ref","","",20,[[]]],[11,"as_ref","","",20,[[],["bstr",3]]],[11,"as_ref","","",19,[[]]],[11,"from","","",20,[[],["bstring",3]]],[11,"from","","",20,[[["vec",3]],["bstring",3]]],[11,"from","","",20,[[],["bstring",3]]],[11,"from","","",20,[[["string",3]],["bstring",3]]],[11,"from","","",20,[[["bstr",3]],["bstring",3]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next_back","","",31,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",13,[[],["option",4]]],[11,"next_back","","",14,[[],["option",4]]],[11,"len","","",2,[[]]],[11,"len","","",31,[[]]],[11,"next","","",23,[[],["option",4]]],[11,"next","","",24,[[],["option",4]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"next","","",22,[[],["option",4]]],[11,"next","","",27,[[],["option",4]]],[11,"next","","",30,[[],["option",4]]],[11,"next","","",28,[[],["option",4]]],[11,"next","","",29,[[],["option",4]]],[11,"next","","",25,[[],["option",4]]],[11,"next","","",26,[[],["option",4]]],[11,"next","","",31,[[],["option",4]]],[11,"next","bstr::io","",33,[[],[["option",4],["result",6]]]],[11,"next","","",34,[[],[["option",4],["result",6]]]],[11,"next","bstr","",5,[[],["option",4]]],[11,"next","","",6,[[],["option",4]]],[11,"next","","",7,[[],["option",4]]],[11,"next","","",8,[[],["option",4]]],[11,"next","","",9,[[],["option",4]]],[11,"next","","",10,[[],["option",4]]],[11,"next","","",11,[[],["option",4]]],[11,"next","","",12,[[],["option",4]]],[11,"next","","",13,[[],["option",4]]],[11,"next","","",14,[[],["option",4]]],[11,"next","","",32,[[],[["utf8chunk",3],["option",4]]]],[11,"size_hint","","",32,[[]]],[11,"clone","","",20,[[],["bstring",3]]],[11,"clone","","",0,[[],["finder",3]]],[11,"clone","","",1,[[],["finderreverse",3]]],[11,"clone","","",2,[[],["bytes",3]]],[11,"clone","","",5,[[],["graphemes",3]]],[11,"clone","","",6,[[],["graphemeindices",3]]],[11,"clone","","",7,[[],["sentences",3]]],[11,"clone","","",8,[[],["sentenceindices",3]]],[11,"clone","","",9,[[],["words",3]]],[11,"clone","","",10,[[],["wordindices",3]]],[11,"clone","","",11,[[],["wordswithbreaks",3]]],[11,"clone","","",12,[[],["wordswithbreakindices",3]]],[11,"clone","","",13,[[],["chars",3]]],[11,"clone","","",14,[[],["charindices",3]]],[11,"clone","","",32,[[],["utf8chunks",3]]],[11,"default","","",20,[[],["bstring",3]]],[11,"cmp","","",20,[[["bstring",3]],["ordering",4]]],[11,"cmp","","",19,[[["bstr",3]],["ordering",4]]],[11,"eq","","",3,[[["fromutf8error",3]]]],[11,"ne","","",3,[[["fromutf8error",3]]]],[11,"eq","","",20,[[["bstring",3]]]],[11,"eq","","",20,[[["vec",3]]]],[11,"eq","","",20,[[]]],[11,"eq","","",20,[[]]],[11,"eq","","",20,[[["string",3]]]],[11,"eq","","",20,[[]]],[11,"eq","","",20,[[]]],[11,"eq","","",20,[[["bstr",3]]]],[11,"eq","","",19,[[["bstring",3]]]],[11,"eq","","",20,[[["bstr",3]]]],[11,"eq","","",19,[[["bstr",3]]]],[11,"eq","","",19,[[]]],[11,"eq","","",19,[[]]],[11,"eq","","",19,[[]]],[11,"eq","","",19,[[]]],[11,"eq","","",19,[[["vec",3]]]],[11,"eq","","",19,[[["string",3]]]],[11,"eq","","",16,[[["utf8error",3]]]],[11,"ne","","",16,[[["utf8error",3]]]],[11,"partial_cmp","","",20,[[["bstring",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",20,[[["vec",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",20,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",20,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",20,[[["string",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",20,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",20,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",20,[[["bstr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",19,[[["bstring",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",20,[[["bstr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",19,[[["bstr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",19,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",19,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",19,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",19,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",19,[[["vec",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",19,[[["string",3]],[["ordering",4],["option",4]]]],[11,"to_owned","","",19,[[],["bstring",3]]],[11,"deref","","",20,[[],["vec",3]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",20,[[],["vec",3]]],[11,"deref_mut","","",19,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","bstr::io","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","bstr","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"index","","",19,[[]]],[11,"index","","",19,[[["rangefull",3]],["bstr",3]]],[11,"index","","",19,[[["range",3]],["bstr",3]]],[11,"index","","",19,[[["rangeinclusive",3]],["bstr",3]]],[11,"index","","",19,[[["rangefrom",3]],["bstr",3]]],[11,"index","","",19,[[["rangeto",3]],["bstr",3]]],[11,"index","","",19,[[["rangetoinclusive",3]],["bstr",3]]],[11,"index_mut","","",19,[[]]],[11,"index_mut","","",19,[[["rangefull",3]],["bstr",3]]],[11,"index_mut","","",19,[[["range",3]],["bstr",3]]],[11,"index_mut","","",19,[[["rangeinclusive",3]],["bstr",3]]],[11,"index_mut","","",19,[[["rangefrom",3]],["bstr",3]]],[11,"index_mut","","",19,[[["rangeto",3]],["bstr",3]]],[11,"index_mut","","",19,[[["rangetoinclusive",3]],["bstr",3]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"borrow","","",20,[[],["bstr",3]]],[11,"from_iter","","",20,[[["intoiterator",8]],["bstring",3]]],[11,"from_iter","","",20,[[["intoiterator",8]],["bstring",3]]],[11,"from_iter","","",20,[[["intoiterator",8]],["bstring",3]]],[11,"from_iter","","",20,[[["intoiterator",8]],["bstring",3]]],[11,"from_iter","","",20,[[["intoiterator",8]],["bstring",3]]],[11,"from_iter","","",20,[[["intoiterator",8]],["bstring",3]]],[11,"description","","",3,[[]]],[11,"description","","",16,[[]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"deserialize","","",20,[[],[["bstring",3],["result",4]]]],[11,"as_bstr","","Return this byte slice as a `&BStr`.",17,[[],["bstr",3]]],[11,"as_bstr_mut","","Return this byte slice as a `&mut BStr`.",17,[[],["bstr",3]]],[11,"from_os_str","","Create an immutable byte string from an OS string slice.",17,[[["osstr",3]],["option",4]]],[11,"from_path","","Create an immutable byte string from a file path.",17,[[["path",3]],["option",4]]],[11,"to_str","","Safely convert this byte string into a `&str` if it\'s…",17,[[],[["utf8error",3],["result",4]]]],[11,"to_str_unchecked","","Unsafely convert this byte string into a `&str`, without…",17,[[]]],[11,"to_str_lossy","","Convert this byte string to a valid UTF-8 string by…",17,[[],["cow",4]]],[11,"to_str_lossy_into","","Copy the contents of this byte string into the given owned…",17,[[["string",3]]]],[11,"to_os_str","","Create an OS string slice from this byte string.",17,[[],[["osstr",3],["utf8error",3],["result",4]]]],[11,"to_os_str_lossy","","Lossily create an OS string slice from this byte string.",17,[[],[["cow",4],["osstr",3]]]],[11,"to_path","","Create a path slice from this byte string.",17,[[],[["utf8error",3],["result",4],["path",3]]]],[11,"to_path_lossy","","Lossily create a path slice from this byte string.",17,[[],[["cow",4],["path",3]]]],[11,"repeatn","","Create a new byte string by repeating this byte string `n`…",17,[[],["vec",3]]],[11,"contains_str","","Returns true if and only if this byte string contains the…",17,[[["asref",8]]]],[11,"starts_with_str","","Returns true if and only if this byte string has the given…",17,[[["asref",8]]]],[11,"ends_with_str","","Returns true if and only if this byte string has the given…",17,[[["asref",8]]]],[11,"find","","Returns the index of the first occurrence of the given…",17,[[["asref",8]],["option",4]]],[11,"rfind","","Returns the index of the last occurrence of the given…",17,[[["asref",8]],["option",4]]],[11,"find_iter","","Returns an iterator of the non-overlapping occurrences of…",17,[[],["find",3]]],[11,"rfind_iter","","Returns an iterator of the non-overlapping occurrences of…",17,[[],["findreverse",3]]],[11,"find_byte","","Returns the index of the first occurrence of the given…",17,[[],["option",4]]],[11,"rfind_byte","","Returns the index of the last occurrence of the given…",17,[[],["option",4]]],[11,"find_char","","Returns the index of the first occurrence of the given…",17,[[],["option",4]]],[11,"rfind_char","","Returns the index of the last occurrence of the given…",17,[[],["option",4]]],[11,"find_byteset","","Returns the index of the first occurrence of any of the…",17,[[["asref",8]],["option",4]]],[11,"find_not_byteset","","Returns the index of the first occurrence of a byte that…",17,[[["asref",8]],["option",4]]],[11,"rfind_byteset","","Returns the index of the last occurrence of any of the…",17,[[["asref",8]],["option",4]]],[11,"rfind_not_byteset","","Returns the index of the last occurrence of a byte that is…",17,[[["asref",8]],["option",4]]],[11,"fields","","Returns an iterator over the fields in a byte string,…",17,[[],["fields",3]]],[11,"fields_with","","Returns an iterator over the fields in a byte string,…",17,[[["fnmut",8]],[["fnmut",8],["fieldswith",3]]]],[11,"split_str","","Returns an iterator over substrings of this byte string,…",17,[[],["split",3]]],[11,"rsplit_str","","Returns an iterator over substrings of this byte string,…",17,[[],["splitreverse",3]]],[11,"splitn_str","","Returns an iterator of at most `limit` substrings of this…",17,[[],["splitn",3]]],[11,"rsplitn_str","","Returns an iterator of at most `limit` substrings of this…",17,[[],["splitnreverse",3]]],[11,"replace","","Replace all matches of the given needle with the given…",17,[[["asref",8]],["vec",3]]],[11,"replacen","","Replace up to `limit` matches of the given needle with the…",17,[[["asref",8]],["vec",3]]],[11,"replace_into","","Replace all matches of the given needle with the given…",17,[[["asref",8],["vec",3]]]],[11,"replacen_into","","Replace up to `limit` matches of the given needle with the…",17,[[["asref",8],["vec",3]]]],[11,"bytes","","Returns an iterator over the bytes in this byte string.",17,[[],["bytes",3]]],[11,"chars","","Returns an iterator over the Unicode scalar values in this…",17,[[],["chars",3]]],[11,"char_indices","","Returns an iterator over the Unicode scalar values in this…",17,[[],["charindices",3]]],[11,"utf8_chunks","","Iterate over chunks of valid UTF-8.",17,[[],["utf8chunks",3]]],[11,"graphemes","","Returns an iterator over the grapheme clusters in this…",17,[[],["graphemes",3]]],[11,"grapheme_indices","","Returns an iterator over the grapheme clusters in this…",17,[[],["graphemeindices",3]]],[11,"words","","Returns an iterator over the words in this byte string. If…",17,[[],["words",3]]],[11,"word_indices","","Returns an iterator over the words in this byte string…",17,[[],["wordindices",3]]],[11,"words_with_breaks","","Returns an iterator over the words in this byte string,…",17,[[],["wordswithbreaks",3]]],[11,"words_with_break_indices","","Returns an iterator over the words and their byte offsets…",17,[[],["wordswithbreakindices",3]]],[11,"sentences","","Returns an iterator over the sentences in this byte string.",17,[[],["sentences",3]]],[11,"sentence_indices","","Returns an iterator over the sentences in this byte string…",17,[[],["sentenceindices",3]]],[11,"lines","","An iterator over all lines in a byte string, without their…",17,[[],["lines",3]]],[11,"lines_with_terminator","","An iterator over all lines in a byte string, including…",17,[[],["lineswithterminator",3]]],[11,"trim","","Return a byte string slice with leading and trailing…",17,[[]]],[11,"trim_start","","Return a byte string slice with leading whitespace removed.",17,[[]]],[11,"trim_end","","Return a byte string slice with trailing whitespace removed.",17,[[]]],[11,"trim_with","","Return a byte string slice with leading and trailing…",17,[[["fnmut",8]]]],[11,"trim_start_with","","Return a byte string slice with leading characters…",17,[[["fnmut",8]]]],[11,"trim_end_with","","Return a byte string slice with trailing characters…",17,[[["fnmut",8]]]],[11,"to_lowercase","","Returns a new `Vec<u8>` containing the lowercase…",17,[[],["vec",3]]],[11,"to_lowercase_into","","Writes the lowercase equivalent of this byte string into…",17,[[["vec",3]]]],[11,"to_ascii_lowercase","","Returns a new `Vec<u8>` containing the ASCII lowercase…",17,[[],["vec",3]]],[11,"make_ascii_lowercase","","Convert this byte string to its lowercase ASCII equivalent…",17,[[]]],[11,"to_uppercase","","Returns a new `Vec<u8>` containing the uppercase…",17,[[],["vec",3]]],[11,"to_uppercase_into","","Writes the uppercase equivalent of this byte string into…",17,[[["vec",3]]]],[11,"to_ascii_uppercase","","Returns a new `Vec<u8>` containing the ASCII uppercase…",17,[[],["vec",3]]],[11,"make_ascii_uppercase","","Convert this byte string to its uppercase ASCII equivalent…",17,[[]]],[11,"reverse_bytes","","Reverse the bytes in this string, in place.",17,[[]]],[11,"reverse_chars","","Reverse the codepoints in this string, in place.",17,[[]]],[11,"reverse_graphemes","","Reverse the graphemes in this string, in place.",17,[[]]],[11,"is_ascii","","Returns true if and only if every byte in this byte string…",17,[[]]],[11,"is_utf8","","Returns true if and only if the entire byte string is…",17,[[]]],[11,"last_byte","","Returns the last byte in this byte string, if it\'s…",17,[[],["option",4]]],[11,"find_non_ascii_byte","","Returns the index of the first non-ASCII byte in this byte…",17,[[],["option",4]]],[11,"copy_within_str","","Copies elements from one part of the slice to another part…",17,[[]]],[11,"from_slice","","Create a new owned byte string from the given byte slice.",18,[[["asref",8]],["vec",3]]],[11,"from_os_string","","Create a new byte string from an owned OS string.",18,[[["osstring",3]],[["vec",3],["osstring",3],["result",4]]]],[11,"from_os_str_lossy","","Lossily create a new byte string from an OS string slice.",18,[[["osstr",3]],["cow",4]]],[11,"from_path_buf","","Create a new byte string from an owned file path.",18,[[["pathbuf",3]],[["vec",3],["pathbuf",3],["result",4]]]],[11,"from_path_lossy","","Lossily create a new byte string from a file path.",18,[[["path",3]],["cow",4]]],[11,"push_byte","","Appends the given byte to the end of this byte string.",18,[[]]],[11,"push_char","","Appends the given `char` to the end of this byte string.",18,[[]]],[11,"push_str","","Appends the given slice to the end of this byte string.…",18,[[["asref",8]]]],[11,"into_string","","Converts a `Vec<u8>` into a `String` if and only if this…",18,[[],[["fromutf8error",3],["string",3],["result",4]]]],[11,"into_string_lossy","","Lossily converts a `Vec<u8>` into a `String`. If this byte…",18,[[],["string",3]]],[11,"into_string_unchecked","","Unsafely convert this byte string into a `String`, without…",18,[[],["string",3]]],[11,"into_os_string","","Converts this byte string into an OS string, in place.",18,[[],[["result",4],["vec",3],["osstring",3]]]],[11,"into_os_string_lossy","","Lossily converts this byte string into an OS string, in…",18,[[],["osstring",3]]],[11,"into_path_buf","","Converts this byte string into an owned file path, in place.",18,[[],[["pathbuf",3],["result",4],["vec",3]]]],[11,"into_path_buf_lossy","","Lossily converts this byte string into an owned file path,…",18,[[],["pathbuf",3]]],[11,"pop_byte","","Removes the last byte from this `Vec<u8>` and returns it.",18,[[],["option",4]]],[11,"pop_char","","Removes the last codepoint from this `Vec<u8>` and returns…",18,[[],["option",4]]],[11,"remove_char","","Removes a `char` from this `Vec<u8>` at the given byte…",18,[[]]],[11,"insert_char","","Inserts the given codepoint into this `Vec<u8>` at a…",18,[[]]],[11,"insert_str","","Inserts the given byte string into this byte string at a…",18,[[["asref",8]]]],[11,"replace_range","","Removes the specified range in this byte string and…",18,[[]]],[11,"drain_bytes","","Creates a draining iterator that removes the specified…",18,[[],["drainbytes",3]]]],"p":[[3,"Finder"],[3,"FinderReverse"],[3,"Bytes"],[3,"FromUtf8Error"],[8,"BufReadExt"],[3,"Graphemes"],[3,"GraphemeIndices"],[3,"Sentences"],[3,"SentenceIndices"],[3,"Words"],[3,"WordIndices"],[3,"WordsWithBreaks"],[3,"WordsWithBreakIndices"],[3,"Chars"],[3,"CharIndices"],[3,"Utf8Chunk"],[3,"Utf8Error"],[8,"ByteSlice"],[8,"ByteVec"],[3,"BStr"],[3,"BString"],[3,"Fields"],[3,"FieldsWith"],[3,"Find"],[3,"FindReverse"],[3,"Lines"],[3,"LinesWithTerminator"],[3,"Split"],[3,"SplitN"],[3,"SplitNReverse"],[3,"SplitReverse"],[3,"DrainBytes"],[3,"Utf8Chunks"],[3,"ByteLines"],[3,"ByteRecords"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and…","i":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for `BigEndian`.",null,null],[6,"LE","","A type alias for `LittleEndian`.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",0,[[]]],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",0,[[]]],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",0,[[]]],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",0,[[]]],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",0,[[]]],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",0,[[]]],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",0,[[]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",0,[[]]],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",0,[[]]],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",0,[[]]],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",0,[[]]],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",0,[[]]],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",0,[[]]],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",0,[[]]],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,[[]]],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,[[]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",0,[[]]],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",0,[[]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",0,[[]]],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",0,[[]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",0,[[]]],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",0,[[]]],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",0,[[]]],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",0,[[]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[]]],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",0,[[]]],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",0,[[]]],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",0,[[]]],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",0,[[]]],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",0,[[]]],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",0,[[]]],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,[[]]],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,[[]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",0,[[]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",0,[[]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",0,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",0,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",0,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",0,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",0,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",0,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",0,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",0,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",0,[[]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",0,[[]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",0,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",0,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",0,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",0,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",0,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",0,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",0,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",0,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",0,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",0,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",0,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",0,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",0,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",0,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",0,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"read_u16","","",1,[[]]],[11,"read_u32","","",1,[[]]],[11,"read_u64","","",1,[[]]],[11,"read_u128","","",1,[[]]],[11,"read_uint","","",1,[[]]],[11,"read_uint128","","",1,[[]]],[11,"write_u16","","",1,[[]]],[11,"write_u32","","",1,[[]]],[11,"write_u64","","",1,[[]]],[11,"write_u128","","",1,[[]]],[11,"write_uint","","",1,[[]]],[11,"write_uint128","","",1,[[]]],[11,"read_u16_into","","",1,[[]]],[11,"read_u32_into","","",1,[[]]],[11,"read_u64_into","","",1,[[]]],[11,"read_u128_into","","",1,[[]]],[11,"write_u16_into","","",1,[[]]],[11,"write_u32_into","","",1,[[]]],[11,"write_u64_into","","",1,[[]]],[11,"write_u128_into","","",1,[[]]],[11,"from_slice_u16","","",1,[[]]],[11,"from_slice_u32","","",1,[[]]],[11,"from_slice_u64","","",1,[[]]],[11,"from_slice_u128","","",1,[[]]],[11,"from_slice_f32","","",1,[[]]],[11,"from_slice_f64","","",1,[[]]],[11,"read_u16","","",2,[[]]],[11,"read_u32","","",2,[[]]],[11,"read_u64","","",2,[[]]],[11,"read_u128","","",2,[[]]],[11,"read_uint","","",2,[[]]],[11,"read_uint128","","",2,[[]]],[11,"write_u16","","",2,[[]]],[11,"write_u32","","",2,[[]]],[11,"write_u64","","",2,[[]]],[11,"write_u128","","",2,[[]]],[11,"write_uint","","",2,[[]]],[11,"write_uint128","","",2,[[]]],[11,"read_u16_into","","",2,[[]]],[11,"read_u32_into","","",2,[[]]],[11,"read_u64_into","","",2,[[]]],[11,"read_u128_into","","",2,[[]]],[11,"write_u16_into","","",2,[[]]],[11,"write_u32_into","","",2,[[]]],[11,"write_u64_into","","",2,[[]]],[11,"write_u128_into","","",2,[[]]],[11,"from_slice_u16","","",2,[[]]],[11,"from_slice_u32","","",2,[[]]],[11,"from_slice_u64","","",2,[[]]],[11,"from_slice_u128","","",2,[[]]],[11,"from_slice_f32","","",2,[[]]],[11,"from_slice_f64","","",2,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"eq","","",1,[[["bigendian",4]]]],[11,"eq","","",2,[[["littleendian",4]]]],[11,"cmp","","",1,[[["bigendian",4]],["ordering",4]]],[11,"cmp","","",2,[[["littleendian",4]],["ordering",4]]],[11,"partial_cmp","","",1,[[["bigendian",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["littleendian",4]],[["option",4],["ordering",4]]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"clone","","",1,[[],["bigendian",4]]],[11,"clone","","",2,[[],["littleendian",4]]],[11,"default","","",1,[[],["bigendian",4]]],[11,"default","","",2,[[],["littleendian",4]]]],"p":[[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]},\
"cast":{"doc":"Ergonomic, checked cast functions for primitive types","i":[[4,"Error","cast","Cast errors",null,null],[13,"Infinite","","Infinite value casted to a type that can only represent…",0,null],[13,"NaN","","NaN value casted to a type that can\'t represent a NaN value",0,null],[13,"Overflow","","Source value is greater than the maximum value that the…",0,null],[13,"Underflow","","Source value is smaller than the minimum value that the…",0,null],[5,"f32","","Checked cast function",null,[[]]],[5,"f64","","Checked cast function",null,[[]]],[5,"i8","","Checked cast function",null,[[]]],[5,"i16","","Checked cast function",null,[[]]],[5,"i32","","Checked cast function",null,[[]]],[5,"i64","","Checked cast function",null,[[]]],[5,"isize","","Checked cast function",null,[[]]],[5,"u8","","Checked cast function",null,[[]]],[5,"u16","","Checked cast function",null,[[]]],[5,"u32","","Checked cast function",null,[[]]],[5,"u64","","Checked cast function",null,[[]]],[5,"usize","","Checked cast function",null,[[]]],[8,"From","","The \\\"cast from\\\" operation",null,null],[16,"Output","","The result of the cast operation: either `Self` or…",1,null],[10,"cast","","Checked cast from `Src` to `Self`",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["error",4]]],[11,"eq","","",0,[[["error",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"description","","",0,[[]]]],"p":[[4,"Error"],[8,"From"]]},\
"cfg_if":{"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]},\
"clap":{"doc":"`clap` is a simple-to-use, efficient, and full-featured…","i":[[3,"App","clap","Used to create a representation of a command line program…",null,null],[3,"Arg","","The abstract representation of a command line argument.…",null,null],[3,"ArgGroup","","`ArgGroup`s are a family of related arguments and way for…",null,null],[3,"ArgMatches","","Used to get information about the arguments that were…",null,null],[3,"OsValues","","An iterator for getting multiple values out of an argument…",null,null],[3,"SubCommand","","The abstract representation of a command line subcommand.",null,null],[3,"Values","","An iterator for getting multiple values out of an argument…",null,null],[3,"Error","","Command Line Argument Parser Error",null,null],[12,"message","","Formatted error message",0,null],[12,"kind","","The type of error",0,null],[12,"info","","Any additional information passed along, such as the…",0,null],[4,"AppSettings","","Application level settings, which affect how `App` operates",null,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",1,null],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\\\"itself\\\")`] for all…",1,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",1,null],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",1,null],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",1,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",1,null],[13,"ArgsNegateSubcommands","","Specifies that use of a valid argument negates subcommands…",1,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",1,null],[13,"ColoredHelp","","Uses colorized help messages.",1,null],[13,"ColorAuto","","Enables colored output only when the output is going to a…",1,null],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",1,null],[13,"ColorNever","","Disables colored output no matter if the output is going…",1,null],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",1,null],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",1,null],[13,"DisableHelpFlags","","Disables `-h` and `--help` `App` without affecting any of…",1,null],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",1,null],[13,"DisableVersion","","Disables `-V` and `--version` `App` without affecting any…",1,null],[13,"DeriveDisplayOrder","","Displays the arguments and `SubCommand`s in the help…",1,null],[13,"GlobalVersion","","Specifies to use the version of the current command for…",1,null],[13,"Hidden","","Specifies that this `SubCommand` should be hidden from…",1,null],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",1,null],[13,"InferSubcommands","","Tries to match unknown args to partial `subcommands` or…",1,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",1,null],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",1,null],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",1,null],[13,"SubcommandsNegateReqs","","Allows `SubCommand`s to override all requirements of the…",1,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",1,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",1,null],[13,"SubcommandRequired","","Allows specifying that if no `SubCommand` is present at…",1,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a \\\"VarArg\\\"…",1,null],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",1,null],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all `SubCommand`s…",1,null],[13,"WaitOnError","","Will display a message \\\"Press [ENTER]/[RETURN] to…",1,null],[4,"ArgSettings","","Various settings that apply to arguments and may be set,…",null,null],[13,"Required","","The argument must be used",2,null],[13,"Multiple","","The argument may be used multiple times such as `--flag…",2,null],[13,"EmptyValues","","The argument allows empty values such as `--option \\\"\\\"`",2,null],[13,"Global","","The argument should be propagated down through all child…",2,null],[13,"Hidden","","The argument should not be shown in help text",2,null],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",2,null],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via…",2,null],[13,"NextLineHelp","","Prints the help text on the line after the argument",2,null],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple…",2,null],[13,"HidePossibleValues","","Hides the possible values from the help string",2,null],[13,"AllowLeadingHyphen","","Allows vals that start with a \'-\'",2,null],[13,"RequireEquals","","Require options use `--option=val` syntax",2,null],[13,"Last","","Specifies that the arg is the last positional argument and…",2,null],[13,"HideDefaultValue","","Hides the default value from the help string",2,null],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",2,null],[13,"HideEnvValues","","Hides ENV values in the help message",2,null],[13,"HiddenShortHelp","","The argument should not be shown in short help text",2,null],[13,"HiddenLongHelp","","The argument should not be shown in long help text",2,null],[4,"Shell","","Describes which shell to produce a completions file for",null,null],[13,"Bash","","Generates a .bash completion file for the Bourne Again…",3,null],[13,"Fish","","Generates a .fish completion file for the Friendly…",3,null],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",3,null],[13,"PowerShell","","Generates a completion file for PowerShell",3,null],[13,"Elvish","","Generates a completion file for Elvish",3,null],[4,"ErrorKind","","Command line argument parser kind of error",null,null],[13,"InvalidValue","","Occurs when an `Arg` has a set of possible values, and the…",4,null],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or…",4,null],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized…",4,null],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized `SubCommand`…",4,null],[13,"EmptyValue","","Occurs when the user provides an empty value for an option…",4,null],[13,"ValueValidation","","Occurs when the user provides a value for an argument with…",4,null],[13,"TooManyValues","","Occurs when a user provides more values for an argument…",4,null],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument…",4,null],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values…",4,null],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict…",4,null],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required…",4,null],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by…",4,null],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or `SubCommand` is…",4,null],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an…",4,null],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid…",4,null],[13,"HelpDisplayed","","Not a true \\\"error\\\" as it means `--help` or similar was…",4,null],[13,"VersionDisplayed","","Not a true \\\"error\\\" as it means `--version` or similar was…",4,null],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`]…",4,null],[13,"Io","","Represents an [I/O error]. Can occur when writing to…",4,null],[13,"Format","","Represents a Format error (which is a part of `Display`).…",4,null],[11,"new","","Creates a new instance of an application requiring a name.…",5,[[["into",8],["string",3]]]],[11,"get_name","","Get the name of the app",5,[[]]],[11,"get_bin_name","","Get the name of the binary",5,[[],["option",4]]],[11,"with_defaults","","Creates a new instance of an application requiring a name,…",5,[[["into",8],["string",3]]]],[11,"author","","Sets a string of author(s) that will be displayed to the…",5,[[["into",8]]]],[11,"bin_name","","Overrides the system-determined binary name. This should…",5,[[["into",8],["string",3]]]],[11,"about","","Sets a string describing what the program does. This will…",5,[[["into",8]]]],[11,"long_about","","Sets a string describing what the program does. This will…",5,[[["into",8]]]],[11,"name","","Sets the program\'s name. This will be displayed when…",5,[[["into",8],["string",3]]]],[11,"after_help","","Adds additional help information to be displayed in…",5,[[["into",8]]]],[11,"before_help","","Adds additional help information to be displayed in…",5,[[["into",8]]]],[11,"version","","Sets a string of the version number to be displayed when…",5,[[["into",8]]]],[11,"long_version","","Sets a string of the version number to be displayed when…",5,[[["into",8]]]],[11,"usage","","Sets a custom usage string to override the auto-generated…",5,[[["into",8]]]],[11,"help","","Sets a custom help message and overrides the…",5,[[["into",8]]]],[11,"help_short","","Sets the `short` for the auto-generated `help` argument.",5,[[["asref",8]]]],[11,"version_short","","Sets the `short` for the auto-generated `version` argument.",5,[[["asref",8]]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,[[["into",8]]]],[11,"version_message","","Sets the help text for the auto-generated `version`…",5,[[["into",8]]]],[11,"template","","Sets the help template to be used, overriding the default…",5,[[["into",8]]]],[11,"setting","","Enables a single command, or `SubCommand`, level settings.",5,[[["appsettings",4]]]],[11,"settings","","Enables multiple command, or `SubCommand`, level settings",5,[[]]],[11,"global_setting","","Enables a single setting that is propagated down through…",5,[[["appsettings",4]]]],[11,"global_settings","","Enables multiple settings which are propagated down…",5,[[]]],[11,"unset_setting","","Disables a single command, or `SubCommand`, level setting.",5,[[["appsettings",4]]]],[11,"unset_settings","","Disables multiple command, or `SubCommand`, level settings.",5,[[]]],[11,"set_term_width","","Sets the terminal width at which to wrap help messages.…",5,[[]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help…",5,[[]]],[11,"arg","","Adds an argument to the list of valid possibilities.",5,[[["arg",3],["into",8]]]],[11,"args","","Adds multiple arguments to the list of valid possibilities",5,[[]]],[11,"arg_from_usage","","A convenience method for adding a single argument from a…",5,[[]]],[11,"args_from_usage","","Adds multiple arguments at once from a usage string, one…",5,[[]]],[11,"alias","","Allows adding a `SubCommand` alias, which function as…",5,[[["into",8]]]],[11,"aliases","","Allows adding `SubCommand` aliases, which function as…",5,[[]]],[11,"visible_alias","","Allows adding a `SubCommand` alias that functions exactly…",5,[[["into",8]]]],[11,"visible_aliases","","Allows adding multiple `SubCommand` aliases that functions…",5,[[]]],[11,"group","","Adds an `ArgGroup` to the application. `ArgGroup`s are a…",5,[[["arggroup",3]]]],[11,"groups","","Adds multiple `ArgGroup`s to the `App` at once.",5,[[]]],[11,"subcommand","","Adds a `SubCommand` to the list of valid possibilities.…",5,[[["app",3]]]],[11,"subcommands","","Adds multiple subcommands to the list of valid…",5,[[]]],[11,"display_order","","Allows custom ordering of `SubCommand`s within the help…",5,[[]]],[11,"print_help","","Prints the full help message to `io::stdout()` using a…",5,[[],["clapresult",6]]],[11,"print_long_help","","Prints the full help message to `io::stdout()` using a…",5,[[],["clapresult",6]]],[11,"write_help","","Writes the full help message to the user to a `io::Write`…",5,[[],["clapresult",6]]],[11,"write_long_help","","Writes the full help message to the user to a `io::Write`…",5,[[],["clapresult",6]]],[11,"write_version","","Writes the version message to the user to a `io::Write`…",5,[[],["clapresult",6]]],[11,"write_long_version","","Writes the version message to the user to a `io::Write`…",5,[[],["clapresult",6]]],[11,"gen_completions","","Generate a completions file for a specified shell at…",5,[[["string",3],["osstring",3],["into",8],["shell",4],["into",8]]]],[11,"gen_completions_to","","Generate a completions file for a specified shell at…",5,[[["into",8],["string",3],["shell",4]]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error…",5,[[],["argmatches",3]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a…",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"get_matches_from","","Starts the parsing process. Like `App::get_matches` this…",5,[[],["argmatches",3]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of…",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the `App`…",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"with_name","","Creates a new instance of `Arg` using a unique string…",6,[[]]],[11,"from_usage","","Creates a new instance of `Arg` from a usage string.…",6,[[]]],[11,"short","","Sets the short version of the argument without the…",6,[[["asref",8]]]],[11,"long","","Sets the long version of the argument without the…",6,[[]]],[11,"alias","","Allows adding a `Arg` alias, which function as \\\"hidden\\\"…",6,[[["into",8]]]],[11,"aliases","","Allows adding `Arg` aliases, which function as \\\"hidden\\\"…",6,[[]]],[11,"visible_alias","","Allows adding a `Arg` alias that functions exactly like…",6,[[["into",8]]]],[11,"visible_aliases","","Allows adding multiple `Arg` aliases that functions…",6,[[]]],[11,"help","","Sets the short help text of the argument that will be…",6,[[]]],[11,"long_help","","Sets the long help text of the argument that will be…",6,[[]]],[11,"last","","Specifies that this arg is the last, or final, positional…",6,[[]]],[11,"required","","Sets whether or not the argument is required by default.…",6,[[]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",6,[[]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,[[]]],[11,"required_unless","","Sets an arg that override this arg\'s required setting.…",6,[[]]],[11,"required_unless_all","","Sets args that override this arg\'s required setting. (i.e.…",6,[[]]],[11,"required_unless_one","","Sets args that override this arg\'s required setting. (i.e.…",6,[[]]],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",6,[[]]],[11,"conflicts_with_all","","The same as `Arg::conflicts_with` but allows specifying…",6,[[]]],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",6,[[]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",6,[[]]],[11,"requires","","Sets an argument by name that is required when this one is…",6,[[]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",6,[[]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",6,[[]]],[11,"required_if","","Allows specifying that an argument is required…",6,[[]]],[11,"required_ifs","","Allows specifying that an argument is required based on…",6,[[]]],[11,"requires_all","","Sets multiple arguments by names that are required when…",6,[[]]],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,[[]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",6,[[]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",6,[[]]],[11,"index","","Specifies the index of a positional argument starting at 1.",6,[[]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",6,[[]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",6,[[]]],[11,"global","","Specifies that an argument can be matched to all child…",6,[[]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",6,[[]]],[11,"hidden","","Hides an argument from help message output.",6,[[]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",6,[[]]],[11,"possible_value","","Specifies a possible value for this argument, one at a…",6,[[]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",6,[[]]],[11,"group","","Specifies the name of the `ArgGroup` the argument belongs…",6,[[]]],[11,"groups","","Specifies the names of multiple `ArgGroup`\'s the argument…",6,[[]]],[11,"number_of_values","","Specifies how many values are required to satisfy this…",6,[[]]],[11,"validator","","Allows one to perform a custom validation on the argument…",6,[[]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",6,[[]]],[11,"max_values","","Specifies the maximum number of values are for this…",6,[[]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",6,[[]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",6,[[]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",6,[[]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",6,[[]]],[11,"value_names","","Specify multiple names for values of option arguments.…",6,[[]]],[11,"value_name","","Specifies the name for value of option or positional…",6,[[]]],[11,"default_value","","Specifies the value of the argument when not specified at…",6,[[]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",6,[[["osstr",3]]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",6,[[["option",4]]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",6,[[["osstr",3],["option",4]]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",6,[[]]],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",6,[[]]],[11,"env","","Specifies that if the value is not passed in as an…",6,[[]]],[11,"env_os","","Specifies that if the value is not passed in as an…",6,[[["osstr",3]]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,[[]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",6,[[]]],[11,"display_order","","Allows custom ordering of args within the help message.…",6,[[]]],[11,"raw","","Indicates that all parameters passed after this should not…",6,[[]]],[11,"hidden_short_help","","Hides an argument from short help message output.",6,[[]]],[11,"hidden_long_help","","Hides an argument from long help message output.",6,[[]]],[11,"is_set","","Checks if one of the `ArgSettings` settings is set for the…",6,[[["argsettings",4]]]],[11,"set","","Sets one of the `ArgSettings` settings for the argument.",6,[[["argsettings",4]]]],[11,"unset","","Unsets one of the `ArgSettings` settings for the argument.",6,[[["argsettings",4]]]],[11,"value_of","","Gets the value of a specific option or positional argument…",7,[[["asref",8]],["option",4]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",7,[[["asref",8]],[["cow",4],["option",4]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",7,[[["asref",8]],[["option",4],["osstr",3]]]],[11,"values_of","","Gets a `Values` struct which implements `Iterator` for…",7,[[["asref",8]],[["values",3],["option",4]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",7,[[["asref",8]],[["option",4],["vec",3]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",7,[[["asref",8]],[["osvalues",3],["option",4]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",7,[[["asref",8]]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",7,[[["asref",8]]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",7,[[["asref",8]],["option",4]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",7,[[["asref",8]],[["indices",3],["option",4]]]],[11,"subcommand_matches","","Because `Subcommand`s are essentially \\\"sub-`App`s\\\" they…",7,[[["asref",8]],[["argmatches",3],["option",4]]]],[11,"subcommand_name","","Because `Subcommand`s are essentially \\\"sub-`App`s\\\" they…",7,[[],["option",4]]],[11,"subcommand","","This brings together `ArgMatches::subcommand_matches` and…",7,[[]]],[11,"usage","","Returns a string slice of the usage statement for the…",7,[[]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string…",8,[[]]],[11,"arg","","Adds an argument to this group by name",8,[[]]],[11,"args","","Adds multiple arguments to this group by name",8,[[]]],[11,"multiple","","Allows more than one of the \'Arg\'s in this group to be…",8,[[]]],[11,"required","","Sets the group as required or not. A required group will…",8,[[]]],[11,"requires","","Sets the requirement rules of this group. This is not to…",8,[[]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to…",8,[[]]],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka…",8,[[]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules…",8,[[]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name.…",9,[[],["app",3]]],[11,"variants","","A list of possible variants in `&\'static str` form",3,[[]]],[11,"use_stderr","","Should the message be written to `stdout` or not",0,[[]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,[[]]],[11,"with_description","","Create an error with a custom description.",0,[[["errorkind",4]]]],[6,"Result","","Short hand for `Result` type",null,null],[14,"value_t","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"values_t","","Convenience macro getting a typed value `Vec<T>` where `T`…",null,null],[14,"values_t_or_exit","","Convenience macro getting a typed value `Vec<T>` where `T`…",null,null],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to…",null,null],[14,"arg_enum","","Convenience macro to generate more complete enums with…",null,null],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at…",null,null],[14,"crate_authors","","Allows you to pull the authors for the app from your…",null,null],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at…",null,null],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at…",null,null],[14,"app_from_crate","","Allows you to build the `App` instance from your…",null,null],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",null,null],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[["arg",3]]]],[11,"from","","",8,[[["arggroup",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"next_back","","",11,[[],["option",4]]],[11,"next_back","","",10,[[],[["option",4],["osstr",3]]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"next","","",10,[[],[["option",4],["osstr",3]]]],[11,"size_hint","","",10,[[]]],[11,"clone","","",1,[[],["appsettings",4]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[],["arg",3]]],[11,"clone","","",7,[[],["argmatches",3]]],[11,"clone","","",11,[[],["values",3]]],[11,"clone","","",10,[[],["osvalues",3]]],[11,"clone","","",8,[[]]],[11,"clone","","",2,[[],["argsettings",4]]],[11,"clone","","",9,[[],["subcommand",3]]],[11,"clone","","",3,[[],["shell",4]]],[11,"clone","","",4,[[],["errorkind",4]]],[11,"default","","",6,[[],["arg",3]]],[11,"default","","",7,[[]]],[11,"default","","",11,[[]]],[11,"default","","",10,[[]]],[11,"default","","",8,[[],["arggroup",3]]],[11,"eq","","",1,[[["appsettings",4]]]],[11,"eq","","",6,[[["arg",3]]]],[11,"eq","","",2,[[["argsettings",4]]]],[11,"eq","","",4,[[["errorkind",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"from_str","","",1,[[],["result",4]]],[11,"from_str","","",2,[[],["result",4]]],[11,"from_str","","",3,[[],["result",4]]],[11,"description","","",0,[[]]]],"p":[[3,"Error"],[4,"AppSettings"],[4,"ArgSettings"],[4,"Shell"],[4,"ErrorKind"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"ArgGroup"],[3,"SubCommand"],[3,"OsValues"],[3,"Values"]]},\
"const_fn":{"doc":"An attribute for easy generation of const functions with…","i":[[23,"const_fn","const_fn","An attribute for easy generation of const functions with…",null,null]],"p":[]},\
"criterion":{"doc":"A statistics-driven micro-benchmarking library written in…","i":[[3,"BenchmarkGroup","criterion","Structure used to group together a set of related…",null,null],[3,"BenchmarkId","","Simple structure representing an ID for a benchmark. The…",null,null],[3,"Bencher","","Timer struct used to iterate a benchmarked function and…",null,null],[3,"Criterion","","The benchmark manager",null,null],[3,"PlotConfiguration","","Contains the configuration options for the plots generated…",null,null],[4,"BatchSize","","Argument to `Bencher::iter_batched` and…",null,null],[13,"SmallInput","","`SmallInput` indicates that the input to the benchmark…",0,null],[13,"LargeInput","","`LargeInput` indicates that the input to the benchmark…",0,null],[13,"PerIteration","","`PerIteration` indicates that the input to the benchmark…",0,null],[13,"NumBatches","","`NumBatches` will attempt to divide the iterations up into…",0,null],[13,"NumIterations","","`NumIterations` fixes the batch size to a constant number,…",0,null],[4,"Baseline","","Baseline describes how the baseline_directory is handled.",null,null],[13,"Compare","","Compare ensures a previous saved version of the baseline…",1,null],[13,"Save","","Save writes the benchmark results to the baseline…",1,null],[4,"PlottingBackend","","Enum used to select the plotting backend.",null,null],[13,"Gnuplot","","Plotting backend which uses the external `gnuplot` command…",2,null],[13,"Plotters","","Plotting backend which uses the rust \'Plotters\' library.…",2,null],[4,"Throughput","","Enum representing different ways of measuring the…",null,null],[13,"Bytes","","Measure throughput in terms of bytes/second. The value…",3,null],[13,"Elements","","Measure throughput in terms of elements/second. The value…",3,null],[4,"AxisScale","","Axis scaling type",null,null],[13,"Linear","","Axes scale linearly",4,null],[13,"Logarithmic","","Axes scale logarithmically",4,null],[4,"SamplingMode","","This enum allows the user to control how Criterion.rs…",null,null],[13,"Auto","","Criterion.rs should choose a sampling method…",5,null],[13,"Linear","","Scale the iteration count in each sample linearly. This is…",5,null],[13,"Flat","","Keep the iteration count the same for all samples. This is…",5,null],[5,"black_box","","A function that is opaque to the optimizer, used to…",null,[[]]],[11,"sample_size","","Changes the size of the sample for this benchmark",6,[[]]],[11,"warm_up_time","","Changes the warm up time for this benchmark",6,[[["duration",3]]]],[11,"measurement_time","","Changes the target measurement time for this benchmark…",6,[[["duration",3]]]],[11,"nresamples","","Changes the number of resamples for this benchmark group",6,[[]]],[11,"noise_threshold","","Changes the noise threshold for benchmarks in this group.…",6,[[]]],[11,"confidence_level","","Changes the confidence level for benchmarks in this group.…",6,[[]]],[11,"significance_level","","Changes the significance level for benchmarks in this…",6,[[]]],[11,"plot_config","","Changes the plot configuration for this benchmark group.",6,[[["plotconfiguration",3]]]],[11,"throughput","","Set the input size for this benchmark group. Used for…",6,[[["throughput",4]]]],[11,"sampling_mode","","Set the sampling mode for this benchmark group.",6,[[["samplingmode",4]]]],[11,"bench_function","","Benchmark the given parameterless function inside this…",6,[[["intobenchmarkid",8]]]],[11,"bench_with_input","","Benchmark the given parameterized function inside this…",6,[[["intobenchmarkid",8]]]],[11,"finish","","Consume the benchmark group and generate the summary…",6,[[]]],[11,"new","","Construct a new benchmark ID from a string function name…",7,[[["into",8],["string",3],["display",8]],["benchmarkid",3]]],[11,"from_parameter","","Construct a new benchmark ID from just a parameter value.…",7,[[["display",8]],["benchmarkid",3]]],[0,"measurement","","This module defines a set of traits that can be used to…",null,null],[3,"WallTime","criterion::measurement","`WallTime` is the default measurement in Criterion.rs. It…",null,null],[8,"ValueFormatter","","Trait providing functions to format measured values to…",null,null],[11,"format_value","","Format the value (with appropriate unit) and return it as…",8,[[],["string",3]]],[11,"format_throughput","","Format the value as a throughput measurement. The value…",8,[[["throughput",4]],["string",3]]],[10,"scale_values","","Scale the given values to some appropriate unit and return…",8,[[]]],[10,"scale_throughputs","","Convert the given measured values into throughput numbers…",8,[[["throughput",4]]]],[10,"scale_for_machines","","Scale the values and return a unit string designed for…",8,[[]]],[8,"Measurement","","Trait for all types which define something Criterion.rs…",null,null],[16,"Intermediate","","This type represents an intermediate value for the…",9,null],[16,"Value","","This type is the measured value. An example might be the…",9,null],[10,"start","","Criterion.rs will call this before iterating the benchmark.",9,[[]]],[10,"end","","Criterion.rs will call this after iterating the benchmark…",9,[[]]],[10,"add","","Combine two values. Criterion.rs sometimes needs to…",9,[[]]],[10,"zero","","Return a \\\"zero\\\" value for the Value type which can be…",9,[[]]],[10,"to_f64","","Converts the measured value to f64 so that it can be used…",9,[[]]],[10,"formatter","","Return a trait-object reference to the value formatter for…",9,[[],["valueformatter",8]]],[0,"profiler","criterion","This module provides an extension trait which allows…",null,null],[3,"ExternalProfiler","criterion::profiler","Dummy profiler implementation, representing cases where…",null,null],[8,"Profiler","","Extension trait for external crates to implement which…",null,null],[10,"start_profiling","","This function is called when Criterion.rs starts profiling…",10,[[["path",3]]]],[10,"stop_profiling","","This function is called after Criterion.rs stops profiling…",10,[[["path",3]]]],[11,"iter","criterion","Times a `routine` by executing it many times and timing…",11,[[]]],[11,"iter_custom","","Times a `routine` by executing it many times and relying…",11,[[]]],[11,"iter_with_large_drop","","Times a `routine` by collecting its output on each…",11,[[]]],[11,"iter_batched","","Times a `routine` that requires some input by generating a…",11,[[["batchsize",4]]]],[11,"iter_batched_ref","","Times a `routine` that requires some input by generating a…",11,[[["batchsize",4]]]],[11,"with_measurement","","Changes the measurement for the benchmarks run with this…",12,[[["measurement",8]],[["criterion",3],["measurement",8]]]],[11,"with_profiler","","Changes the internal profiler for benchmarks run with this…",12,[[["profiler",8]],["criterion",3]]],[11,"plotting_backend","","Set the plotting backend. By default, Criterion will use…",12,[[["plottingbackend",4]],["criterion",3]]],[11,"sample_size","","Changes the default size of the sample for benchmarks run…",12,[[],["criterion",3]]],[11,"warm_up_time","","Changes the default warm up time for benchmarks run with…",12,[[["duration",3]],["criterion",3]]],[11,"measurement_time","","Changes the default measurement time for benchmarks run…",12,[[["duration",3]],["criterion",3]]],[11,"nresamples","","Changes the default number of resamples for benchmarks run…",12,[[],["criterion",3]]],[11,"noise_threshold","","Changes the default noise threshold for benchmarks run…",12,[[],["criterion",3]]],[11,"confidence_level","","Changes the default confidence level for benchmarks run…",12,[[],["criterion",3]]],[11,"significance_level","","Changes the default significance level for benchmarks run…",12,[[],["criterion",3]]],[11,"with_plots","","Enables plotting",12,[[],["criterion",3]]],[11,"without_plots","","Disables plotting",12,[[],["criterion",3]]],[11,"can_plot","","Return true if generation of the plots is possible.",12,[[]]],[11,"save_baseline","","Names an explicit baseline and enables overwriting the…",12,[[["string",3]],["criterion",3]]],[11,"retain_baseline","","Names an explicit baseline and disables overwriting the…",12,[[["string",3]],["criterion",3]]],[11,"with_filter","","Filters the benchmarks. Only benchmarks with names that…",12,[[["into",8],["string",3]],["criterion",3]]],[11,"configure_from_args","","Configure this criterion struct based on the command-line…",12,[[],["criterion",3]]],[11,"benchmark_group","","Return a benchmark group. All benchmarks performed using a…",12,[[["into",8],["string",3]],["benchmarkgroup",3]]],[11,"bench_function","","Benchmarks a function. For comparing multiple functions,…",12,[[],["criterion",3]]],[11,"bench_with_input","","Benchmarks a function with an input. For comparing…",12,[[["benchmarkid",3]],["criterion",3]]],[11,"summary_scale","","Set the axis scale (linear or logarithmic) for the summary…",13,[[["axisscale",4]],["plotconfiguration",3]]],[14,"criterion_group","","Macro used to define a function group for the benchmark…",null,null],[14,"criterion_main","","Macro which expands to a benchmark harness.",null,null],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","criterion::measurement","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","criterion::profiler","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"start","criterion::measurement","",14,[[]]],[11,"end","","",14,[[]]],[11,"add","","",14,[[]]],[11,"zero","","",14,[[]]],[11,"to_f64","","",14,[[]]],[11,"formatter","","",14,[[],["valueformatter",8]]],[11,"start_profiling","criterion::profiler","",15,[[["path",3]]]],[11,"stop_profiling","","",15,[[["path",3]]]],[11,"drop","criterion","",6,[[]]],[11,"clone","","",7,[[],["benchmarkid",3]]],[11,"clone","","",0,[[],["batchsize",4]]],[11,"clone","","",1,[[],["baseline",4]]],[11,"clone","","",2,[[],["plottingbackend",4]]],[11,"clone","","",3,[[],["throughput",4]]],[11,"clone","","",4,[[],["axisscale",4]]],[11,"clone","","",13,[[],["plotconfiguration",3]]],[11,"clone","","",5,[[],["samplingmode",4]]],[11,"default","","Creates a benchmark manager with the following default…",12,[[],["criterion",3]]],[11,"default","","",13,[[],["plotconfiguration",3]]],[11,"eq","","",7,[[["benchmarkid",3]]]],[11,"ne","","",7,[[["benchmarkid",3]]]],[11,"eq","","",0,[[["batchsize",4]]]],[11,"ne","","",0,[[["batchsize",4]]]],[11,"eq","","",3,[[["throughput",4]]]],[11,"ne","","",3,[[["throughput",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"hash","","",0,[[]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]]],"p":[[4,"BatchSize"],[4,"Baseline"],[4,"PlottingBackend"],[4,"Throughput"],[4,"AxisScale"],[4,"SamplingMode"],[3,"BenchmarkGroup"],[3,"BenchmarkId"],[8,"ValueFormatter"],[8,"Measurement"],[8,"Profiler"],[3,"Bencher"],[3,"Criterion"],[3,"PlotConfiguration"],[3,"WallTime"],[3,"ExternalProfiler"]]},\
"criterion_plot":{"doc":"Criterion\'s plotting library.","i":[[3,"Figure","criterion_plot","Plot container",null,null],[3,"BoxWidth","","Box width for box-related plots: bars, candlesticks, etc",null,null],[12,"0","","",0,null],[3,"Font","","A font name",null,null],[3,"FontSize","","The size of a font",null,null],[12,"0","","",1,null],[3,"Key","","The key or legend",null,null],[3,"Label","","Plot label",null,null],[3,"LineWidth","","Width of the lines",null,null],[12,"0","","",2,null],[3,"Opacity","","Fill color opacity",null,null],[12,"0","","",3,null],[3,"Output","","Output file path",null,null],[3,"PointSize","","Size of the points",null,null],[12,"0","","",4,null],[3,"Size","","Figure size",null,null],[12,"0","","",5,null],[12,"1","","",5,null],[3,"TicLabels","","Labels attached to the tics of an axis",null,null],[12,"labels","","Labels to attach to the tics",6,null],[12,"positions","","Position of the tics on the axis",6,null],[3,"Title","","Figure title",null,null],[3,"ScaleFactor","","Axis scale factor",null,null],[12,"0","","",7,null],[3,"Version","","Structure representing a gnuplot version number.",null,null],[12,"major","","The major version number",8,null],[12,"minor","","The minor version number",8,null],[12,"patch","","The patch level",8,null],[4,"Range","","Axis range",null,null],[13,"Auto","","Autoscale the axis",9,null],[13,"Limits","","Set the limits of the axis",9,null],[4,"Axes","","A pair of axes that define a coordinate system",null,null],[13,"BottomXLeftY","","",10,null],[13,"BottomXRightY","","",10,null],[13,"TopXLeftY","","",10,null],[13,"TopXRightY","","",10,null],[4,"Axis","","A coordinate axis",null,null],[13,"BottomX","","X axis on the bottom side of the figure",11,null],[13,"LeftY","","Y axis on the left side of the figure",11,null],[13,"RightY","","Y axis on the right side of the figure",11,null],[13,"TopX","","X axis on the top side of the figure",11,null],[4,"Color","","Color",null,null],[13,"Black","","",12,null],[13,"Blue","","",12,null],[13,"Cyan","","",12,null],[13,"DarkViolet","","",12,null],[13,"ForestGreen","","",12,null],[13,"Gold","","",12,null],[13,"Gray","","",12,null],[13,"Green","","",12,null],[13,"Magenta","","",12,null],[13,"Red","","",12,null],[13,"Rgb","","Custom RGB color",12,null],[13,"White","","",12,null],[13,"Yellow","","",12,null],[4,"Grid","","Grid line",null,null],[13,"Major","","Major gridlines",13,null],[13,"Minor","","Minor gridlines",13,null],[4,"LineType","","Line type",null,null],[13,"Dash","","",14,null],[13,"Dot","","",14,null],[13,"DotDash","","",14,null],[13,"DotDotDash","","",14,null],[13,"SmallDot","","Line made of minimally sized dots",14,null],[13,"Solid","","",14,null],[4,"PointType","","Point type",null,null],[13,"Circle","","",15,null],[13,"FilledCircle","","",15,null],[13,"FilledSquare","","",15,null],[13,"FilledTriangle","","",15,null],[13,"Plus","","",15,null],[13,"Square","","",15,null],[13,"Star","","",15,null],[13,"Triangle","","",15,null],[13,"X","","",15,null],[4,"Scale","","Axis scale",null,null],[13,"Linear","","",16,null],[13,"Logarithmic","","",16,null],[4,"Terminal","","Output terminal",null,null],[13,"Svg","","",17,null],[4,"VersionError","","Possible errors when parsing gnuplot\'s version string",null,null],[13,"Exec","","The `gnuplot` command couldn\'t be executed",18,null],[13,"Error","","The `gnuplot` command returned an error message",18,null],[13,"OutputError","","The `gnuplot` command returned invalid utf-8",18,null],[13,"ParseError","","The `gnuplot` command returned an unparseable string",18,null],[5,"version","","Returns `gnuplot` version",null,[[],[["versionerror",4],["result",4],["version",3]]]],[0,"axis","","Coordinate axis",null,null],[3,"Properties","criterion_plot::axis","Properties of the coordinate axes",null,null],[11,"hide","","Hides the axis",19,[[],["properties",3]]],[11,"show","","Makes the axis visible",19,[[],["properties",3]]],[0,"candlestick","criterion_plot","\\\"Candlestick\\\" plots",null,null],[3,"Properties","criterion_plot::candlestick","Properties common to candlestick plots",null,null],[3,"Candlesticks","","A candlestick consists of a box and two whiskers that…",null,null],[12,"x","","X coordinate of the candlestick",20,null],[12,"whisker_min","","Y coordinate of the end point of the bottom whisker",20,null],[12,"box_min","","Y coordinate of the bottom of the box",20,null],[12,"box_high","","Y coordinate of the top of the box",20,null],[12,"whisker_high","","Y coordinate of the end point of the top whisker",20,null],[0,"curve","criterion_plot","Simple \\\"curve\\\" like plots",null,null],[3,"Properties","criterion_plot::curve","Properties common to simple \\\"curve\\\" like plots",null,null],[4,"Curve","","Types of \\\"curve\\\" plots",null,null],[13,"Dots","","A minimally sized dot on each data point",21,null],[12,"x","criterion_plot::curve::Curve","X coordinate of the data points",22,null],[12,"y","","Y coordinate of the data points",22,null],[13,"Impulses","criterion_plot::curve","A vertical \\\"impulse\\\" on each data point",21,null],[12,"x","criterion_plot::curve::Curve","X coordinate of the data points",23,null],[12,"y","","Y coordinate of the data points",23,null],[13,"Lines","criterion_plot::curve","Line that joins the data points",21,null],[12,"x","criterion_plot::curve::Curve","X coordinate of the data points",24,null],[12,"y","","Y coordinate of the data points",24,null],[13,"LinesPoints","criterion_plot::curve","Line with a point on each data point",21,null],[12,"x","criterion_plot::curve::Curve","X coordinate of the data points",25,null],[12,"y","","Y coordinate of the data points",25,null],[13,"Points","criterion_plot::curve","A point on each data point",21,null],[12,"x","criterion_plot::curve::Curve","X coordinate of the data points",26,null],[12,"y","","Y coordinate of the data points",26,null],[13,"Steps","criterion_plot::curve","An step `_|` between each data point",21,null],[12,"x","criterion_plot::curve::Curve","X coordinate of the data points",27,null],[12,"y","","Y coordinate of the data points",27,null],[0,"errorbar","criterion_plot","Error bar plots",null,null],[3,"Properties","criterion_plot::errorbar","Properties common to error bar plots",null,null],[4,"ErrorBar","","Asymmetric error bar plots",null,null],[13,"XErrorBars","","Horizontal error bars",28,null],[12,"x","criterion_plot::errorbar::ErrorBar","X coordinate of the data points",29,null],[12,"y","","Y coordinate of the data points",29,null],[12,"x_low","","X coordinate of the left end of the error bar",29,null],[12,"x_high","","Y coordinate of the right end of the error bar",29,null],[13,"XErrorLines","criterion_plot::errorbar","Horizontal error bars, where each point is joined by a line",28,null],[12,"x","criterion_plot::errorbar::ErrorBar","X coordinate of the data points",30,null],[12,"y","","Y coordinate of the data points",30,null],[12,"x_low","","X coordinate of the left end of the error bar",30,null],[12,"x_high","","Y coordinate of the right end of the error bar",30,null],[13,"YErrorBars","criterion_plot::errorbar","Vertical error bars",28,null],[12,"x","criterion_plot::errorbar::ErrorBar","X coordinate of the data points",31,null],[12,"y","","Y coordinate of the data points",31,null],[12,"y_low","","Y coordinate of the bottom of the error bar",31,null],[12,"y_high","","Y coordinate of the top of the error bar",31,null],[13,"YErrorLines","criterion_plot::errorbar","Vertical error bars, where each point is joined by a line",28,null],[12,"x","criterion_plot::errorbar::ErrorBar","X coordinate of the data points",32,null],[12,"y","","Y coordinate of the data points",32,null],[12,"y_low","","Y coordinate of the bottom of the error bar",32,null],[12,"y_high","","Y coordinate of the top of the error bar",32,null],[0,"filledcurve","criterion_plot","Filled curve plots",null,null],[3,"Properties","criterion_plot::filledcurve","Properties common to filled curve plots",null,null],[3,"FilledCurve","","Fills the area between two curves",null,null],[12,"x","","X coordinate of the data points of both curves",33,null],[12,"y1","","Y coordinate of the data points of the first curve",33,null],[12,"y2","","Y coordinate of the data points of the second curve",33,null],[0,"grid","criterion_plot","Gridline",null,null],[3,"Properties","criterion_plot::grid","Gridline properties",null,null],[11,"hide","","Hides the gridlines",34,[[],["properties",3]]],[11,"show","","Shows the gridlines",34,[[],["properties",3]]],[0,"key","criterion_plot","Key (or legend)",null,null],[3,"Properties","criterion_plot::key","Properties of the key",null,null],[4,"Boxed","","Whether the key is surrounded by a box or not",null,null],[13,"No","","",35,null],[13,"Yes","","",35,null],[4,"Horizontal","","Horizontal position of the key",null,null],[13,"Center","","Center of the figure",36,null],[13,"Left","","Left border of the figure",36,null],[13,"Right","","Right border of the figure",36,null],[4,"Justification","","Text justification of the key",null,null],[13,"Left","","",37,null],[13,"Right","","",37,null],[4,"Order","","Order of the elements of the key",null,null],[13,"SampleText","","Sample first, then text",38,null],[13,"TextSample","","Text first, then sample",38,null],[4,"Position","","Position of the key",null,null],[13,"Inside","","Inside the area surrounded by the four (BottomX, TopX,…",39,null],[13,"Outside","","Outside of that area",39,null],[4,"Stacked","","How the entries of the key are stacked",null,null],[13,"Horizontally","","",40,null],[13,"Vertically","","",40,null],[4,"Vertical","","Vertical position of the key",null,null],[13,"Bottom","","Bottom border of the figure",41,null],[13,"Center","","Center of the figure",41,null],[13,"Top","","Top border of the figure",41,null],[11,"hide","","Hides the key",42,[[],["properties",3]]],[11,"show","","Shows the key",42,[[],["properties",3]]],[0,"prelude","criterion_plot","A collection of the most used traits, structs and enums",null,null],[0,"proxy","","Generic constructors for newtypes",null,null],[5,"Font","criterion_plot::proxy","Generic constructor for `Font`",null,[[],["fonttype",3]]],[5,"Label","","Generic constructor for `Label`",null,[[],["labeltype",3]]],[5,"Title","","Generic constructor for `Title`",null,[[],["titletype",3]]],[5,"Output","","Generic constructor for `Output`",null,[[],["outputtype",3]]],[0,"traits","criterion_plot","Traits",null,null],[8,"Configure","criterion_plot::traits","Overloaded `configure` method",null,null],[16,"Properties","","The properties of what\'s being configured",43,null],[10,"configure","","Configure some set of properties",43,[[]]],[8,"Data","","Types that can be plotted",null,null],[10,"f64","","Convert the type into a double precision float",44,[[]]],[8,"Plot","","Overloaded `plot` method",null,null],[16,"Properties","","The properties associated to the plot",45,null],[10,"plot","","Plots some `data` with some `configuration`",45,[[]]],[8,"Set","","Overloaded `set` method",null,null],[10,"set","","Sets some property",46,[[]]],[11,"new","criterion_plot","Creates an empty figure",47,[[],["figure",3]]],[11,"draw","","Spawns a drawing child process",47,[[],[["child",3],["result",6]]]],[11,"dump","","Dumps the script required to produce the figure into `sink`",47,[[],[["result",6],["figure",3]]]],[11,"save","","Saves the script required to produce the figure to `path`",47,[[["path",3]],[["result",6],["figure",3]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","criterion_plot::axis","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","criterion_plot::candlestick","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","criterion_plot::curve","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","criterion_plot::errorbar","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","criterion_plot::filledcurve","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","criterion_plot::grid","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","criterion_plot::key","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"configure","criterion_plot::axis","Configures the gridlines",19,[[["grid",4]],["properties",3]]],[11,"configure","criterion_plot","Configures an axis",47,[[["axis",4]],["figure",3]]],[11,"configure","","Configures the key (legend)",47,[[["key",3]],["figure",3]]],[11,"plot","","",47,[[["candlesticks",3]],["figure",3]]],[11,"plot","","",47,[[["curve",4]],["figure",3]]],[11,"plot","","",47,[[["errorbar",4]],["figure",3]]],[11,"plot","","",47,[[["filledcurve",3]],["figure",3]]],[11,"set","criterion_plot::axis","Attaches a label to the axis",19,[[["label",3]],["properties",3]]],[11,"set","","Changes the range of the axis that will be shown",19,[[["range",4]],["properties",3]]],[11,"set","","Sets the scale of the axis",19,[[["scale",4]],["properties",3]]],[11,"set","","Changes the scale factor of the axis.",19,[[["scalefactor",3]],["properties",3]]],[11,"set","","Attaches labels to the tics of an axis",19,[[["ticlabels",3]],["properties",3]]],[11,"set","criterion_plot::candlestick","Sets the line color",53,[[["color",4]],["properties",3]]],[11,"set","","Sets the legend label",53,[[["label",3]],["properties",3]]],[11,"set","","Changes the line type",53,[[["linetype",4]],["properties",3]]],[11,"set","","Changes the width of the line",53,[[["linewidth",3]],["properties",3]]],[11,"set","criterion_plot::curve","Select the axes to plot against",54,[[["axes",4]],["properties",3]]],[11,"set","","Sets the line color",54,[[["color",4]],["properties",3]]],[11,"set","","Sets the legend label",54,[[["label",3]],["properties",3]]],[11,"set","","Changes the line type",54,[[["linetype",4]],["properties",3]]],[11,"set","","Changes the width of the line",54,[[["linewidth",3]],["properties",3]]],[11,"set","","Changes the size of the points",54,[[["pointsize",3]],["properties",3]]],[11,"set","","Changes the point type",54,[[["pointtype",4]],["properties",3]]],[11,"set","criterion_plot::errorbar","Changes the color of the error bars",55,[[["color",4]],["properties",3]]],[11,"set","","Sets the legend label",55,[[["label",3]],["properties",3]]],[11,"set","","Change the line type",55,[[["linetype",4]],["properties",3]]],[11,"set","","Changes the linewidth",55,[[["linewidth",3]],["properties",3]]],[11,"set","","Changes the size of the points",55,[[["pointsize",3]],["properties",3]]],[11,"set","","Changes the point type",55,[[["pointtype",4]],["properties",3]]],[11,"set","criterion_plot::filledcurve","Select axes to plot against",56,[[["axes",4]],["properties",3]]],[11,"set","","Sets the fill color",56,[[["color",4]],["properties",3]]],[11,"set","","Sets the legend label",56,[[["label",3]],["properties",3]]],[11,"set","","Changes the opacity of the fill color",56,[[["opacity",3]],["properties",3]]],[11,"set","criterion_plot::key","Select if the key will be surrounded with a box or not",42,[[["boxed",4]],["properties",3]]],[11,"set","","Changes the justification of the text of each entry",42,[[["justification",4]],["properties",3]]],[11,"set","","How to order each entry",42,[[["order",4]],["properties",3]]],[11,"set","","Selects where to place the key",42,[[["position",4]],["properties",3]]],[11,"set","","Changes how the entries of the key are stacked",42,[[["stacked",4]],["properties",3]]],[11,"set","","",42,[[["title",3]],["properties",3]]],[11,"set","criterion_plot","Changes the box width of all the box related plots (bars,…",47,[[["boxwidth",3]],["figure",3]]],[11,"set","","Changes the font",47,[[["font",3]],["figure",3]]],[11,"set","","Changes the size of the font",47,[[["fontsize",3]],["figure",3]]],[11,"set","","Changes the output file",47,[[["output",3]],["figure",3]]],[11,"set","","Changes the figure size",47,[[["size",3]],["figure",3]]],[11,"set","","Changes the output terminal",47,[[["terminal",4]],["figure",3]]],[11,"set","","Sets the title",47,[[["title",3]],["figure",3]]],[11,"clone","criterion_plot::axis","",19,[[],["properties",3]]],[11,"clone","criterion_plot::grid","",34,[[],["properties",3]]],[11,"clone","criterion_plot::key","",42,[[],["properties",3]]],[11,"clone","","",35,[[],["boxed",4]]],[11,"clone","","",36,[[],["horizontal",4]]],[11,"clone","","",37,[[],["justification",4]]],[11,"clone","","",38,[[],["order",4]]],[11,"clone","","",39,[[],["position",4]]],[11,"clone","","",40,[[],["stacked",4]]],[11,"clone","","",41,[[],["vertical",4]]],[11,"clone","criterion_plot","",47,[[],["figure",3]]],[11,"clone","","",0,[[],["boxwidth",3]]],[11,"clone","","",1,[[],["fontsize",3]]],[11,"clone","","",49,[[],["key",3]]],[11,"clone","","",2,[[],["linewidth",3]]],[11,"clone","","",3,[[],["opacity",3]]],[11,"clone","","",4,[[],["pointsize",3]]],[11,"clone","","",9,[[],["range",4]]],[11,"clone","","",5,[[],["size",3]]],[11,"clone","","",10,[[],["axes",4]]],[11,"clone","","",11,[[],["axis",4]]],[11,"clone","","",12,[[],["color",4]]],[11,"clone","","",13,[[],["grid",4]]],[11,"clone","","",14,[[],["linetype",4]]],[11,"clone","","",15,[[],["pointtype",4]]],[11,"clone","","",16,[[],["scale",4]]],[11,"clone","","",7,[[],["scalefactor",3]]],[11,"clone","","",17,[[],["terminal",4]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"description","","",18,[[]]],[11,"cause","","",18,[[],[["option",4],["error",8]]]]],"p":[[3,"BoxWidth"],[3,"FontSize"],[3,"LineWidth"],[3,"Opacity"],[3,"PointSize"],[3,"Size"],[3,"TicLabels"],[3,"ScaleFactor"],[3,"Version"],[4,"Range"],[4,"Axes"],[4,"Axis"],[4,"Color"],[4,"Grid"],[4,"LineType"],[4,"PointType"],[4,"Scale"],[4,"Terminal"],[4,"VersionError"],[3,"Properties"],[3,"Candlesticks"],[4,"Curve"],[13,"Dots"],[13,"Impulses"],[13,"Lines"],[13,"LinesPoints"],[13,"Points"],[13,"Steps"],[4,"ErrorBar"],[13,"XErrorBars"],[13,"XErrorLines"],[13,"YErrorBars"],[13,"YErrorLines"],[3,"FilledCurve"],[3,"Properties"],[4,"Boxed"],[4,"Horizontal"],[4,"Justification"],[4,"Order"],[4,"Position"],[4,"Stacked"],[4,"Vertical"],[3,"Properties"],[8,"Configure"],[8,"Data"],[8,"Plot"],[8,"Set"],[3,"Figure"],[3,"Font"],[3,"Key"],[3,"Label"],[3,"Output"],[3,"Title"],[3,"Properties"],[3,"Properties"],[3,"Properties"],[3,"Properties"]]},\
"crossbeam_channel":{"doc":"Multi-producer multi-consumer channels for message passing.","i":[[3,"IntoIter","crossbeam_channel","A blocking iterator over messages in a channel.",null,null],[3,"Iter","","A blocking iterator over messages in a channel.",null,null],[3,"TryIter","","A non-blocking iterator over messages in a channel.",null,null],[3,"Receiver","","The receiving side of a channel.",null,null],[3,"Sender","","The sending side of a channel.",null,null],[3,"Select","","Selects from a set of channel operations.",null,null],[3,"SelectedOperation","","A selected operation that needs to be completed.",null,null],[3,"ReadyTimeoutError","","An error returned from the `ready_timeout` method.",null,null],[3,"SelectTimeoutError","","An error returned from the `select_timeout` method.",null,null],[3,"TryReadyError","","An error returned from the `try_ready` method.",null,null],[3,"TrySelectError","","An error returned from the `try_select` method.",null,null],[3,"RecvError","","An error returned from the `recv` method.",null,null],[3,"SendError","","An error returned from the `send` method.",null,null],[12,"0","","",0,null],[4,"RecvTimeoutError","","An error returned from the `recv_timeout` method.",null,null],[13,"Timeout","","A message could not be received because the channel is…",1,null],[13,"Disconnected","","The message could not be received because the channel is…",1,null],[4,"TryRecvError","","An error returned from the `try_recv` method.",null,null],[13,"Empty","","A message could not be received because the channel is…",2,null],[13,"Disconnected","","The message could not be received because the channel is…",2,null],[4,"SendTimeoutError","","An error returned from the `send_timeout` method.",null,null],[13,"Timeout","","The message could not be sent because the channel is full…",3,null],[13,"Disconnected","","The message could not be sent because the channel is…",3,null],[4,"TrySendError","","An error returned from the `try_send` method.",null,null],[13,"Full","","The message could not be sent because the channel is full.",4,null],[13,"Disconnected","","The message could not be sent because the channel is…",4,null],[5,"after","","Creates a receiver that delivers a message after a certain…",null,[[["duration",3]],[["instant",3],["receiver",3]]]],[5,"at","","Creates a receiver that delivers a message at a certain…",null,[[["instant",3]],[["instant",3],["receiver",3]]]],[5,"never","","Creates a receiver that never delivers messages.",null,[[],["receiver",3]]],[5,"tick","","Creates a receiver that delivers messages periodically.",null,[[["duration",3]],[["instant",3],["receiver",3]]]],[5,"bounded","","Creates a channel of bounded capacity.",null,[[]]],[5,"unbounded","","Creates a channel of unbounded capacity.",null,[[]]],[11,"try_send","","Attempts to send a message into the channel without…",5,[[],[["result",4],["trysenderror",4]]]],[11,"send","","Blocks the current thread until a message is sent or the…",5,[[],[["senderror",3],["result",4]]]],[11,"send_timeout","","Waits for a message to be sent into the channel, but only…",5,[[["duration",3]],[["sendtimeouterror",4],["result",4]]]],[11,"send_deadline","","Waits for a message to be sent into the channel, but only…",5,[[["instant",3]],[["sendtimeouterror",4],["result",4]]]],[11,"is_empty","","Returns `true` if the channel is empty.",5,[[]]],[11,"is_full","","Returns `true` if the channel is full.",5,[[]]],[11,"len","","Returns the number of messages in the channel.",5,[[]]],[11,"capacity","","If the channel is bounded, returns its capacity.",5,[[],["option",4]]],[11,"same_channel","","Returns `true` if senders belong to the same channel.",5,[[["sender",3]]]],[11,"try_recv","","Attempts to receive a message from the channel without…",6,[[],[["tryrecverror",4],["result",4]]]],[11,"recv","","Blocks the current thread until a message is received or…",6,[[],[["result",4],["recverror",3]]]],[11,"recv_timeout","","Waits for a message to be received from the channel, but…",6,[[["duration",3]],[["result",4],["recvtimeouterror",4]]]],[11,"recv_deadline","","Waits for a message to be received from the channel, but…",6,[[["instant",3]],[["result",4],["recvtimeouterror",4]]]],[11,"is_empty","","Returns `true` if the channel is empty.",6,[[]]],[11,"is_full","","Returns `true` if the channel is full.",6,[[]]],[11,"len","","Returns the number of messages in the channel.",6,[[]]],[11,"capacity","","If the channel is bounded, returns its capacity.",6,[[],["option",4]]],[11,"iter","","A blocking iterator over messages in the channel.",6,[[],["iter",3]]],[11,"try_iter","","A non-blocking iterator over messages in the channel.",6,[[],["tryiter",3]]],[11,"same_channel","","Returns `true` if receivers belong to the same channel.",6,[[["receiver",3]]]],[11,"into_inner","","Unwraps the message.",0,[[]]],[11,"into_inner","","Unwraps the message.",4,[[]]],[11,"is_full","","Returns `true` if the send operation failed because the…",4,[[]]],[11,"is_disconnected","","Returns `true` if the send operation failed because the…",4,[[]]],[11,"into_inner","","Unwraps the message.",3,[[]]],[11,"is_timeout","","Returns `true` if the send operation timed out.",3,[[]]],[11,"is_disconnected","","Returns `true` if the send operation failed because the…",3,[[]]],[11,"is_empty","","Returns `true` if the receive operation failed because the…",2,[[]]],[11,"is_disconnected","","Returns `true` if the receive operation failed because the…",2,[[]]],[11,"is_timeout","","Returns `true` if the receive operation timed out.",1,[[]]],[11,"is_disconnected","","Returns `true` if the receive operation failed because the…",1,[[]]],[11,"new","","Creates an empty list of channel operations for selection.",7,[[],["select",3]]],[11,"send","","Adds a send operation.",7,[[["sender",3]]]],[11,"recv","","Adds a receive operation.",7,[[["receiver",3]]]],[11,"remove","","Removes a previously added operation.",7,[[]]],[11,"try_select","","Attempts to select one of the operations without blocking.",7,[[],[["selectedoperation",3],["tryselecterror",3],["result",4]]]],[11,"select","","Blocks until one of the operations becomes ready and…",7,[[],["selectedoperation",3]]],[11,"select_timeout","","Blocks for a limited time until one of the operations…",7,[[["duration",3]],[["selectedoperation",3],["result",4],["selecttimeouterror",3]]]],[11,"select_deadline","","Blocks until a given deadline, or until one of the…",7,[[["instant",3]],[["selectedoperation",3],["result",4],["selecttimeouterror",3]]]],[11,"try_ready","","Attempts to find a ready operation without blocking.",7,[[],[["result",4],["tryreadyerror",3]]]],[11,"ready","","Blocks until one of the operations becomes ready.",7,[[]]],[11,"ready_timeout","","Blocks for a limited time until one of the operations…",7,[[["duration",3]],[["result",4],["readytimeouterror",3]]]],[11,"ready_deadline","","Blocks until a given deadline, or until one of the…",7,[[["instant",3]],[["result",4],["readytimeouterror",3]]]],[11,"index","","Returns the index of the selected operation.",8,[[]]],[11,"send","","Completes the send operation.",8,[[["sender",3]],[["senderror",3],["result",4]]]],[11,"recv","","Completes the receive operation.",8,[[["receiver",3]],[["result",4],["recverror",3]]]],[14,"select","","Selects from a set of channel operations.",null,null],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"drop","","",5,[[]]],[11,"drop","","",6,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",4,[[["senderror",3]],["trysenderror",4]]],[11,"from","","",3,[[["senderror",3]],["sendtimeouterror",4]]],[11,"from","","",2,[[["recverror",3]],["tryrecverror",4]]],[11,"from","","",1,[[["recverror",3]],["recvtimeouterror",4]]],[11,"into_iter","","",6,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"next","","",11,[[],["option",4]]],[11,"next","","",9,[[],["option",4]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",0,[[],["senderror",3]]],[11,"clone","","",4,[[],["trysenderror",4]]],[11,"clone","","",3,[[],["sendtimeouterror",4]]],[11,"clone","","",16,[[],["recverror",3]]],[11,"clone","","",2,[[],["tryrecverror",4]]],[11,"clone","","",1,[[],["recvtimeouterror",4]]],[11,"clone","","",15,[[],["tryselecterror",3]]],[11,"clone","","",13,[[],["selecttimeouterror",3]]],[11,"clone","","",14,[[],["tryreadyerror",3]]],[11,"clone","","",12,[[],["readytimeouterror",3]]],[11,"clone","","",7,[[],["select",3]]],[11,"default","","",7,[[],["select",3]]],[11,"eq","","",0,[[["senderror",3]]]],[11,"ne","","",0,[[["senderror",3]]]],[11,"eq","","",4,[[["trysenderror",4]]]],[11,"ne","","",4,[[["trysenderror",4]]]],[11,"eq","","",3,[[["sendtimeouterror",4]]]],[11,"ne","","",3,[[["sendtimeouterror",4]]]],[11,"eq","","",16,[[["recverror",3]]]],[11,"eq","","",2,[[["tryrecverror",4]]]],[11,"eq","","",1,[[["recvtimeouterror",4]]]],[11,"eq","","",15,[[["tryselecterror",3]]]],[11,"eq","","",13,[[["selecttimeouterror",3]]]],[11,"eq","","",14,[[["tryreadyerror",3]]]],[11,"eq","","",12,[[["readytimeouterror",3]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]]],"p":[[3,"SendError"],[4,"RecvTimeoutError"],[4,"TryRecvError"],[4,"SendTimeoutError"],[4,"TrySendError"],[3,"Sender"],[3,"Receiver"],[3,"Select"],[3,"SelectedOperation"],[3,"IntoIter"],[3,"Iter"],[3,"TryIter"],[3,"ReadyTimeoutError"],[3,"SelectTimeoutError"],[3,"TryReadyError"],[3,"TrySelectError"],[3,"RecvError"]]},\
"crossbeam_deque":{"doc":"Concurrent work-stealing deques.","i":[[3,"Injector","crossbeam_deque","An injector queue.",null,null],[3,"Stealer","","A stealer handle of a worker queue.",null,null],[3,"Worker","","A worker queue.",null,null],[4,"Steal","","Possible outcomes of a steal operation.",null,null],[13,"Empty","","The queue was empty at the time of stealing.",0,null],[13,"Success","","At least one task was successfully stolen.",0,null],[13,"Retry","","The steal operation needs to be retried.",0,null],[11,"new_fifo","","Creates a FIFO worker queue.",1,[[],["worker",3]]],[11,"new_lifo","","Creates a LIFO worker queue.",1,[[],["worker",3]]],[11,"stealer","","Creates a stealer for this queue.",1,[[],["stealer",3]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[]]],[11,"len","","Returns the number of tasks in the deque.",1,[[]]],[11,"push","","Pushes a task into the queue.",1,[[]]],[11,"pop","","Pops a task from the queue.",1,[[],["option",4]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[]]],[11,"steal","","Steals a task from the queue.",2,[[],["steal",4]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into another worker.",2,[[["worker",3]],["steal",4]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into another worker,…",2,[[["worker",3]],["steal",4]]],[11,"new","","Creates a new injector queue.",3,[[],["injector",3]]],[11,"push","","Pushes a task into the queue.",3,[[]]],[11,"steal","","Steals a task from the queue.",3,[[],["steal",4]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into a worker.",3,[[["worker",3]],["steal",4]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into a worker, and…",3,[[["worker",3]],["steal",4]]],[11,"is_empty","","Returns `true` if the queue is empty.",3,[[]]],[11,"len","","Returns the number of tasks in the queue.",3,[[]]],[11,"is_empty","","Returns `true` if the queue was empty at the time of…",0,[[]]],[11,"is_success","","Returns `true` if at least one task was stolen.",0,[[]]],[11,"is_retry","","Returns `true` if the steal operation needs to be retried.",0,[[]]],[11,"success","","Returns the result of the operation, if successful.",0,[[],["option",4]]],[11,"or_else","","If no task was stolen, attempts another steal operation.",0,[[],["steal",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"drop","","",3,[[]]],[11,"clone","","",2,[[],["stealer",3]]],[11,"clone","","",0,[[],["steal",4]]],[11,"default","","",3,[[]]],[11,"eq","","",0,[[["steal",4]]]],[11,"ne","","",0,[[["steal",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"from_iter","","Consumes items until a `Success` is found and returns it.",0,[[],["steal",4]]]],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]},\
"crossbeam_epoch":{"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",null,null],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",null,null],[12,"current","","The value in the atomic pointer at the time of the failed…",0,null],[12,"new","","The new value, which the operation failed to store.",0,null],[3,"Owned","","An owned heap-allocated object.",null,null],[3,"Shared","","A pointer to an object protected by the epoch GC.",null,null],[3,"Collector","","An epoch-based garbage collector.",null,null],[3,"LocalHandle","","A handle to a garbage collector.",null,null],[3,"Guard","","A guard that keeps the current thread pinned.",null,null],[5,"unprotected","","Returns a reference to a dummy guard that allows…",null,[[],["guard",3]]],[5,"default_collector","","Returns the default global collector.",null,[[],["collector",3]]],[5,"is_pinned","","Returns `true` if the current thread is pinned.",null,[[]]],[5,"pin","","Pins the current thread.",null,[[],["guard",3]]],[11,"new","","Allocates `value` on the heap and returns a new atomic…",1,[[],["atomic",3]]],[11,"init","","Allocates `value` on the heap and returns a new atomic…",1,[[],["atomic",3]]],[11,"null","","Returns a new null atomic pointer.",1,[[],["atomic",3]]],[11,"load","","Loads a `Shared` from the atomic pointer.",1,[[["ordering",4],["guard",3]],["shared",3]]],[11,"load_consume","","Loads a `Shared` from the atomic pointer using a \\\"consume\\\"…",1,[[["guard",3]],["shared",3]]],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["ordering",4],["pointer",8]]]],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["ordering",4],["pointer",8],["guard",3]],["shared",3]]],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["shared",3],["guard",3]],[["result",4],["shared",3],["compareandseterror",3]]]],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["shared",3],["guard",3]],[["result",4],["shared",3],["compareandseterror",3]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current tag.",1,[[["ordering",4],["guard",3]],["shared",3]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current tag.",1,[[["ordering",4],["guard",3]],["shared",3]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current tag.",1,[[["ordering",4],["guard",3]],["shared",3]]],[11,"into_owned","","Takes ownership of the pointee.",1,[[],["owned",3]]],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,[[],["owned",3]]],[11,"into_box","","Converts the owned pointer into a `Box`.",2,[[],["box",3]]],[11,"new","","Allocates `value` on the heap and returns a new owned…",2,[[],["owned",3]]],[11,"init","","Allocates `value` on the heap and returns a new owned…",2,[[],["owned",3]]],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,[[["guard",3]],["shared",3]]],[11,"tag","","Returns the tag stored within the pointer.",2,[[]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",2,[[],["owned",3]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,[[]]],[11,"null","","Returns a new null pointer.",3,[[],["shared",3]]],[11,"is_null","","Returns `true` if the pointer is null.",3,[[]]],[11,"deref","","Dereferences the pointer.",3,[[]]],[11,"deref_mut","","Dereferences the pointer.",3,[[]]],[11,"as_ref","","Converts the pointer to a reference.",3,[[],["option",4]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[],["owned",3]]],[11,"tag","","Returns the tag stored within the pointer.",3,[[]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",3,[[],["shared",3]]],[11,"new","","Creates a new collector.",4,[[]]],[11,"register","","Registers a new handle for the collector.",4,[[],["localhandle",3]]],[11,"pin","","Pins the handle.",5,[[],["guard",3]]],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,[[]]],[11,"collector","","Returns the `Collector` associated with this handle.",5,[[],["collector",3]]],[11,"defer","","Stores a function so that it can be executed at some point…",6,[[]]],[11,"defer_unchecked","","Stores a function so that it can be executed at some point…",6,[[]]],[11,"defer_destroy","","Stores a destructor for an object so that it can be…",6,[[["shared",3]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by…",6,[[]]],[11,"repin","","Unpins and then immediately re-pins the thread.",6,[[]]],[11,"repin_after","","Temporarily unpins the thread, executes the given function…",6,[[]]],[11,"collector","","Returns the `Collector` associated with this guard.",6,[[],[["collector",3],["option",4]]]],[8,"Pointable","","Types that are pointed to by a single word.",null,null],[18,"ALIGN","","The alignment of pointer.",7,null],[16,"Init","","The type for initializers.",7,null],[10,"init","","Initializes a with the given initializer.",7,[[]]],[10,"deref","","Dereferences the given pointer.",7,[[]]],[10,"deref_mut","","Mutably dereferences the given pointer.",7,[[]]],[10,"drop","","Drops the object pointed to by the given pointer.",7,[[]]],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",null,null],[10,"success","","The ordering of the operation when it succeeds.",8,[[],["ordering",4]]],[10,"failure","","The ordering of the operation when it fails.",8,[[],["ordering",4]]],[8,"Pointer","","A trait for either `Owned` or `Shared` pointers.",null,null],[10,"into_usize","","Returns the machine representation of the pointer.",9,[[]]],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",9,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_usize","","",2,[[]]],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",2,[[]]],[11,"into_usize","","",3,[[]]],[11,"from_usize","","",3,[[]]],[11,"drop","","",2,[[]]],[11,"drop","","",5,[[]]],[11,"drop","","",6,[[]]],[11,"as_mut","","",2,[[]]],[11,"as_ref","","",2,[[]]],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,[[["owned",3]]]],[11,"from","","",1,[[["box",3]]]],[11,"from","","",1,[[]]],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,[[["shared",3]]]],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,[[]]],[11,"from","","",2,[[]]],[11,"from","","Returns a new owned pointer pointing to `b`.",2,[[["box",3]]]],[11,"from","","Returns a new pointer pointing to `raw`.",3,[[]]],[11,"clone","","Returns a copy of the atomic value.",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","Creates another reference to the same garbage collector.",4,[[]]],[11,"default","","",1,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"cmp","","",3,[[],["ordering",4]]],[11,"eq","","",3,[[]]],[11,"eq","","Checks if both handles point to the same collector.",4,[[["collector",3]]]],[11,"partial_cmp","","",3,[[],[["ordering",4],["option",4]]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[18,"ALIGN","","The alignment of pointer.",7,null]],"p":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"],[8,"Pointable"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","i":[[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",null,null],[3,"Backoff","","Performs exponential backoff in spin loops.",null,null],[0,"atomic","","Atomic types.",null,null],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",null,null],[11,"new","","Creates a new atomic cell initialized with `val`.",0,[[],["atomiccell",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",0,[[]]],[11,"is_lock_free","","Returns `true` if operations on values of this type are…",0,[[]]],[11,"store","","Stores `val` into the atomic cell.",0,[[]]],[11,"swap","","Stores `val` into the atomic cell and returns the previous…",0,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this…",0,[[]]],[11,"take","","Takes the value of the atomic cell, leaving…",0,[[]]],[11,"load","","Loads a value from the atomic cell.",0,[[]]],[11,"compare_and_swap","","If the current value equals `current`, stores `new` into…",0,[[]]],[11,"compare_exchange","","If the current value equals `current`, stores `new` into…",0,[[],["result",4]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_and","","Applies logical \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies logical \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies logical \\\"xor\\\" to the current value and returns the…",0,[[]]],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types…",null,null],[16,"Val","","Type returned by `load_consume`.",1,null],[10,"load_consume","","Loads a value from the atomic using a \\\"consume\\\" memory…",1,[[]]],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",2,[[],["cachepadded",3]]],[11,"into_inner","","Returns the inner value.",2,[[]]],[11,"new","","Creates a new `Backoff`.",3,[[]]],[11,"reset","","Resets the `Backoff`.",3,[[]]],[11,"spin","","Backs off in a lock-free loop.",3,[[]]],[11,"snooze","","Backs off in a blocking loop.",3,[[]]],[11,"is_completed","","Returns `true` if exponential backoff has completed and…",3,[[]]],[0,"sync","","Thread synchronization primitives.",null,null],[3,"Parker","crossbeam_utils::sync","A thread parking primitive.",null,null],[3,"Unparker","","Unparks a thread parked by the associated [`Parker`].",null,null],[3,"ShardedLock","","A sharded reader-writer lock.",null,null],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a…",null,null],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a…",null,null],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of…",null,null],[11,"new","","Creates a new `Parker`.",4,[[],["parker",3]]],[11,"park","","Blocks the current thread until the token is made available.",4,[[]]],[11,"park_timeout","","Blocks the current thread until the token is made…",4,[[["duration",3]]]],[11,"unparker","","Returns a reference to an associated [`Unparker`].",4,[[],["unparker",3]]],[11,"into_raw","","Converts a `Parker` into a raw pointer.",4,[[["parker",3]]]],[11,"from_raw","","Converts a raw pointer into a `Parker`.",4,[[],["parker",3]]],[11,"unpark","","Atomically makes the token available if it is not already.",5,[[]]],[11,"into_raw","","Converts an `Unparker` into a raw pointer.",5,[[["unparker",3]]]],[11,"from_raw","","Converts a raw pointer into an `Unparker`.",5,[[],["unparker",3]]],[11,"new","","Creates a new sharded reader-writer lock.",6,[[],["shardedlock",3]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",6,[[],["lockresult",6]]],[11,"is_poisoned","","Returns `true` if the lock is poisoned.",6,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[],["lockresult",6]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",6,[[],[["trylockresult",6],["shardedlockreadguard",3]]]],[11,"read","","Locks with shared read access, blocking the current thread…",6,[[],[["lockresult",6],["shardedlockreadguard",3]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",6,[[],[["shardedlockwriteguard",3],["trylockresult",6]]]],[11,"write","","Locks with exclusive write access, blocking the current…",6,[[],[["shardedlockwriteguard",3],["lockresult",6]]]],[11,"new","","Creates a new wait group and returns the single reference…",7,[[]]],[11,"wait","","Drops this reference and waits until all other references…",7,[[]]],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",null,null],[3,"Scope","crossbeam_utils::thread","A scope for spawning threads.",null,null],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",null,null],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",null,null],[5,"scope","","Creates a new scope for spawning threads.",null,[[],["result",6]]],[11,"spawn","","Spawns a scoped thread.",8,[[],["scopedjoinhandle",3]]],[11,"builder","","Creates a builder that can configure a thread before…",8,[[],["scopedthreadbuilder",3]]],[11,"name","","Sets the name for the new thread.",9,[[["string",3]],["scopedthreadbuilder",3]]],[11,"stack_size","","Sets the size of the stack for the new thread.",9,[[],["scopedthreadbuilder",3]]],[11,"spawn","","Spawns a scoped thread with this configuration.",9,[[],[["result",6],["scopedjoinhandle",3]]]],[11,"join","","Waits for the thread to finish and returns its result.",10,[[],["result",6]]],[11,"thread","","Returns a handle to the underlying thread.",10,[[],["thread",3]]],[11,"from","crossbeam_utils","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","crossbeam_utils::atomic","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","crossbeam_utils::sync","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","crossbeam_utils::thread","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"drop","crossbeam_utils::sync","",12,[[]]],[11,"drop","","",7,[[]]],[11,"from","crossbeam_utils::atomic","",0,[[],["atomiccell",3]]],[11,"from","crossbeam_utils","",2,[[]]],[11,"from","crossbeam_utils::sync","",6,[[]]],[11,"clone","crossbeam_utils","",2,[[],["cachepadded",3]]],[11,"clone","crossbeam_utils::sync","",5,[[],["unparker",3]]],[11,"clone","","",7,[[],["waitgroup",3]]],[11,"default","crossbeam_utils::atomic","",0,[[],["atomiccell",3]]],[11,"default","crossbeam_utils","",2,[[],["cachepadded",3]]],[11,"default","","",3,[[],["backoff",3]]],[11,"default","crossbeam_utils::sync","",4,[[]]],[11,"default","","",6,[[],["shardedlock",3]]],[11,"default","","",7,[[]]],[11,"eq","crossbeam_utils","",2,[[["cachepadded",3]]]],[11,"ne","","",2,[[["cachepadded",3]]]],[11,"deref","","",2,[[]]],[11,"deref","crossbeam_utils::sync","",11,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","crossbeam_utils","",2,[[]]],[11,"deref_mut","crossbeam_utils::sync","",12,[[]]],[11,"fmt","crossbeam_utils::atomic","",0,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::sync","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::thread","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::sync","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"hash","crossbeam_utils","",2,[[]]],[11,"as_pthread_t","crossbeam_utils::thread","",10,[[],["rawpthread",6]]],[11,"into_pthread_t","","",10,[[],["rawpthread",6]]]],"p":[[3,"AtomicCell"],[8,"AtomicConsume"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"WaitGroup"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"]]},\
"csv":{"doc":"The `csv` crate provides a fast and flexible CSV reader…","i":[[3,"ByteRecord","csv","A single CSV record stored as raw bytes.",null,null],[3,"ByteRecordIter","","A double-ended iterator over the fields in a byte record.",null,null],[3,"Position","","A position in CSV data.",null,null],[3,"DeserializeError","","An Serde deserialization error.",null,null],[3,"Error","","An error that can occur when processing CSV data.",null,null],[3,"FromUtf8Error","","A UTF-8 validation error during record conversion.",null,null],[3,"IntoInnerError","","`IntoInnerError` occurs when consuming a `Writer` fails.",null,null],[3,"Utf8Error","","A UTF-8 validation error.",null,null],[3,"ByteRecordsIntoIter","","An owned iterator over records as raw bytes.",null,null],[3,"ByteRecordsIter","","A borrowed iterator over records as raw bytes.",null,null],[3,"DeserializeRecordsIntoIter","","An owned iterator over deserialized records.",null,null],[3,"DeserializeRecordsIter","","A borrowed iterator over deserialized records.",null,null],[3,"Reader","","A already configured CSV reader.",null,null],[3,"ReaderBuilder","","Builds a CSV reader with various configuration knobs.",null,null],[3,"StringRecordsIntoIter","","An owned iterator over records as strings.",null,null],[3,"StringRecordsIter","","A borrowed iterator over records as strings.",null,null],[3,"StringRecord","","A single CSV record stored as valid UTF-8 bytes.",null,null],[3,"StringRecordIter","","An iterator over the fields in a string record.",null,null],[3,"Writer","","A already configured CSV writer.",null,null],[3,"WriterBuilder","","Builds a CSV writer with various configuration knobs.",null,null],[4,"DeserializeErrorKind","","The type of a Serde deserialization error.",null,null],[13,"Message","","A generic Serde deserialization error.",0,null],[13,"Unsupported","","A generic Serde unsupported error.",0,null],[13,"UnexpectedEndOfRow","","This error occurs when a Rust type expects to decode…",0,null],[13,"InvalidUtf8","","This error occurs when UTF-8 validation on a field fails.…",0,null],[13,"ParseBool","","This error occurs when a boolean value fails to parse.",0,null],[13,"ParseInt","","This error occurs when an integer value fails to parse.",0,null],[13,"ParseFloat","","This error occurs when a float value fails to parse.",0,null],[4,"ErrorKind","","The specific type of an error.",null,null],[13,"Io","","An I/O error that occurred while reading CSV data.",1,null],[13,"Utf8","","A UTF-8 decoding error that occured while reading CSV data…",1,null],[12,"pos","csv::ErrorKind","The position of the record in which this error occurred,…",2,null],[12,"err","","The corresponding UTF-8 error.",2,null],[13,"UnequalLengths","csv","This error occurs when two records with an unequal number…",1,null],[12,"pos","csv::ErrorKind","The position of the first record with an unequal number of…",3,null],[12,"expected_len","","The expected number of fields in a record. This is the…",3,null],[12,"len","","The number of fields in the bad record.",3,null],[13,"Seek","csv","This error occurs when either the `byte_headers` or…",1,null],[13,"Serialize","","An error of this kind occurs only when using the Serde…",1,null],[13,"Deserialize","","An error of this kind occurs only when performing…",1,null],[12,"pos","csv::ErrorKind","The position of this error, if available.",4,null],[12,"err","","The deserialization error.",4,null],[4,"QuoteStyle","csv","The quoting style to use when writing CSV data.",null,null],[13,"Always","","This puts quotes around every field. Always.",5,null],[13,"Necessary","","This puts quotes around fields only when necessary.",5,null],[13,"NonNumeric","","This puts quotes around all fields that are non-numeric.…",5,null],[13,"Never","","This never writes quotes, even if it would produce invalid…",5,null],[4,"Terminator","","A record terminator.",null,null],[13,"CRLF","","Parses `\\\\r`, `\\\\n` or `\\\\r\\\\n` as a single record terminator.",6,null],[13,"Any","","Parses the byte given as a record terminator.",6,null],[4,"Trim","","The whitespace preservation behaviour when reading CSV data.",null,null],[13,"None","","Preserves fields and headers. This is the default.",7,null],[13,"Headers","","Trim whitespace from headers.",7,null],[13,"Fields","","Trim whitespace from fields, but not headers.",7,null],[13,"All","","Trim whitespace from fields and headers.",7,null],[5,"invalid_option","","A custom Serde deserializer for possibly invalid…",null,[[],[["option",4],["result",4]]]],[11,"new","","Create a new empty `ByteRecord`.",8,[[],["byterecord",3]]],[11,"with_capacity","","Create a new empty `ByteRecord` with the given capacity…",8,[[],["byterecord",3]]],[11,"deserialize","","Deserialize this record.",8,[[["byterecord",3],["option",4]],[["deserialize",8],["result",6]]]],[11,"iter","","Returns an iterator over all fields in this record.",8,[[],["byterecorditer",3]]],[11,"get","","Return the field at index `i`.",8,[[],["option",4]]],[11,"is_empty","","Returns true if and only if this record is empty.",8,[[]]],[11,"len","","Returns the number of fields in this record.",8,[[]]],[11,"truncate","","Truncate this record to `n` fields.",8,[[]]],[11,"clear","","Clear this record so that it has zero fields.",8,[[]]],[11,"trim","","Trim the fields of this record so that leading and…",8,[[]]],[11,"push_field","","Add a new field to this record.",8,[[]]],[11,"position","","Return the position of this record, if available.",8,[[],[["position",3],["option",4]]]],[11,"set_position","","Set the position of this record.",8,[[["position",3],["option",4]]]],[11,"range","","Return the start and end position of a field in this record.",8,[[],[["option",4],["range",3]]]],[11,"as_slice","","Return the entire row as a single byte slice. The slice…",8,[[]]],[11,"new","","Returns a new position initialized to the start value.",9,[[],["position",3]]],[11,"byte","","The byte offset, starting at `0`, of this position.",9,[[]]],[11,"line","","The line number, starting at `1`, of this position.",9,[[]]],[11,"record","","The record index, starting with the first record at `0`.",9,[[]]],[11,"set_byte","","Set the byte offset of this position.",9,[[],["position",3]]],[11,"set_line","","Set the line number of this position.",9,[[],["position",3]]],[11,"set_record","","Set the record index of this position.",9,[[],["position",3]]],[0,"cookbook","","A cookbook of examples for CSV reading and writing.",null,null],[11,"field","","Return the field index (starting at 0) of this error, if…",10,[[],["option",4]]],[11,"kind","","Return the underlying error kind.",10,[[],["deserializeerrorkind",4]]],[11,"kind","","Return the specific type of this error.",11,[[],["errorkind",4]]],[11,"into_kind","","Unwrap this error into its underlying type.",11,[[],["errorkind",4]]],[11,"is_io_error","","Returns true if this is an I/O error.",11,[[]]],[11,"position","","Return the position for this error, if one exists.",11,[[],[["position",3],["option",4]]]],[11,"position","","Return the position for this error, if one exists.",1,[[],[["position",3],["option",4]]]],[11,"into_byte_record","","Access the underlying `ByteRecord` that failed UTF-8…",12,[[],["byterecord",3]]],[11,"utf8_error","","Access the underlying UTF-8 validation error.",12,[[],["utf8error",3]]],[11,"field","","The field index of a byte record in which UTF-8 validation…",13,[[]]],[11,"valid_up_to","","The index into the given field up to which valid UTF-8 was…",13,[[]]],[11,"error","","Returns the error which caused the call to `into_inner` to…",14,[[],["error",3]]],[11,"into_inner","","Returns the underlying writer which generated the error.",14,[[]]],[11,"new","","Create a new builder for configuring CSV parsing.",15,[[],["readerbuilder",3]]],[11,"from_path","","Build a CSV parser from this configuration that reads data…",15,[[["path",3],["asref",8]],[["result",6],["reader",3]]]],[11,"from_reader","","Build a CSV parser from this configuration that reads data…",15,[[["read",8]],[["read",8],["reader",3]]]],[11,"delimiter","","The field delimiter to use when parsing CSV.",15,[[],["readerbuilder",3]]],[11,"has_headers","","Whether to treat the first row as a special header row.",15,[[],["readerbuilder",3]]],[11,"flexible","","Whether the number of fields in records is allowed to…",15,[[],["readerbuilder",3]]],[11,"trim","","Whether fields are trimmed of leading and trailing…",15,[[["trim",4]],["readerbuilder",3]]],[11,"terminator","","The record terminator to use when parsing CSV.",15,[[["terminator",4]],["readerbuilder",3]]],[11,"quote","","The quote character to use when parsing CSV.",15,[[],["readerbuilder",3]]],[11,"escape","","The escape character to use when parsing CSV.",15,[[["option",4]],["readerbuilder",3]]],[11,"double_quote","","Enable double quote escapes.",15,[[],["readerbuilder",3]]],[11,"quoting","","Enable or disable quoting.",15,[[],["readerbuilder",3]]],[11,"comment","","The comment character to use when parsing CSV.",15,[[["option",4]],["readerbuilder",3]]],[11,"ascii","","A convenience method for specifying a configuration to…",15,[[],["readerbuilder",3]]],[11,"buffer_capacity","","Set the capacity (in bytes) of the buffer used in the CSV…",15,[[],["readerbuilder",3]]],[11,"from_path","","Create a new CSV parser with a default configuration for…",16,[[["path",3],["asref",8]],[["result",6],["reader",3]]]],[11,"from_reader","","Create a new CSV parser with a default configuration for…",16,[[],["reader",3]]],[11,"deserialize","","Returns a borrowed iterator over deserialized records.",16,[[],["deserializerecordsiter",3]]],[11,"into_deserialize","","Returns an owned iterator over deserialized records.",16,[[],["deserializerecordsintoiter",3]]],[11,"records","","Returns a borrowed iterator over all records as strings.",16,[[],["stringrecordsiter",3]]],[11,"into_records","","Returns an owned iterator over all records as strings.",16,[[],["stringrecordsintoiter",3]]],[11,"byte_records","","Returns a borrowed iterator over all records as raw bytes.",16,[[],["byterecordsiter",3]]],[11,"into_byte_records","","Returns an owned iterator over all records as raw bytes.",16,[[],["byterecordsintoiter",3]]],[11,"headers","","Returns a reference to the first row read by this parser.",16,[[],[["result",6],["stringrecord",3]]]],[11,"byte_headers","","Returns a reference to the first row read by this parser…",16,[[],[["result",6],["byterecord",3]]]],[11,"set_headers","","Set the headers of this CSV parser manually.",16,[[["stringrecord",3]]]],[11,"set_byte_headers","","Set the headers of this CSV parser manually as raw bytes.",16,[[["byterecord",3]]]],[11,"read_record","","Read a single row into the given record. Returns false…",16,[[["stringrecord",3]],["result",6]]],[11,"read_byte_record","","Read a single row into the given byte record. Returns…",16,[[["byterecord",3]],["result",6]]],[11,"position","","Return the current position of this CSV reader.",16,[[],["position",3]]],[11,"is_done","","Returns true if and only if this reader has been exhausted.",16,[[]]],[11,"has_headers","","Returns true if and only if this reader has been…",16,[[]]],[11,"get_ref","","Returns a reference to the underlying reader.",16,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying reader.",16,[[]]],[11,"into_inner","","Unwraps this CSV reader, returning the underlying reader.",16,[[]]],[11,"seek","","Seeks the underlying reader to the position given.",16,[[["position",3]],["result",6]]],[11,"seek_raw","","This is like `seek`, but provides direct control over how…",16,[[["position",3],["seekfrom",4]],["result",6]]],[11,"reader","","Return a reference to the underlying CSV reader.",17,[[],["reader",3]]],[11,"reader_mut","","Return a mutable reference to the underlying CSV reader.",17,[[],["reader",3]]],[11,"into_reader","","Drop this iterator and return the underlying CSV reader.",17,[[],["reader",3]]],[11,"reader","","Return a reference to the underlying CSV reader.",18,[[],["reader",3]]],[11,"reader_mut","","Return a mutable reference to the underlying CSV reader.",18,[[],["reader",3]]],[11,"reader","","Return a reference to the underlying CSV reader.",19,[[],["reader",3]]],[11,"reader_mut","","Return a mutable reference to the underlying CSV reader.",19,[[],["reader",3]]],[11,"into_reader","","Drop this iterator and return the underlying CSV reader.",19,[[],["reader",3]]],[11,"reader","","Return a reference to the underlying CSV reader.",20,[[],["reader",3]]],[11,"reader_mut","","Return a mutable reference to the underlying CSV reader.",20,[[],["reader",3]]],[11,"reader","","Return a reference to the underlying CSV reader.",21,[[],["reader",3]]],[11,"reader_mut","","Return a mutable reference to the underlying CSV reader.",21,[[],["reader",3]]],[11,"into_reader","","Drop this iterator and return the underlying CSV reader.",21,[[],["reader",3]]],[11,"reader","","Return a reference to the underlying CSV reader.",22,[[],["reader",3]]],[11,"reader_mut","","Return a mutable reference to the underlying CSV reader.",22,[[],["reader",3]]],[11,"new","","Create a new empty `StringRecord`.",23,[[],["stringrecord",3]]],[11,"with_capacity","","Create a new empty `StringRecord` with the given capacity.",23,[[],["stringrecord",3]]],[11,"from_byte_record","","Create a new `StringRecord` from a `ByteRecord`.",23,[[["byterecord",3]],[["stringrecord",3],["fromutf8error",3],["result",4]]]],[11,"from_byte_record_lossy","","Lossily create a new `StringRecord` from a `ByteRecord`.",23,[[["byterecord",3]],["stringrecord",3]]],[11,"deserialize","","Deserialize this record.",23,[[["stringrecord",3],["option",4]],[["deserialize",8],["result",6]]]],[11,"iter","","Returns an iterator over all fields in this record.",23,[[],["stringrecorditer",3]]],[11,"get","","Return the field at index `i`.",23,[[],["option",4]]],[11,"is_empty","","Returns true if and only if this record is empty.",23,[[]]],[11,"len","","Returns the number of fields in this record.",23,[[]]],[11,"truncate","","Truncate this record to `n` fields.",23,[[]]],[11,"clear","","Clear this record so that it has zero fields.",23,[[]]],[11,"trim","","Trim the fields of this record so that leading and…",23,[[]]],[11,"push_field","","Add a new field to this record.",23,[[]]],[11,"position","","Return the position of this record, if available.",23,[[],[["position",3],["option",4]]]],[11,"set_position","","Set the position of this record.",23,[[["position",3],["option",4]]]],[11,"range","","Return the start and end position of a field in this record.",23,[[],[["option",4],["range",3]]]],[11,"as_slice","","Return the entire row as a single string slice. The slice…",23,[[]]],[11,"as_byte_record","","Return a reference to this record\'s raw `ByteRecord`.",23,[[],["byterecord",3]]],[11,"into_byte_record","","Convert this `StringRecord` into a `ByteRecord`.",23,[[],["byterecord",3]]],[0,"tutorial","","A tutorial for handling CSV data in Rust.",null,null],[11,"new","","Create a new builder for configuring CSV writing.",24,[[],["writerbuilder",3]]],[11,"from_path","","Build a CSV writer from this configuration that writes…",24,[[["path",3],["asref",8]],[["result",6],["writer",3]]]],[11,"from_writer","","Build a CSV writer from this configuration that writes…",24,[[["write",8]],[["writer",3],["write",8]]]],[11,"delimiter","","The field delimiter to use when writing CSV.",24,[[],["writerbuilder",3]]],[11,"has_headers","","Whether to write a header row before writing any other row.",24,[[],["writerbuilder",3]]],[11,"flexible","","Whether the number of fields in records is allowed to…",24,[[],["writerbuilder",3]]],[11,"terminator","","The record terminator to use when writing CSV.",24,[[["terminator",4]],["writerbuilder",3]]],[11,"quote_style","","The quoting style to use when writing CSV.",24,[[["quotestyle",4]],["writerbuilder",3]]],[11,"quote","","The quote character to use when writing CSV.",24,[[],["writerbuilder",3]]],[11,"double_quote","","Enable double quote escapes.",24,[[],["writerbuilder",3]]],[11,"escape","","The escape character to use when writing CSV.",24,[[],["writerbuilder",3]]],[11,"buffer_capacity","","Set the capacity (in bytes) of the internal buffer used in…",24,[[],["writerbuilder",3]]],[11,"from_path","","Build a CSV writer with a default configuration that…",25,[[["path",3],["asref",8]],[["result",6],["writer",3]]]],[11,"from_writer","","Build a CSV writer with a default configuration that…",25,[[],["writer",3]]],[11,"serialize","","Serialize a single record using Serde.",25,[[["serialize",8]],["result",6]]],[11,"write_record","","Write a single record.",25,[[],["result",6]]],[11,"write_byte_record","","Write a single `ByteRecord`.",25,[[["byterecord",3]],["result",6]]],[11,"write_field","","Write a single field.",25,[[["asref",8]],["result",6]]],[11,"flush","","Flush the contents of the internal buffer to the…",25,[[],["result",6]]],[11,"into_inner","","Flush the contents of the internal buffer and return the…",25,[[],[["result",4],["intoinnererror",3]]]],[6,"Result","","A type alias for `Result<T, csv::Error>`.",null,null],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"into_iter","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"drop","","",25,[[]]],[11,"from","","",8,[[["stringrecord",3]],["byterecord",3]]],[11,"from","","",8,[[["vec",3]],["byterecord",3]]],[11,"from","","",8,[[],["byterecord",3]]],[11,"from","","",11,[[["error",3]],["error",3]]],[11,"from","","",23,[[["vec",3]],["stringrecord",3]]],[11,"from","","",23,[[],["stringrecord",3]]],[11,"next_back","","",26,[[],["option",4]]],[11,"next_back","","",27,[[],["option",4]]],[11,"extend","","",8,[[["intoiterator",8]]]],[11,"extend","","",23,[[["intoiterator",8]]]],[11,"next","","",26,[[],["option",4]]],[11,"size_hint","","",26,[[]]],[11,"count","","",26,[[]]],[11,"next","","",17,[[],[["result",6],["option",4]]]],[11,"next","","",18,[[],[["result",6],["option",4]]]],[11,"next","","",19,[[],[["option",4],["result",6]]]],[11,"next","","",20,[[],[["option",4],["result",6]]]],[11,"next","","",21,[[],[["option",4],["result",6]]]],[11,"next","","",22,[[],[["option",4],["result",6]]]],[11,"next","","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"count","","",27,[[]]],[11,"clone","","",8,[[],["byterecord",3]]],[11,"clone","","",9,[[],["position",3]]],[11,"clone","","",26,[[],["byterecorditer",3]]],[11,"clone","","",10,[[],["deserializeerror",3]]],[11,"clone","","",0,[[],["deserializeerrorkind",4]]],[11,"clone","","",12,[[],["fromutf8error",3]]],[11,"clone","","",13,[[],["utf8error",3]]],[11,"clone","","",23,[[],["stringrecord",3]]],[11,"clone","","",27,[[],["stringrecorditer",3]]],[11,"clone","","",5,[[],["quotestyle",4]]],[11,"clone","","",6,[[],["terminator",4]]],[11,"clone","","",7,[[],["trim",4]]],[11,"default","","",8,[[],["byterecord",3]]],[11,"default","","",15,[[],["readerbuilder",3]]],[11,"default","","",23,[[],["stringrecord",3]]],[11,"default","","",24,[[],["writerbuilder",3]]],[11,"default","","",5,[[],["quotestyle",4]]],[11,"default","","",6,[[],["terminator",4]]],[11,"default","","",7,[[],["trim",4]]],[11,"eq","","",8,[[["byterecord",3]]]],[11,"eq","","",8,[[["vec",3]]]],[11,"eq","","",8,[[]]],[11,"eq","","",9,[[["position",3]]]],[11,"ne","","",9,[[["position",3]]]],[11,"eq","","",10,[[["deserializeerror",3]]]],[11,"ne","","",10,[[["deserializeerror",3]]]],[11,"eq","","",0,[[["deserializeerrorkind",4]]]],[11,"ne","","",0,[[["deserializeerrorkind",4]]]],[11,"eq","","",12,[[["fromutf8error",3]]]],[11,"ne","","",12,[[["fromutf8error",3]]]],[11,"eq","","",13,[[["utf8error",3]]]],[11,"ne","","",13,[[["utf8error",3]]]],[11,"eq","","",23,[[["stringrecord",3]]]],[11,"eq","","",23,[[["vec",3]]]],[11,"eq","","",23,[[]]],[11,"eq","","",7,[[["trim",4]]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"index","","",8,[[]]],[11,"index","","",23,[[]]],[11,"from_iter","","",8,[[["intoiterator",8]],["byterecord",3]]],[11,"from_iter","","",23,[[["intoiterator",8]],["stringrecord",3]]],[11,"description","","",10,[[]]],[11,"source","","",11,[[],[["stderror",8],["option",4]]]],[11,"source","","",12,[[],[["stderror",8],["option",4]]]],[11,"source","","",14,[[],[["stderror",8],["option",4]]]],[11,"custom","","",11,[[["display",8]],["error",3]]],[11,"custom","","",10,[[["display",8]],["deserializeerror",3]]]],"p":[[4,"DeserializeErrorKind"],[4,"ErrorKind"],[13,"Utf8"],[13,"UnequalLengths"],[13,"Deserialize"],[4,"QuoteStyle"],[4,"Terminator"],[4,"Trim"],[3,"ByteRecord"],[3,"Position"],[3,"DeserializeError"],[3,"Error"],[3,"FromUtf8Error"],[3,"Utf8Error"],[3,"IntoInnerError"],[3,"ReaderBuilder"],[3,"Reader"],[3,"DeserializeRecordsIntoIter"],[3,"DeserializeRecordsIter"],[3,"StringRecordsIntoIter"],[3,"StringRecordsIter"],[3,"ByteRecordsIntoIter"],[3,"ByteRecordsIter"],[3,"StringRecord"],[3,"WriterBuilder"],[3,"Writer"],[3,"ByteRecordIter"],[3,"StringRecordIter"]]},\
"csv_core":{"doc":"`csv-core` provides a fast CSV reader and writer for use…","i":[[3,"Reader","csv_core","A pull based CSV reader.",null,null],[3,"ReaderBuilder","","Builds a CSV reader with various configuration knobs.",null,null],[3,"Writer","","A writer for CSV data.",null,null],[3,"WriterBuilder","","A builder for configuring a CSV writer.",null,null],[4,"ReadFieldNoCopyResult","","The result of parsing at most one field from CSV data…",null,null],[13,"InputEmpty","","The caller provided input was exhausted before the end of…",0,null],[13,"Field","","The end of a field was found.",0,null],[12,"record_end","csv_core::ReadFieldNoCopyResult","Whether this was the last field in a record or not.",1,null],[13,"End","csv_core","All CSV data has been read.",0,null],[4,"ReadFieldResult","","The result of parsing at most one field from CSV data.",null,null],[13,"InputEmpty","","The caller provided input was exhausted before the end of…",2,null],[13,"OutputFull","","The caller provided output buffer was filled before an…",2,null],[13,"Field","","The end of a field was found.",2,null],[12,"record_end","csv_core::ReadFieldResult","Whether this was the last field in a record or not.",3,null],[13,"End","csv_core","All CSV data has been read.",2,null],[4,"ReadRecordNoCopyResult","","The result of parsing at most one record from CSV data…",null,null],[13,"InputEmpty","","The caller provided input was exhausted before the end of…",4,null],[13,"Record","","The end of a record was found.",4,null],[13,"End","","All CSV data has been read.",4,null],[4,"ReadRecordResult","","The result of parsing at most one record from CSV data.",null,null],[13,"InputEmpty","","The caller provided input was exhausted before the end of…",5,null],[13,"OutputFull","","The caller provided output buffer was filled before an…",5,null],[13,"OutputEndsFull","","The caller provided output buffer of field end poisitions…",5,null],[13,"Record","","The end of a record was found.",5,null],[13,"End","","All CSV data has been read.",5,null],[4,"WriteResult","","The result of writing CSV data.",null,null],[13,"InputEmpty","","This result occurs when all of the bytes from the given…",6,null],[13,"OutputFull","","This result occurs when the output buffer was too small to…",6,null],[4,"Terminator","","A record terminator.",null,null],[13,"CRLF","","Parses `\\\\r`, `\\\\n` or `\\\\r\\\\n` as a single record terminator.",7,null],[13,"Any","","Parses the byte given as a record terminator.",7,null],[4,"QuoteStyle","","The quoting style to use when writing CSV data.",null,null],[13,"Always","","This puts quotes around every field. Always.",8,null],[13,"Necessary","","This puts quotes around fields only when necessary.",8,null],[13,"NonNumeric","","This puts quotes around all fields that are non-numeric.…",8,null],[13,"Never","","This never writes quotes, even if it would produce invalid…",8,null],[5,"is_non_numeric","","Returns true if and only if the given input is non-numeric.",null,[[]]],[5,"quote","","Escape quotes `input` and writes the result to `output`.",null,[[]]],[11,"new","","Create a new builder.",9,[[],["readerbuilder",3]]],[11,"build","","Build a CSV parser from this configuration.",9,[[],["reader",3]]],[11,"delimiter","","The field delimiter to use when parsing CSV.",9,[[],["readerbuilder",3]]],[11,"terminator","","The record terminator to use when parsing CSV.",9,[[["terminator",4]],["readerbuilder",3]]],[11,"quote","","The quote character to use when parsing CSV.",9,[[],["readerbuilder",3]]],[11,"escape","","The escape character to use when parsing CSV.",9,[[["option",4]],["readerbuilder",3]]],[11,"double_quote","","Enable double quote escapes.",9,[[],["readerbuilder",3]]],[11,"quoting","","Enable or disable quoting.",9,[[],["readerbuilder",3]]],[11,"comment","","The comment character to use when parsing CSV.",9,[[["option",4]],["readerbuilder",3]]],[11,"ascii","","A convenience method for specifying a configuration to…",9,[[],["readerbuilder",3]]],[11,"new","","Create a new CSV reader with a default parser configuration.",10,[[],["reader",3]]],[11,"reset","","Reset the parser such that it behaves as if it had never…",10,[[]]],[11,"line","","Return the current line number as measured by the number…",10,[[]]],[11,"set_line","","Set the line number.",10,[[]]],[11,"read_field","","Parse a single CSV field in `input` and copy field data to…",10,[[]]],[11,"read_record","","Parse a single CSV record in `input` and copy each field…",10,[[]]],[11,"new","","Create a new builder for configuring a CSV writer.",11,[[],["writerbuilder",3]]],[11,"build","","Builder a CSV writer from this configuration.",11,[[],["writer",3]]],[11,"delimiter","","The field delimiter to use when writing CSV.",11,[[],["writerbuilder",3]]],[11,"terminator","","The record terminator to use when writing CSV.",11,[[["terminator",4]],["writerbuilder",3]]],[11,"quote_style","","The quoting style to use when writing CSV.",11,[[["quotestyle",4]],["writerbuilder",3]]],[11,"quote","","The quote character to use when writing CSV.",11,[[],["writerbuilder",3]]],[11,"escape","","The escape character to use when writing CSV.",11,[[],["writerbuilder",3]]],[11,"double_quote","","The quoting escape mechanism to use when writing CSV.",11,[[],["writerbuilder",3]]],[11,"new","","Creates a new CSV writer with the default configuration.",12,[[],["writer",3]]],[11,"finish","","Finish writing CSV data to `output`.",12,[[]]],[11,"field","","Write a single CSV field from `input` to `output` while…",12,[[]]],[11,"delimiter","","Write the configured field delimiter to `output`.",12,[[]]],[11,"terminator","","Write the configured record terminator to `output`.",12,[[]]],[11,"is_special_byte","","Returns true if and only if the given byte corresponds to…",12,[[]]],[11,"should_quote","","Returns true if and only if we should put the given field…",12,[[]]],[11,"get_delimiter","","Return the delimiter used for this writer.",12,[[]]],[11,"get_terminator","","Return the terminator used for this writer.",12,[[],["terminator",4]]],[11,"get_quote_style","","Return the quoting style used for this writer.",12,[[],["quotestyle",4]]],[11,"get_quote","","Return the quote character used for this writer.",12,[[]]],[11,"get_escape","","Return the escape character used for this writer.",12,[[]]],[11,"get_double_quote","","Return whether this writer doubles quotes or not. When the…",12,[[]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[["readfieldresult",4]]]],[11,"ne","","",2,[[["readfieldresult",4]]]],[11,"eq","","",0,[[["readfieldnocopyresult",4]]]],[11,"ne","","",0,[[["readfieldnocopyresult",4]]]],[11,"eq","","",5,[[["readrecordresult",4]]]],[11,"eq","","",4,[[["readrecordnocopyresult",4]]]],[11,"eq","","",6,[[["writeresult",4]]]],[11,"clone","","",10,[[],["reader",3]]],[11,"clone","","",2,[[],["readfieldresult",4]]],[11,"clone","","",0,[[],["readfieldnocopyresult",4]]],[11,"clone","","",5,[[],["readrecordresult",4]]],[11,"clone","","",4,[[],["readrecordnocopyresult",4]]],[11,"clone","","",6,[[],["writeresult",4]]],[11,"clone","","",12,[[],["writer",3]]],[11,"clone","","",7,[[],["terminator",4]]],[11,"clone","","",8,[[],["quotestyle",4]]],[11,"default","","",10,[[],["reader",3]]],[11,"default","","",9,[[],["readerbuilder",3]]],[11,"default","","",11,[[],["writerbuilder",3]]],[11,"default","","",12,[[],["writer",3]]],[11,"default","","",7,[[],["terminator",4]]],[11,"default","","",8,[[],["quotestyle",4]]]],"p":[[4,"ReadFieldNoCopyResult"],[13,"Field"],[4,"ReadFieldResult"],[13,"Field"],[4,"ReadRecordNoCopyResult"],[4,"ReadRecordResult"],[4,"WriteResult"],[4,"Terminator"],[4,"QuoteStyle"],[3,"ReaderBuilder"],[3,"Reader"],[3,"WriterBuilder"],[3,"Writer"]]},\
"either":{"doc":"The enum `Either` with variants `Left` and `Right` is a…","i":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option",4]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option",4]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[],["either",4]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[],["either",4]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either",4]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either",4]]],[11,"left_or","","Return left value or given value",0,[[]]],[11,"left_or_default","","Return left or a default",0,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[]]],[11,"right_or","","Return right value or given value",0,[[]]],[11,"right_or_default","","Return right or a default",0,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[]]],[11,"unwrap_left","","Returns the left value",0,[[]]],[11,"unwrap_right","","Returns the right value",0,[[]]],[11,"expect_left","","Returns the left value",0,[[]]],[11,"expect_right","","Returns the right value",0,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[],["either",4]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"into_iter","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"from","","",0,[[["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["either",4]]]],[11,"ne","","",0,[[["either",4]]]],[11,"cmp","","",0,[[["either",4]],["ordering",4]]],[11,"partial_cmp","","",0,[[["either",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["either",4]]]],[11,"le","","",0,[[["either",4]]]],[11,"gt","","",0,[[["either",4]]]],[11,"ge","","",0,[[["either",4]]]],[11,"hash","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"into","","",0,[[],["result",4]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"fold","","",0,[[]]],[11,"count","","",0,[[]]],[11,"last","","",0,[[],["option",4]]],[11,"nth","","",0,[[],["option",4]]],[11,"collect","","",0,[[]]],[11,"all","","",0,[[]]],[11,"extend","","",0,[[]]],[11,"clone","","",0,[[],["either",4]]]],"p":[[4,"Either"]]},\
"half":{"doc":"A crate that provides support for half-precision 16-bit…","i":[[3,"f16","half","A 16-bit floating point type implementing the IEEE…",null,null],[3,"bf16","","A 16-bit floating point type implementing the `bfloat16`…",null,null],[11,"from_bits","","Constructs a `bf16` value from the raw bits.",0,[[],["bf16",3]]],[11,"from_f32","","Constructs a `bf16` value from a 32-bit floating point…",0,[[],["bf16",3]]],[11,"from_f64","","Constructs a `bf16` value from a 64-bit floating point…",0,[[],["bf16",3]]],[11,"to_bits","","Converts a `bf16` into the underlying bit representation.",0,[[]]],[11,"to_le_bytes","","Return the memory representation of the underlying bit…",0,[[]]],[11,"to_be_bytes","","Return the memory representation of the underlying bit…",0,[[]]],[11,"to_ne_bytes","","Return the memory representation of the underlying bit…",0,[[]]],[11,"from_le_bytes","","Create a floating point value from its representation as a…",0,[[],["bf16",3]]],[11,"from_be_bytes","","Create a floating point value from its representation as a…",0,[[],["bf16",3]]],[11,"from_ne_bytes","","Create a floating point value from its representation as a…",0,[[],["bf16",3]]],[11,"to_f32","","Converts a `bf16` value into an `f32` value.",0,[[]]],[11,"to_f64","","Converts a `bf16` value into an `f64` value.",0,[[]]],[11,"is_nan","","Returns `true` if this value is NaN and `false` otherwise.",0,[[]]],[11,"is_infinite","","Returns `true` if this value is ±∞ and `false` otherwise.",0,[[]]],[11,"is_finite","","Returns `true` if this number is neither infinite nor NaN.",0,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",0,[[]]],[11,"classify","","Returns the floating point category of the number.",0,[[],["fpcategory",4]]],[11,"signum","","Returns a number that represents the sign of `self`.",0,[[],["bf16",3]]],[11,"is_sign_positive","","Returns `true` if and only if `self` has a positive sign,…",0,[[]]],[11,"is_sign_negative","","Returns `true` if and only if `self` has a negative sign,…",0,[[]]],[18,"DIGITS","","Approximate number of `bf16` significant digits in base 10.",0,null],[18,"EPSILON","","`bf16` machine epsilon value.",0,null],[18,"INFINITY","","`bf16` positive Infinity (+∞).",0,null],[18,"MANTISSA_DIGITS","","Number of `bf16` significant digits in base 2.",0,null],[18,"MAX","","Largest finite `bf16` value.",0,null],[18,"MAX_10_EXP","","Maximum possible `bf16` power of 10 exponent.",0,null],[18,"MAX_EXP","","Maximum possible `bf16` power of 2 exponent.",0,null],[18,"MIN","","Smallest finite `bf16` value.",0,null],[18,"MIN_10_EXP","","Minimum possible normal `bf16` power of 10 exponent.",0,null],[18,"MIN_EXP","","One greater than the minimum possible normal `bf16` power…",0,null],[18,"MIN_POSITIVE","","Smallest positive normal `bf16` value.",0,null],[18,"NAN","","`bf16` Not a Number (NaN).",0,null],[18,"NEG_INFINITY","","`bf16` negative infinity (-∞).",0,null],[18,"RADIX","","The radix or base of the internal representation of `bf16`.",0,null],[18,"MIN_POSITIVE_SUBNORMAL","","Minimum positive subnormal `bf16` value.",0,null],[18,"MAX_SUBNORMAL","","Maximum subnormal `bf16` value.",0,null],[18,"ONE","","`bf16` 1",0,null],[18,"ZERO","","`bf16` 0",0,null],[18,"NEG_ZERO","","`bf16` -0",0,null],[18,"E","","`bf16` Euler\'s number (ℯ).",0,null],[18,"PI","","`bf16` Archimedes\' constant (π).",0,null],[18,"FRAC_1_PI","","`bf16` 1/π",0,null],[18,"FRAC_1_SQRT_2","","`bf16` 1/√2",0,null],[18,"FRAC_2_PI","","`bf16` 2/π",0,null],[18,"FRAC_2_SQRT_PI","","`bf16` 2/√π",0,null],[18,"FRAC_PI_2","","`bf16` π/2",0,null],[18,"FRAC_PI_3","","`bf16` π/3",0,null],[18,"FRAC_PI_4","","`bf16` π/4",0,null],[18,"FRAC_PI_6","","`bf16` π/6",0,null],[18,"FRAC_PI_8","","`bf16` π/8",0,null],[18,"LN_10","","`bf16` 𝗅𝗇 10",0,null],[18,"LN_2","","`bf16` 𝗅𝗇 2",0,null],[18,"LOG10_E","","`bf16` 𝗅𝗈𝗀₁₀ℯ",0,null],[18,"LOG10_2","","`bf16` 𝗅𝗈𝗀₁₀2",0,null],[18,"LOG2_E","","`bf16` 𝗅𝗈𝗀₂ℯ",0,null],[18,"LOG2_10","","`bf16` 𝗅𝗈𝗀₂10",0,null],[18,"SQRT_2","","`bf16` √2",0,null],[11,"from_bits","","Constructs a 16-bit floating point value from the raw bits.",1,[[],["f16",3]]],[11,"from_f32","","Constructs a 16-bit floating point value from a 32-bit…",1,[[],["f16",3]]],[11,"from_f64","","Constructs a 16-bit floating point value from a 64-bit…",1,[[],["f16",3]]],[11,"to_bits","","Converts a `f16` into the underlying bit representation.",1,[[]]],[11,"to_le_bytes","","Return the memory representation of the underlying bit…",1,[[]]],[11,"to_be_bytes","","Return the memory representation of the underlying bit…",1,[[]]],[11,"to_ne_bytes","","Return the memory representation of the underlying bit…",1,[[]]],[11,"from_le_bytes","","Create a floating point value from its representation as a…",1,[[],["f16",3]]],[11,"from_be_bytes","","Create a floating point value from its representation as a…",1,[[],["f16",3]]],[11,"from_ne_bytes","","Create a floating point value from its representation as a…",1,[[],["f16",3]]],[11,"as_bits","","Converts a `f16` into the underlying bit representation.",1,[[]]],[11,"to_f32","","Converts a `f16` value into a `f32` value.",1,[[]]],[11,"to_f64","","Converts a `f16` value into a `f64` value.",1,[[]]],[11,"is_nan","","Returns `true` if this value is `NaN` and `false` otherwise.",1,[[]]],[11,"is_infinite","","Returns `true` if this value is ±∞ and `false` otherwise.",1,[[]]],[11,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",1,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",1,[[]]],[11,"classify","","Returns the floating point category of the number.",1,[[],["fpcategory",4]]],[11,"signum","","Returns a number that represents the sign of `self`.",1,[[],["f16",3]]],[11,"is_sign_positive","","Returns `true` if and only if `self` has a positive sign,…",1,[[]]],[11,"is_sign_negative","","Returns `true` if and only if `self` has a negative sign,…",1,[[]]],[18,"DIGITS","","Approximate number of `f16` significant digits in base 10.",1,null],[18,"EPSILON","","`f16` machine epsilon value.",1,null],[18,"INFINITY","","`f16` positive Infinity (+∞).",1,null],[18,"MANTISSA_DIGITS","","Number of `f16` significant digits in base 2.",1,null],[18,"MAX","","Largest finite `f16` value.",1,null],[18,"MAX_10_EXP","","Maximum possible `f16` power of 10 exponent.",1,null],[18,"MAX_EXP","","Maximum possible `f16` power of 2 exponent.",1,null],[18,"MIN","","Smallest finite `f16` value.",1,null],[18,"MIN_10_EXP","","Minimum possible normal `f16` power of 10 exponent.",1,null],[18,"MIN_EXP","","One greater than the minimum possible normal `f16` power…",1,null],[18,"MIN_POSITIVE","","Smallest positive normal `f16` value.",1,null],[18,"NAN","","`f16` Not a Number (NaN).",1,null],[18,"NEG_INFINITY","","`f16` negative infinity (-∞).",1,null],[18,"RADIX","","The radix or base of the internal representation of `f16`.",1,null],[18,"MIN_POSITIVE_SUBNORMAL","","Minimum positive subnormal `f16` value.",1,null],[18,"MAX_SUBNORMAL","","Maximum subnormal `f16` value.",1,null],[18,"ONE","","`f16` 1",1,null],[18,"ZERO","","`f16` 0",1,null],[18,"NEG_ZERO","","`f16` -0",1,null],[18,"E","","`f16` Euler\'s number (ℯ).",1,null],[18,"PI","","`f16` Archimedes\' constant (π).",1,null],[18,"FRAC_1_PI","","`f16` 1/π",1,null],[18,"FRAC_1_SQRT_2","","`f16` 1/√2",1,null],[18,"FRAC_2_PI","","`f16` 2/π",1,null],[18,"FRAC_2_SQRT_PI","","`f16` 2/√π",1,null],[18,"FRAC_PI_2","","`f16` π/2",1,null],[18,"FRAC_PI_3","","`f16` π/3",1,null],[18,"FRAC_PI_4","","`f16` π/4",1,null],[18,"FRAC_PI_6","","`f16` π/6",1,null],[18,"FRAC_PI_8","","`f16` π/8",1,null],[18,"LN_10","","`f16` 𝗅𝗇 10",1,null],[18,"LN_2","","`f16` 𝗅𝗇 2",1,null],[18,"LOG10_E","","`f16` 𝗅𝗈𝗀₁₀ℯ",1,null],[18,"LOG10_2","","`f16` 𝗅𝗈𝗀₁₀2",1,null],[18,"LOG2_E","","`f16` 𝗅𝗈𝗀₂ℯ",1,null],[18,"LOG2_10","","`f16` 𝗅𝗈𝗀₂10",1,null],[18,"SQRT_2","","`f16` √2",1,null],[0,"slice","","Contains utility functions and traits to convert between…",null,null],[5,"from_bits_mut","half::slice","Reinterpret a mutable slice of `u16` bits as a mutable…",null,[[]]],[5,"to_bits_mut","","Reinterpret a mutable slice of `f16` numbers as a mutable…",null,[[]]],[5,"from_bits","","Reinterpret a slice of `u16` bits as a slice of `f16`…",null,[[]]],[5,"to_bits","","Reinterpret a slice of `f16` numbers as a slice of `u16`…",null,[[]]],[8,"HalfFloatSliceExt","","Extensions to `[f16]` and `[bf16]` slices to support…",null,null],[10,"reinterpret_cast","","Reinterpret a slice of `f16` or `bf16` numbers as a slice…",2,[[]]],[10,"reinterpret_cast_mut","","Reinterpret a mutable slice of `f16` or `bf16` numbers as…",2,[[]]],[10,"convert_from_f32_slice","","Convert all of the elements of a `[f32]` slice into `f16`…",2,[[]]],[10,"convert_from_f64_slice","","Convert all of the elements of a `[f64]` slice into `f16`…",2,[[]]],[10,"convert_to_f32_slice","","Convert all of the `f16` or `bf16` elements of `self` into…",2,[[]]],[10,"convert_to_f64_slice","","Convert all of the `f16` or `bf16` elements of `self` into…",2,[[]]],[8,"HalfBitsSliceExt","","Extensions to `[u16]` slices to support reinterpret…",null,null],[10,"reinterpret_cast","","Reinterpret a slice of `u16` bits as a slice of `f16` or…",3,[[]]],[10,"reinterpret_cast_mut","","Reinterpret a mutable slice of `u16` bits as a mutable…",3,[[]]],[0,"consts","half","Useful `f16` constants.",null,null],[17,"DIGITS","half::consts","Approximate number of `f16` significant digits in base 10.",null,null],[17,"EPSILON","","`f16` machine epsilon value.",null,null],[17,"INFINITY","","`f16` positive Infinity (+∞).",null,null],[17,"MANTISSA_DIGITS","","Number of `f16` significant digits in base 2.",null,null],[17,"MAX","","Largest finite `f16` value.",null,null],[17,"MAX_10_EXP","","Maximum possible `f16` power of 10 exponent.",null,null],[17,"MAX_EXP","","Maximum possible `f16` power of 2 exponent.",null,null],[17,"MIN","","Smallest finite `f16` value.",null,null],[17,"MIN_10_EXP","","Minimum possible normal `f16` power of 10 exponent.",null,null],[17,"MIN_EXP","","One greater than the minimum possible normal `f16` power…",null,null],[17,"MIN_POSITIVE","","Smallest positive normal `f16` value.",null,null],[17,"NAN","","`f16` Not a Number (NaN).",null,null],[17,"NEG_INFINITY","","`f16` negative infinity (-∞).",null,null],[17,"RADIX","","The radix or base of the internal representation of `f16`.",null,null],[17,"MIN_POSITIVE_SUBNORMAL","","Minimum positive subnormal `f16` value.",null,null],[17,"MAX_SUBNORMAL","","Maximum subnormal `f16` value.",null,null],[17,"ONE","","`f16` 1",null,null],[17,"ZERO","","`f16` 0",null,null],[17,"NEG_ZERO","","`f16` -0",null,null],[17,"E","","`f16` Euler\'s number (ℯ).",null,null],[17,"PI","","`f16` Archimedes\' constant (π).",null,null],[17,"FRAC_1_PI","","`f16` 1/π",null,null],[17,"FRAC_1_SQRT_2","","`f16` 1/√2",null,null],[17,"FRAC_2_PI","","`f16` 2/π",null,null],[17,"FRAC_2_SQRT_PI","","`f16` 2/√π",null,null],[17,"FRAC_PI_2","","`f16` π/2",null,null],[17,"FRAC_PI_3","","`f16` π/3",null,null],[17,"FRAC_PI_4","","`f16` π/4",null,null],[17,"FRAC_PI_6","","`f16` π/6",null,null],[17,"FRAC_PI_8","","`f16` π/8",null,null],[17,"LN_10","","`f16` 𝗅𝗇 10",null,null],[17,"LN_2","","`f16` 𝗅𝗇 2",null,null],[17,"LOG10_E","","`f16` 𝗅𝗈𝗀₁₀ℯ",null,null],[17,"LOG2_E","","`f16` 𝗅𝗈𝗀₂ℯ",null,null],[17,"SQRT_2","","`f16` √2",null,null],[0,"prelude","half","A collection of the most used items and traits in this…",null,null],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",0,[[],["bf16",3]]],[11,"from","","",0,[[],["bf16",3]]],[11,"from","","",1,[[],["f16",3]]],[11,"from","","",1,[[],["f16",3]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",0,[[["bf16",3]]]],[11,"eq","","",1,[[["f16",3]]]],[11,"partial_cmp","","",0,[[["bf16",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["bf16",3]]]],[11,"le","","",0,[[["bf16",3]]]],[11,"gt","","",0,[[["bf16",3]]]],[11,"ge","","",0,[[["bf16",3]]]],[11,"partial_cmp","","",1,[[["f16",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["f16",3]]]],[11,"le","","",1,[[["f16",3]]]],[11,"gt","","",1,[[["f16",3]]]],[11,"ge","","",1,[[["f16",3]]]],[11,"from_str","","",0,[[],[["bf16",3],["parsefloaterror",3],["result",4]]]],[11,"from_str","","",1,[[],[["f16",3],["parsefloaterror",3],["result",4]]]],[11,"clone","","",0,[[],["bf16",3]]],[11,"clone","","",1,[[],["f16",3]]],[11,"default","","",0,[[],["bf16",3]]],[11,"default","","",1,[[],["f16",3]]]],"p":[[3,"bf16"],[3,"f16"],[8,"HalfFloatSliceExt"],[8,"HalfBitsSliceExt"]]},\
"itertools":{"doc":"Extra iterator adaptors, functions and macros.","i":[[4,"Either","itertools","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[4,"Diff","","A type returned by the `diff_with` function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with…",1,null],[13,"Shorter","","The total number of elements that were in `J` along with…",1,null],[13,"Longer","","The total number of elements that were in `I` along with…",1,null],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See…",null,null],[13,"NoElements","","Empty iterator",2,null],[13,"OneElement","","Iterator with one element, so the minimum and maximum are…",2,null],[13,"MinMax","","More than one element in the iterator, the first element…",2,null],[4,"Position","","A value yielded by `WithPosition`. Indicates the position…",null,null],[13,"First","","This is the first element.",3,null],[13,"Middle","","This is neither the first nor the last element.",3,null],[13,"Last","","This is the last element.",3,null],[13,"Only","","This is the only element.",3,null],[4,"EitherOrBoth","","Value that either holds a single A or B, or both.",null,null],[13,"Both","","Both values are present.",4,null],[13,"Left","","Only the left value of type `A` is present.",4,null],[13,"Right","","Only the right value of type `B` is present.",4,null],[4,"FoldWhile","","An enum used for controlling the execution of…",null,null],[13,"Continue","","Continue folding with this value",5,null],[13,"Done","","Fold is complete and will return this value",5,null],[5,"concat","","Combine all an iterator\'s elements into one element by…",null,[[]]],[5,"cons_tuples","","Create an iterator that maps for example iterators of…",null,[[],["constuples",3]]],[5,"diff_with","","Compares every element yielded by both `i` and `j` with…",null,[[],[["diff",4],["option",4]]]],[5,"kmerge_by","","Create an iterator that merges elements of the contained…",null,[[],["kmergeby",3]]],[5,"process_results","","“Lift” a function of the values of an iterator so that it…",null,[[],["result",4]]],[5,"repeat_n","","Create an iterator that produces `n` repetitions of…",null,[[],["repeatn",3]]],[5,"repeat_call","","An iterator source that produces elements indefinitely by…",null,[[],["repeatcall",3]]],[5,"unfold","","Creates a new unfold source with the specified closure as…",null,[[],["unfold",3]]],[5,"iterate","","Creates a new iterator that infinitely applies function to…",null,[[],["iterate",3]]],[5,"multizip","","An iterator that generalizes .zip() and allows running…",null,[[],["zip",3]]],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",null,[[],["interleave",3]]],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",null,[[],["merge",6]]],[5,"put_back","","Create an iterator where you can put back a single item",null,[[],["putback",3]]],[5,"put_back_n","","Create an iterator where you can put back multiple values…",null,[[],["putbackn",3]]],[5,"multipeek","","An iterator adaptor that allows the user to peek at…",null,[[],["multipeek",3]]],[5,"kmerge","","Create an iterator that merges elements of the contained…",null,[[],["kmerge",6]]],[5,"zip_eq","","Iterate `i` and `j` in lock step.",null,[[],["zipeq",3]]],[5,"merge_join_by","","Return an iterator adaptor that merge-joins items from the…",null,[[],["mergejoinby",3]]],[5,"rciter","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",null,[[],["rciter",3]]],[5,"enumerate","","Iterate `iterable` with a running index.",null,[[],["enumerate",3]]],[5,"rev","","Iterate `iterable` in reverse.",null,[[],["rev",3]]],[5,"zip","","Iterate `i` and `j` in lock step.",null,[[],["zip",3]]],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",null,[[],["chain",3]]],[5,"cloned","","Create an iterator that clones each element from &T to T",null,[[],["cloned",3]]],[5,"fold","","Perform a fold operation over the iterable.",null,[[]]],[5,"all","","Test whether the predicate holds for all elements in the…",null,[[]]],[5,"any","","Test whether the predicate holds for any elements in the…",null,[[]]],[5,"max","","Return the maximum value of the iterable.",null,[[],["option",4]]],[5,"min","","Return the minimum value of the iterable.",null,[[],["option",4]]],[5,"join","","Combine all iterator elements into one String, seperated…",null,[[],["string",3]]],[5,"sorted","","Sort all iterator elements into a new iterator in…",null,[[],["intoiter",3]]],[5,"equal","","Return `true` if both iterables produce equal sequences…",null,[[]]],[5,"assert_equal","","Assert that two iterables produce equal sequences, with…",null,[[]]],[5,"partition","","Partition a sequence using predicate `pred` so that…",null,[[]]],[0,"structs","","The concrete iterator types.",null,null],[3,"DedupBy","itertools::structs","An iterator adaptor that removes repeated duplicates,…",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two…",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two…",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single item…",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure receives a…",null,null],[3,"MapInto","","An iterator adapter to apply `Into` conversion to each…",null,null],[3,"MapResults","","An iterator adapter to apply a transformation within a…",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in…",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able…",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator…",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent…",null,null],[3,"TupleCombinations","","An iterator to iterate through all combinations in a…",null,null],[3,"Positions","","An iterator adapter to get the positions of each element…",null,null],[3,"Update","","An iterator adapter to apply a mutating function to each…",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the…",null,null],[3,"MultiProduct","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"Combinations","","An iterator to iterate through all the `k`-length…",null,null],[3,"CombinationsWithReplacement","","An iterator to iterate through all the `n`-length…",null,null],[3,"ConsTuples","","An iterator that maps an iterator of tuples like `((A, B),…",null,null],[3,"ExactlyOneError","","Iterator returned for the error case of…",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",null,null],[3,"Chunk","","An iterator for the elements in a single chunk.",null,null],[3,"Chunks","","An iterator that yields the Chunk iterators.",null,null],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",null,null],[3,"Group","","An iterator for the elements in a single group.",null,null],[3,"Groups","","An iterator that yields the Group iterators.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value between…",null,null],[3,"KMergeBy","","An iterator adaptor that merges an abitrary number of base…",null,null],[3,"MergeJoinBy","","An iterator adaptor that merge-joins items from the two…",null,null],[3,"MultiPeek","","See `multipeek()` for more information.",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum…",null,null],[3,"PeekingTakeWhile","","An iterator adaptor that takes items while a closure…",null,null],[3,"Permutations","","An iterator adaptor that iterates through all the…",null,null],[3,"ProcessResults","","An iterator that produces only the `T` values as long as…",null,null],[3,"PutBackN","","An iterator adaptor that allows putting multiple items in…",null,null],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the…",null,null],[12,"rciter","","The boxed iterator.",6,null],[3,"RepeatN","","An iterator that produces n repetitions of an element.",null,null],[3,"RepeatCall","","See `repeat_call` for more information.",null,null],[3,"Unfold","","See `unfold` for more information.",null,null],[12,"state","","Internal state that will be passed to the closure on the…",7,null],[3,"Iterate","","An iterator that infinitely applies function to value and…",null,null],[3,"Tee","","One half of an iterator pair where both return the same…",null,null],[3,"TupleBuffer","","An iterator over a incomplete tuple.",null,null],[3,"TupleWindows","","An iterator over all contiguous windows that produces…",null,null],[3,"Tuples","","An iterator that groups the items in tuples of a specific…",null,null],[3,"Unique","","An iterator adapter to filter out duplicate elements.",null,null],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",null,null],[3,"WithPosition","","An iterator adaptor that wraps each element in an…",null,null],[3,"ZipEq","","An iterator which iterates two other iterators…",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators…",null,null],[3,"Zip","","See `multizip` for more information.",null,null],[6,"Dedup","","An iterator adaptor that removes repeated duplicates.",null,null],[6,"Merge","","An iterator adaptor that merges the two base iterators in…",null,null],[6,"KMerge","","An iterator adaptor that merges an abitrary number of base…",null,null],[0,"traits","itertools","Traits helpful for using certain `Itertools` methods in…",null,null],[8,"HomogeneousTuple","itertools::traits","Implemented for homogeneous tuples of size up to 4.",null,null],[11,"with_value","itertools::structs","put back value `value` (builder method)",8,[[]]],[11,"into_parts","","Split the `PutBack` into its parts.",8,[[]]],[11,"put_back","","Put back a single value to the front of the iterator.",8,[[]]],[11,"has_left","itertools","If `Left`, or `Both`, return true, otherwise, return false.",4,[[]]],[11,"has_right","","If `Right`, or `Both`, return true, otherwise, return false.",4,[[]]],[11,"is_left","","If Left, return true otherwise, return false. Exclusive…",4,[[]]],[11,"is_right","","If Right, return true otherwise, return false. Exclusive…",4,[[]]],[11,"is_both","","If Right, return true otherwise, return false. Equivalent…",4,[[]]],[11,"left","","If `Left`, or `Both`, return `Some` with the left value,…",4,[[],["option",4]]],[11,"right","","If `Right`, or `Both`, return `Some` with the right value,…",4,[[],["option",4]]],[11,"both","","If Both, return `Some` tuple containing left and right.",4,[[],["option",4]]],[11,"as_ref","","Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A,…",4,[[],["eitherorboth",4]]],[11,"as_mut","","Converts from `&mut EitherOrBoth<A, B>` to…",4,[[],["eitherorboth",4]]],[11,"flip","","Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.",4,[[],["eitherorboth",4]]],[11,"map_left","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[],["eitherorboth",4]]],[11,"map_right","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[],["eitherorboth",4]]],[11,"map_any","","Apply the functions `f` and `g` on the value `a` and `b`…",4,[[],["eitherorboth",4]]],[11,"left_and_then","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[],["eitherorboth",4]]],[11,"right_and_then","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[],["eitherorboth",4]]],[11,"reduce","","Return either value of left, right, or the product of `f`…",4,[[]]],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The…",2,[[],["option",4]]],[11,"reset_peek","itertools::structs","Reset the peeking “cursor”",9,[[]]],[11,"peek","","Works exactly like `.next()` with the only difference that…",9,[[],["option",4]]],[11,"put_back","","Puts x in front of the iterator. The values are yielded in…",10,[[]]],[11,"into_buffer","","Return a buffer with the produced items that was not…",11,[[],["tuplebuffer",3]]],[11,"into_inner","itertools","Return the inner value.",3,[[]]],[8,"PeekingNext","","An iterator that allows peeking at an element before…",null,null],[10,"peeking_next","","Pass a reference to the next iterator element to the…",12,[[],["option",4]]],[8,"Itertools","","An `Iterator` blanket implementation that provides extra…",null,null],[11,"interleave","","Alternate elements from two iterators until both have run…",13,[[],["interleave",3]]],[11,"interleave_shortest","","Alternate elements from two iterators until at least one…",13,[[],["interleaveshortest",3]]],[11,"intersperse","","An iterator adaptor to insert a particular value between…",13,[[],["intersperse",3]]],[11,"zip_longest","","Create an iterator which iterates over both this and the…",13,[[],["ziplongest",3]]],[11,"zip_eq","","Create an iterator which iterates over both this and the…",13,[[],["zipeq",3]]],[11,"batching","","A “meta iterator adaptor”. Its closure receives a…",13,[[],["batching",3]]],[11,"group_by","","Return an iterable that can group iterator elements.…",13,[[],["groupby",3]]],[11,"chunks","","Return an iterable that can chunk the iterator.",13,[[],["intochunks",3]]],[11,"tuple_windows","","Return an iterator over all contiguous windows producing…",13,[[],["tuplewindows",3]]],[11,"tuples","","Return an iterator that groups the items in tuples of a…",13,[[],["tuples",3]]],[11,"tee","","Split into an iterator pair that both yield all elements…",13,[[]]],[11,"step","","Return an iterator adaptor that steps `n` elements in the…",13,[[],["step",3]]],[11,"map_into","","Convert each item of the iterator using the `Into` trait.",13,[[],["mapinto",3]]],[11,"map_results","","Return an iterator adaptor that applies the provided…",13,[[],["mapresults",3]]],[11,"merge","","Return an iterator adaptor that merges the two base…",13,[[],["merge",6]]],[11,"merge_by","","Return an iterator adaptor that merges the two base…",13,[[],["mergeby",3]]],[11,"merge_join_by","","Create an iterator that merges items from both this and…",13,[[],["mergejoinby",3]]],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of…",13,[[],["kmerge",6]]],[11,"kmerge_by","","Return an iterator adaptor that flattens an iterator of…",13,[[],["kmergeby",3]]],[11,"cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[],["product",3]]],[11,"multi_cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[],["multiproduct",3]]],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure…",13,[[],["coalesce",3]]],[11,"dedup","","Remove duplicates from sections of consecutive identical…",13,[[],["dedup",6]]],[11,"dedup_by","","Remove duplicates from sections of consecutive identical…",13,[[],["dedupby",3]]],[11,"unique","","Return an iterator adaptor that filters out elements that…",13,[[],["unique",3]]],[11,"unique_by","","Return an iterator adaptor that filters out elements that…",13,[[],["uniqueby",3]]],[11,"peeking_take_while","","Return an iterator adaptor that borrows from this iterator…",13,[[],["peekingtakewhile",3]]],[11,"take_while_ref","","Return an iterator adaptor that borrows from a…",13,[[],["takewhileref",3]]],[11,"while_some","","Return an iterator adaptor that filters `Option<A>`…",13,[[],["whilesome",3]]],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the…",13,[[],["tuplecombinations",3]]],[11,"combinations","","Return an iterator adaptor that iterates over the…",13,[[],["combinations",3]]],[11,"combinations_with_replacement","","Return an iterator that iterates over the `k`-length…",13,[[],["combinationswithreplacement",3]]],[11,"permutations","","Return an iterator adaptor that iterates over all…",13,[[],["permutations",3]]],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a…",13,[[],["padusing",3]]],[11,"with_position","","Return an iterator adaptor that wraps each element in a…",13,[[],["withposition",3]]],[11,"positions","","Return an iterator adaptor that yields the indices of all…",13,[[],["positions",3]]],[11,"update","","Return an iterator adaptor that applies a mutating…",13,[[],["update",3]]],[11,"next_tuple","","Advances the iterator and returns the next items grouped…",13,[[],["option",4]]],[11,"collect_tuple","","Collects all items from the iterator into a tuple of a…",13,[[],["option",4]]],[11,"find_position","","Find the position and value of the first element…",13,[[],["option",4]]],[11,"all_equal","","Check whether all elements compare equal.",13,[[]]],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,…",13,[[]]],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,…",13,[[]]],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",13,[[]]],[11,"concat","","Combine all an iterator\'s elements into one element by…",13,[[]]],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of…",13,[[],["vec",3]]],[11,"try_collect","","`.try_collect()` is more convenient way of writing…",13,[[],["result",4]]],[11,"set_from","","Assign to each reference in `self` from the `from`…",13,[[]]],[11,"join","","Combine all iterator elements into one String, separated…",13,[[],["string",3]]],[11,"format","","Format all iterator elements, separated by `sep`.",13,[[],["format",3]]],[11,"format_with","","Format all iterator elements, separated by `sep`.",13,[[],["formatwith",3]]],[11,"fold_results","","Fold `Result` values from an iterator.",13,[[],["result",4]]],[11,"fold_options","","Fold `Option` values from an iterator.",13,[[],["option",4]]],[11,"fold1","","Accumulator of the elements in the iterator.",13,[[],["option",4]]],[11,"tree_fold1","","Accumulate the elements in the iterator in a tree-like…",13,[[],["option",4]]],[11,"fold_while","","An iterator method that applies a function, producing a…",13,[[],["foldwhile",4]]],[11,"sum1","","Iterate over the entire iterator and add all the elements.",13,[[],["option",4]]],[11,"product1","","Iterate over the entire iterator and multiply all the…",13,[[],["option",4]]],[11,"sorted","","Sort all iterator elements into a new iterator in…",13,[[],["intoiter",3]]],[11,"sorted_by","","Sort all iterator elements into a new iterator in…",13,[[],["intoiter",3]]],[11,"sorted_by_key","","Sort all iterator elements into a new iterator in…",13,[[],["intoiter",3]]],[11,"partition_map","","Collect all iterator elements into one of two partitions.…",13,[[]]],[11,"into_group_map","","Return a `HashMap` of keys mapped to `Vec`s of values.…",13,[[],[["hashmap",3],["vec",3]]]],[11,"minmax","","Return the minimum and maximum elements in the iterator.",13,[[],["minmaxresult",4]]],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as…",13,[[],["minmaxresult",4]]],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as…",13,[[],["minmaxresult",4]]],[11,"position_max","","Return the position of the maximum element in the iterator.",13,[[],["option",4]]],[11,"position_max_by_key","","Return the position of the maximum element in the…",13,[[],["option",4]]],[11,"position_max_by","","Return the position of the maximum element in the…",13,[[],["option",4]]],[11,"position_min","","Return the position of the minimum element in the iterator.",13,[[],["option",4]]],[11,"position_min_by_key","","Return the position of the minimum element in the…",13,[[],["option",4]]],[11,"position_min_by","","Return the position of the minimum element in the…",13,[[],["option",4]]],[11,"position_minmax","","Return the positions of the minimum and maximum elements…",13,[[],["minmaxresult",4]]],[11,"position_minmax_by_key","","Return the postions of the minimum and maximum elements of…",13,[[],["minmaxresult",4]]],[11,"position_minmax_by","","Return the postions of the minimum and maximum elements of…",13,[[],["minmaxresult",4]]],[11,"exactly_one","","If the iterator yields exactly one element, that element…",13,[[],[["exactlyoneerror",3],["result",4]]]],[11,"into_inner","","Return the value in the continue or done.",5,[[]]],[11,"is_done","","Return true if `self` is `Done`, false if it is `Continue`.",5,[[]]],[14,"iproduct","","Create an iterator over the “cartesian product” of…",null,null],[14,"izip","","Create an iterator running multiple iterators in lockstep.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","itertools::structs","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"into_iter","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into_iter","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"into_iter","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"into_iter","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"into_iter","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"into_iter","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"into_iter","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"into_iter","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into_iter","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"into_iter","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"into_iter","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"into_iter","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"into_iter","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"into_iter","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"into_iter","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"into_iter","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"into_iter","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"into_iter","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"into_iter","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"into_iter","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"into_iter","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"extend","itertools","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"into","","",0,[[],["result",4]]],[11,"clone","","",0,[[],["either",4]]],[11,"deref_mut","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"from","","",0,[[["result",4]],["either",4]]],[11,"cmp","","",0,[[["either",4]],["ordering",4]]],[11,"eq","","",0,[[["either",4]]]],[11,"ne","","",0,[[["either",4]]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"fold","","",0,[[]]],[11,"count","","",0,[[]]],[11,"last","","",0,[[],["option",4]]],[11,"nth","","",0,[[],["option",4]]],[11,"collect","","",0,[[]]],[11,"all","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next_back","","",0,[[],["option",4]]],[11,"partial_cmp","","",0,[[["either",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["either",4]]]],[11,"le","","",0,[[["either",4]]]],[11,"gt","","",0,[[["either",4]]]],[11,"ge","","",0,[[["either",4]]]],[11,"peeking_next","itertools::structs","",9,[[],["option",4]]],[11,"peeking_next","","",8,[[],["option",4]]],[11,"peeking_next","","",10,[[],["option",4]]],[11,"drop","","",40,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"into","itertools","",4,[[],[["either",4],["option",4]]]],[11,"next_back","itertools::structs","",19,[[],["option",4]]],[11,"next_back","","",26,[[],["option",4]]],[11,"next_back","","",27,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",45,[[],["option",4]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",49,[[],["option",4]]],[11,"next_back","","",59,[[],["option",4]]],[11,"next","","",29,[[],["option",4]]],[11,"count","","",29,[[]]],[11,"size_hint","","",29,[[]]],[11,"last","","",29,[[],["option",4]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"count","","",8,[[]]],[11,"last","","",8,[[],["option",4]]],[11,"nth","","",8,[[],["option",4]]],[11,"all","","",8,[[]]],[11,"fold","","",8,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"fold","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",28,[[],["option",4]]],[11,"size_hint","","",28,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",24,[[],["option",4]]],[11,"size_hint","","",24,[[]]],[11,"next","","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"fold","","",14,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"next","","",23,[[],["option",4]]],[11,"size_hint","","",23,[[]]],[11,"next","","",25,[[],["option",4]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"fold","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"fold","","",20,[[]]],[11,"collect","","",20,[[]]],[11,"next","","",26,[[],["option",4]]],[11,"size_hint","","",26,[[]]],[11,"next","","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"fold","","",27,[[]]],[11,"collect","","",27,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",30,[[],["option",4]]],[11,"next","","",31,[[],["option",4]]],[11,"next","","",33,[[],["option",4]]],[11,"size_hint","","",33,[[]]],[11,"next","","",41,[[],["option",4]]],[11,"next","","",40,[[],["option",4]]],[11,"next","","",38,[[],["option",4]]],[11,"next","","",37,[[],["option",4]]],[11,"next","","",42,[[],["option",4]]],[11,"size_hint","","",42,[[]]],[11,"fold","","",42,[[]]],[11,"next","","",43,[[],["option",4]]],[11,"size_hint","","",43,[[]]],[11,"next","","",44,[[],["option",4]]],[11,"size_hint","","",44,[[]]],[11,"count","","",44,[[]]],[11,"last","","",44,[[],["option",4]]],[11,"nth","","",44,[[],["option",4]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"next","","",45,[[],["option",4]]],[11,"size_hint","","",45,[[]]],[11,"next","","",46,[[],["option",4]]],[11,"size_hint","","",46,[[]]],[11,"next","","",47,[[],["option",4]]],[11,"count","","",47,[[]]],[11,"size_hint","","",47,[[]]],[11,"next","","",48,[[],["option",4]]],[11,"size_hint","","",48,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",49,[[],["option",4]]],[11,"size_hint","","",49,[[]]],[11,"next","","",50,[[],["option",4]]],[11,"size_hint","","",50,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",51,[[],["option",4]]],[11,"size_hint","","",51,[[]]],[11,"next","","",52,[[],["option",4]]],[11,"size_hint","","",52,[[]]],[11,"next","","",53,[[],["option",4]]],[11,"size_hint","","",53,[[]]],[11,"next","","",11,[[],["option",4]]],[11,"next","","",54,[[],["option",4]]],[11,"next","","",56,[[],["option",4]]],[11,"size_hint","","",56,[[]]],[11,"count","","",56,[[]]],[11,"next","","",55,[[],["option",4]]],[11,"size_hint","","",55,[[]]],[11,"count","","",55,[[]]],[11,"next","","",57,[[],["option",4]]],[11,"size_hint","","",57,[[]]],[11,"next","","",58,[[],["option",4]]],[11,"size_hint","","",58,[[]]],[11,"next","","",59,[[],["option",4]]],[11,"size_hint","","",59,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"clone","","",29,[[],["multiproduct",3]]],[11,"clone","","",15,[[],["interleave",3]]],[11,"clone","","",16,[[],["interleaveshortest",3]]],[11,"clone","","",8,[[],["putback",3]]],[11,"clone","","",17,[[],["product",3]]],[11,"clone","","",18,[[],["batching",3]]],[11,"clone","","",28,[[],["step",3]]],[11,"clone","","",21,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",23,[[],["whilesome",3]]],[11,"clone","","",25,[[],["tuplecombinations",3]]],[11,"clone","","",19,[[],["mapinto",3]]],[11,"clone","","",20,[[],["mapresults",3]]],[11,"clone","","",26,[[],["positions",3]]],[11,"clone","","",27,[[],["update",3]]],[11,"clone","itertools","",4,[[],["eitherorboth",4]]],[11,"clone","itertools::structs","",32,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[],["combinationswithreplacement",3]]],[11,"clone","","",33,[[],["exactlyoneerror",3]]],[11,"clone","","",35,[[],["formatwith",3]]],[11,"clone","","",34,[[],["format",3]]],[11,"clone","","",42,[[],["intersperse",3]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","itertools","",2,[[],["minmaxresult",4]]],[11,"clone","itertools::structs","",9,[[],["multipeek",3]]],[11,"clone","","",45,[[],["padusing",3]]],[11,"clone","","",47,[[]]],[11,"clone","","",10,[[],["putbackn",3]]],[11,"clone","","",6,[[]]],[11,"clone","","",49,[[],["repeatn",3]]],[11,"clone","","",50,[[],["repeatcall",3]]],[11,"clone","","",7,[[],["unfold",3]]],[11,"clone","","",51,[[],["iterate",3]]],[11,"clone","","",53,[[],["tuplebuffer",3]]],[11,"clone","","",11,[[],["tuples",3]]],[11,"clone","","",54,[[],["tuplewindows",3]]],[11,"clone","","",56,[[],["uniqueby",3]]],[11,"clone","","",55,[[],["unique",3]]],[11,"clone","","",57,[[]]],[11,"clone","itertools","",3,[[],["position",4]]],[11,"clone","itertools::structs","",58,[[],["zipeq",3]]],[11,"clone","","",59,[[],["ziplongest",3]]],[11,"clone","","",60,[[],["zip",3]]],[11,"clone","itertools","",5,[[],["foldwhile",4]]],[11,"eq","","",4,[[["eitherorboth",4]]]],[11,"ne","","",4,[[["eitherorboth",4]]]],[11,"eq","","",2,[[["minmaxresult",4]]]],[11,"ne","","",2,[[["minmaxresult",4]]]],[11,"eq","","",3,[[["position",4]]]],[11,"ne","","",3,[[["position",4]]]],[11,"eq","","",5,[[["foldwhile",4]]]],[11,"ne","","",5,[[["foldwhile",4]]]],[11,"fmt","itertools::structs","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","itertools","",4,[[["formatter",3]],["result",6]]],[11,"fmt","itertools::structs","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","itertools","",2,[[["formatter",3]],["result",6]]],[11,"fmt","itertools::structs","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","itertools","",3,[[["formatter",3]],["result",6]]],[11,"fmt","itertools::structs","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","itertools","",5,[[["formatter",3]],["result",6]]],[11,"fmt","itertools::structs","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"hash","itertools","",4,[[]]],[11,"fmt","itertools::structs","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"is_left","itertools","Return true if the value is the `Left` variant.",0,[[]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option",4]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option",4]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[],["either",4]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[],["either",4]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either",4]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either",4]]],[11,"left_or","","Return left value or given value",0,[[]]],[11,"left_or_default","","Return left or a default",0,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[]]],[11,"right_or","","Return right value or given value",0,[[]]],[11,"right_or_default","","Return right or a default",0,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[]]],[11,"unwrap_left","","Returns the left value",0,[[]]],[11,"unwrap_right","","Returns the right value",0,[[]]],[11,"expect_left","","Returns the left value",0,[[]]],[11,"expect_right","","Returns the right value",0,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[],["either",4]]]],"p":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"Position"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"PutBack"],[3,"MultiPeek"],[3,"PutBackN"],[3,"Tuples"],[8,"PeekingNext"],[8,"Itertools"],[3,"DedupBy"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Product"],[3,"Batching"],[3,"MapInto"],[3,"MapResults"],[3,"MergeBy"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Coalesce"],[3,"TupleCombinations"],[3,"Positions"],[3,"Update"],[3,"Step"],[3,"MultiProduct"],[3,"Combinations"],[3,"CombinationsWithReplacement"],[3,"ConsTuples"],[3,"ExactlyOneError"],[3,"Format"],[3,"FormatWith"],[3,"IntoChunks"],[3,"Chunk"],[3,"Chunks"],[3,"GroupBy"],[3,"Group"],[3,"Groups"],[3,"Intersperse"],[3,"KMergeBy"],[3,"MergeJoinBy"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"Permutations"],[3,"ProcessResults"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"TupleWindows"],[3,"Unique"],[3,"UniqueBy"],[3,"WithPosition"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"]]},\
"itoa":{"doc":"github crates-io docs-rs","i":[[3,"Buffer","itoa","A safe API for formatting integers to text.",null,null],[5,"write","","Write integer to an `io::Write`.",null,[[["write",8],["integer",8]],["result",6]]],[5,"fmt","","Write integer to an `fmt::Write`.",null,[[["write",8],["integer",8]],["result",6]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and…",null,null],[11,"new","","This is a cheap operation; you don\'t need to worry about…",0,[[],["buffer",3]]],[11,"format","","Print an integer into this buffer and return a reference…",0,[[["integer",8]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[],["buffer",3]]]],"p":[[3,"Buffer"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[4,"c_void","libc","Equivalent to C\'s `void` type when used as a pointer.",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",66,null],[12,"e_type","","",66,null],[12,"e_machine","","",66,null],[12,"e_version","","",66,null],[12,"e_entry","","",66,null],[12,"e_phoff","","",66,null],[12,"e_shoff","","",66,null],[12,"e_flags","","",66,null],[12,"e_ehsize","","",66,null],[12,"e_phentsize","","",66,null],[12,"e_phnum","","",66,null],[12,"e_shentsize","","",66,null],[12,"e_shnum","","",66,null],[12,"e_shstrndx","","",66,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",68,null],[12,"st_value","","",68,null],[12,"st_size","","",68,null],[12,"st_info","","",68,null],[12,"st_other","","",68,null],[12,"st_shndx","","",68,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_flags","","",70,null],[12,"p_align","","",70,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_flags","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_align","","",71,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",72,null],[12,"sh_type","","",72,null],[12,"sh_flags","","",72,null],[12,"sh_addr","","",72,null],[12,"sh_offset","","",72,null],[12,"sh_size","","",72,null],[12,"sh_link","","",72,null],[12,"sh_info","","",72,null],[12,"sh_addralign","","",72,null],[12,"sh_entsize","","",72,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",74,null],[12,"ch_size","","",74,null],[12,"ch_addralign","","",74,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_reserved","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"ucred","","",null,null],[12,"pid","","",76,null],[12,"uid","","",76,null],[12,"gid","","",76,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",77,null],[12,"mnt_dir","","",77,null],[12,"mnt_type","","",77,null],[12,"mnt_opts","","",77,null],[12,"mnt_freq","","",77,null],[12,"mnt_passno","","",77,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",78,null],[12,"version","","",78,null],[12,"reserved","","",78,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",79,null],[12,"ipi6_ifindex","","",79,null],[3,"arpd_request","","",null,null],[12,"req","","",80,null],[12,"ip","","",80,null],[12,"dev","","",80,null],[12,"stamp","","",80,null],[12,"updated","","",80,null],[12,"ha","","",80,null],[3,"inotify_event","","",null,null],[12,"wd","","",81,null],[12,"mask","","",81,null],[12,"cookie","","",81,null],[12,"len","","",81,null],[3,"fanotify_response","","",null,null],[12,"fd","","",82,null],[12,"response","","",82,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",83,null],[12,"svm_reserved1","","",83,null],[12,"svm_port","","",83,null],[12,"svm_cid","","",83,null],[12,"svm_zero","","",83,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",84,null],[12,"rm_eo","","",84,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",85,null],[12,"ee_origin","","",85,null],[12,"ee_type","","",85,null],[12,"ee_code","","",85,null],[12,"ee_pad","","",85,null],[12,"ee_info","","",85,null],[12,"ee_data","","",85,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",86,null],[12,"nl_pid","","",86,null],[12,"nl_groups","","",86,null],[3,"dirent","","",null,null],[12,"d_ino","","",87,null],[12,"d_off","","",87,null],[12,"d_reclen","","",87,null],[12,"d_type","","",87,null],[12,"d_name","","",87,null],[3,"dirent64","","",null,null],[12,"d_ino","","",88,null],[12,"d_off","","",88,null],[12,"d_reclen","","",88,null],[12,"d_type","","",88,null],[12,"d_name","","",88,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",89,null],[12,"salg_type","","",89,null],[12,"salg_feat","","",89,null],[12,"salg_mask","","",89,null],[12,"salg_name","","",89,null],[3,"af_alg_iv","","WARNING: The `PartialEq`, `Eq` and `Hash` implementations…",null,null],[12,"ivlen","","",90,null],[12,"iv","","",90,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",91,null],[12,"mq_maxmsg","","",91,null],[12,"mq_msgsize","","",91,null],[12,"mq_curmsgs","","",91,null],[3,"statx","","",null,null],[12,"stx_mask","","",92,null],[12,"stx_blksize","","",92,null],[12,"stx_attributes","","",92,null],[12,"stx_nlink","","",92,null],[12,"stx_uid","","",92,null],[12,"stx_gid","","",92,null],[12,"stx_mode","","",92,null],[12,"__statx_pad1","","",92,null],[12,"stx_ino","","",92,null],[12,"stx_size","","",92,null],[12,"stx_blocks","","",92,null],[12,"stx_attributes_mask","","",92,null],[12,"stx_atime","","",92,null],[12,"stx_btime","","",92,null],[12,"stx_ctime","","",92,null],[12,"stx_mtime","","",92,null],[12,"stx_rdev_major","","",92,null],[12,"stx_rdev_minor","","",92,null],[12,"stx_dev_major","","",92,null],[12,"stx_dev_minor","","",92,null],[12,"__statx_pad2","","",92,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",93,null],[12,"tv_nsec","","",93,null],[12,"__statx_timestamp_pad1","","",93,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",94,null],[12,"aio_lio_opcode","","",94,null],[12,"aio_reqprio","","",94,null],[12,"aio_buf","","",94,null],[12,"aio_nbytes","","",94,null],[12,"aio_sigevent","","",94,null],[12,"aio_offset","","",94,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",95,null],[12,"e_exit","","",95,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",96,null],[12,"tv_usec","","",96,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",97,null],[12,"gl_pathv","","",97,null],[12,"gl_offs","","",97,null],[12,"gl_flags","","",97,null],[3,"msghdr","","",null,null],[12,"msg_name","","",98,null],[12,"msg_namelen","","",98,null],[12,"msg_iov","","",98,null],[12,"msg_iovlen","","",98,null],[12,"msg_control","","",98,null],[12,"msg_controllen","","",98,null],[12,"msg_flags","","",98,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",99,null],[12,"cmsg_level","","",99,null],[12,"cmsg_type","","",99,null],[3,"termios","","",null,null],[12,"c_iflag","","",100,null],[12,"c_oflag","","",100,null],[12,"c_cflag","","",100,null],[12,"c_lflag","","",100,null],[12,"c_line","","",100,null],[12,"c_cc","","",100,null],[12,"c_ispeed","","",100,null],[12,"c_ospeed","","",100,null],[3,"mallinfo","","",null,null],[12,"arena","","",101,null],[12,"ordblks","","",101,null],[12,"smblks","","",101,null],[12,"hblks","","",101,null],[12,"hblkhd","","",101,null],[12,"usmblks","","",101,null],[12,"fsmblks","","",101,null],[12,"uordblks","","",101,null],[12,"fordblks","","",101,null],[12,"keepcost","","",101,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",102,null],[12,"nlmsg_type","","",102,null],[12,"nlmsg_flags","","",102,null],[12,"nlmsg_seq","","",102,null],[12,"nlmsg_pid","","",102,null],[3,"nlmsgerr","","",null,null],[12,"error","","",103,null],[12,"msg","","",103,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",104,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",105,null],[12,"nm_block_nr","","",105,null],[12,"nm_frame_size","","",105,null],[12,"nm_frame_nr","","",105,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",106,null],[12,"nm_len","","",106,null],[12,"nm_group","","",106,null],[12,"nm_pid","","",106,null],[12,"nm_uid","","",106,null],[12,"nm_gid","","",106,null],[3,"nlattr","","",null,null],[12,"nla_len","","",107,null],[12,"nla_type","","",107,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",108,null],[12,"rt_dst","","",108,null],[12,"rt_gateway","","",108,null],[12,"rt_genmask","","",108,null],[12,"rt_flags","","",108,null],[12,"rt_pad2","","",108,null],[12,"rt_pad3","","",108,null],[12,"rt_tos","","",108,null],[12,"rt_class","","",108,null],[12,"rt_pad4","","",108,null],[12,"rt_metric","","",108,null],[12,"rt_dev","","",108,null],[12,"rt_mtu","","",108,null],[12,"rt_window","","",108,null],[12,"rt_irtt","","",108,null],[3,"timex","","",null,null],[12,"modes","","",109,null],[12,"offset","","",109,null],[12,"freq","","",109,null],[12,"maxerror","","",109,null],[12,"esterror","","",109,null],[12,"status","","",109,null],[12,"constant","","",109,null],[12,"precision","","",109,null],[12,"tolerance","","",109,null],[12,"time","","",109,null],[12,"tick","","",109,null],[12,"ppsfreq","","",109,null],[12,"jitter","","",109,null],[12,"shift","","",109,null],[12,"stabil","","",109,null],[12,"jitcnt","","",109,null],[12,"calcnt","","",109,null],[12,"errcnt","","",109,null],[12,"stbcnt","","",109,null],[12,"tai","","",109,null],[12,"__unused1","","",109,null],[12,"__unused2","","",109,null],[12,"__unused3","","",109,null],[12,"__unused4","","",109,null],[12,"__unused5","","",109,null],[12,"__unused6","","",109,null],[12,"__unused7","","",109,null],[12,"__unused8","","",109,null],[12,"__unused9","","",109,null],[12,"__unused10","","",109,null],[12,"__unused11","","",109,null],[3,"ntptimeval","","",null,null],[12,"time","","",110,null],[12,"maxerror","","",110,null],[12,"esterror","","",110,null],[12,"tai","","",110,null],[12,"__glibc_reserved1","","",110,null],[12,"__glibc_reserved2","","",110,null],[12,"__glibc_reserved3","","",110,null],[12,"__glibc_reserved4","","",110,null],[3,"regex_t","","",null,null],[3,"utmpx","","",null,null],[12,"ut_type","","",111,null],[12,"ut_pid","","",111,null],[12,"ut_line","","",111,null],[12,"ut_id","","",111,null],[12,"ut_user","","",111,null],[12,"ut_host","","",111,null],[12,"ut_exit","","",111,null],[12,"ut_session","","",111,null],[12,"ut_tv","","",111,null],[12,"ut_addr_v6","","",111,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",112,null],[12,"loads","","",112,null],[12,"totalram","","",112,null],[12,"freeram","","",112,null],[12,"sharedram","","",112,null],[12,"bufferram","","",112,null],[12,"totalswap","","",112,null],[12,"freeswap","","",112,null],[12,"procs","","",112,null],[12,"pad","","",112,null],[12,"totalhigh","","",112,null],[12,"freehigh","","",112,null],[12,"mem_unit","","",112,null],[12,"_f","","",112,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",113,null],[12,"msg_stime","","",113,null],[12,"msg_rtime","","",113,null],[12,"msg_ctime","","",113,null],[12,"msg_qnum","","",113,null],[12,"msg_qbytes","","",113,null],[12,"msg_lspid","","",113,null],[12,"msg_lrpid","","",113,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",114,null],[12,"sa_mask","","",114,null],[12,"sa_flags","","",114,null],[12,"sa_restorer","","",114,null],[3,"statfs","","",null,null],[12,"f_type","","",115,null],[12,"f_bsize","","",115,null],[12,"f_blocks","","",115,null],[12,"f_bfree","","",115,null],[12,"f_bavail","","",115,null],[12,"f_files","","",115,null],[12,"f_ffree","","",115,null],[12,"f_fsid","","",115,null],[12,"f_namelen","","",115,null],[12,"f_frsize","","",115,null],[3,"flock","","",null,null],[12,"l_type","","",116,null],[12,"l_whence","","",116,null],[12,"l_start","","",116,null],[12,"l_len","","",116,null],[12,"l_pid","","",116,null],[3,"flock64","","",null,null],[12,"l_type","","",117,null],[12,"l_whence","","",117,null],[12,"l_start","","",117,null],[12,"l_len","","",117,null],[12,"l_pid","","",117,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",118,null],[12,"si_errno","","",118,null],[12,"si_code","","",118,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",119,null],[12,"ss_flags","","",119,null],[12,"ss_size","","",119,null],[3,"stat","","",null,null],[12,"st_dev","","",120,null],[12,"st_ino","","",120,null],[12,"st_nlink","","",120,null],[12,"st_mode","","",120,null],[12,"st_uid","","",120,null],[12,"st_gid","","",120,null],[12,"st_rdev","","",120,null],[12,"st_size","","",120,null],[12,"st_blksize","","",120,null],[12,"st_blocks","","",120,null],[12,"st_atime","","",120,null],[12,"st_atime_nsec","","",120,null],[12,"st_mtime","","",120,null],[12,"st_mtime_nsec","","",120,null],[12,"st_ctime","","",120,null],[12,"st_ctime_nsec","","",120,null],[3,"stat64","","",null,null],[12,"st_dev","","",121,null],[12,"st_ino","","",121,null],[12,"st_nlink","","",121,null],[12,"st_mode","","",121,null],[12,"st_uid","","",121,null],[12,"st_gid","","",121,null],[12,"st_rdev","","",121,null],[12,"st_size","","",121,null],[12,"st_blksize","","",121,null],[12,"st_blocks","","",121,null],[12,"st_atime","","",121,null],[12,"st_atime_nsec","","",121,null],[12,"st_mtime","","",121,null],[12,"st_mtime_nsec","","",121,null],[12,"st_ctime","","",121,null],[12,"st_ctime_nsec","","",121,null],[3,"statfs64","","",null,null],[12,"f_type","","",122,null],[12,"f_bsize","","",122,null],[12,"f_blocks","","",122,null],[12,"f_bfree","","",122,null],[12,"f_bavail","","",122,null],[12,"f_files","","",122,null],[12,"f_ffree","","",122,null],[12,"f_fsid","","",122,null],[12,"f_namelen","","",122,null],[12,"f_frsize","","",122,null],[12,"f_flags","","",122,null],[12,"f_spare","","",122,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",123,null],[12,"f_frsize","","",123,null],[12,"f_blocks","","",123,null],[12,"f_bfree","","",123,null],[12,"f_bavail","","",123,null],[12,"f_files","","",123,null],[12,"f_ffree","","",123,null],[12,"f_favail","","",123,null],[12,"f_fsid","","",123,null],[12,"f_flag","","",123,null],[12,"f_namemax","","",123,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",124,null],[12,"exponent","","",124,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",125,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",126,null],[12,"swd","","",126,null],[12,"ftw","","",126,null],[12,"fop","","",126,null],[12,"rip","","",126,null],[12,"rdp","","",126,null],[12,"mxcsr","","",126,null],[12,"mxcr_mask","","",126,null],[12,"_st","","",126,null],[12,"_xmm","","",126,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",127,null],[12,"r14","","",127,null],[12,"r13","","",127,null],[12,"r12","","",127,null],[12,"rbp","","",127,null],[12,"rbx","","",127,null],[12,"r11","","",127,null],[12,"r10","","",127,null],[12,"r9","","",127,null],[12,"r8","","",127,null],[12,"rax","","",127,null],[12,"rcx","","",127,null],[12,"rdx","","",127,null],[12,"rsi","","",127,null],[12,"rdi","","",127,null],[12,"orig_rax","","",127,null],[12,"rip","","",127,null],[12,"cs","","",127,null],[12,"eflags","","",127,null],[12,"rsp","","",127,null],[12,"ss","","",127,null],[12,"fs_base","","",127,null],[12,"gs_base","","",127,null],[12,"ds","","",127,null],[12,"es","","",127,null],[12,"fs","","",127,null],[12,"gs","","",127,null],[3,"user","","",null,null],[12,"regs","","",128,null],[12,"u_fpvalid","","",128,null],[12,"i387","","",128,null],[12,"u_tsize","","",128,null],[12,"u_dsize","","",128,null],[12,"u_ssize","","",128,null],[12,"start_code","","",128,null],[12,"start_stack","","",128,null],[12,"signal","","",128,null],[12,"u_ar0","","",128,null],[12,"u_fpstate","","",128,null],[12,"magic","","",128,null],[12,"u_comm","","",128,null],[12,"u_debugreg","","",128,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",129,null],[12,"fpregs","","",129,null],[3,"ipc_perm","","",null,null],[12,"__key","","",130,null],[12,"uid","","",130,null],[12,"gid","","",130,null],[12,"cuid","","",130,null],[12,"cgid","","",130,null],[12,"mode","","",130,null],[12,"__seq","","",130,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",131,null],[12,"shm_segsz","","",131,null],[12,"shm_atime","","",131,null],[12,"shm_dtime","","",131,null],[12,"shm_ctime","","",131,null],[12,"shm_cpid","","",131,null],[12,"shm_lpid","","",131,null],[12,"shm_nattch","","",131,null],[3,"termios2","","",null,null],[12,"c_iflag","","",132,null],[12,"c_oflag","","",132,null],[12,"c_cflag","","",132,null],[12,"c_lflag","","",132,null],[12,"c_line","","",132,null],[12,"c_cc","","",132,null],[12,"c_ispeed","","",132,null],[12,"c_ospeed","","",132,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",133,null],[12,"imr_address","","",133,null],[12,"imr_ifindex","","",133,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",134,null],[12,"swd","","",134,null],[12,"ftw","","",134,null],[12,"fop","","",134,null],[12,"rip","","",134,null],[12,"rdp","","",134,null],[12,"mxcsr","","",134,null],[12,"mxcr_mask","","",134,null],[12,"st_space","","",134,null],[12,"xmm_space","","",134,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",135,null],[12,"uc_link","","",135,null],[12,"uc_stack","","",135,null],[12,"uc_mcontext","","",135,null],[12,"uc_sigmask","","",135,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",136,null],[12,"f_frsize","","",136,null],[12,"f_blocks","","",136,null],[12,"f_bfree","","",136,null],[12,"f_bavail","","",136,null],[12,"f_files","","",136,null],[12,"f_ffree","","",136,null],[12,"f_favail","","",136,null],[12,"f_fsid","","",136,null],[12,"f_flag","","",136,null],[12,"f_namemax","","",136,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"fanotify_event_metadata","","",null,null],[12,"event_len","","",137,null],[12,"vers","","",137,null],[12,"reserved","","",137,null],[12,"metadata_len","","",137,null],[12,"mask","","",137,null],[12,"fd","","",137,null],[12,"pid","","",137,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",138,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]]]],[5,"W_EXITCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"W_STOPCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[5,"IPOPT_COPIED","","",null,[[]]],[5,"IPOPT_CLASS","","",null,[[]]],[5,"IPOPT_NUMBER","","",null,[[]]],[5,"IPTOS_ECN","","",null,[[]]],[5,"NLA_ALIGN","","",null,[[["c_int",6]],["c_int",6]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ALLOC_SIZE","","",null,[[["c_int",6]],["size_t",6]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t",3]]]],[5,"CPU_SET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_CLR","","",null,[[["cpu_set_t",3]]]],[5,"CPU_ISSET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_COUNT_S","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_COUNT","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t",3]]]],[5,"major","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"minor","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"makedev","","",null,[[["c_uint",6]],["dev_t",6]]],[5,"IPTOS_TOS","","",null,[[]]],[5,"IPTOS_PREC","","",null,[[]]],[5,"RT_TOS","","",null,[[]]],[5,"RT_ADDRCLASS","","",null,[[]]],[5,"RT_LOCALADDR","","",null,[[]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"open_wmemstream","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"timegm","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"clock_getcpuclockid","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"posix_fadvise64","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sendfile64","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fanotify_init","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"memmem","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"copy_file_range","","",null,null],[5,"fanotify_mark","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"si_addr","","",118,[[]]],[11,"si_value","","",118,[[],["sigval",3]]],[11,"si_pid","","",118,[[],["pid_t",6]]],[11,"si_uid","","",118,[[],["uid_t",6]]],[11,"si_status","","",118,[[],["c_int",6]]],[11,"si_utime","","",118,[[],["c_long",6]]],[11,"si_stime","","",118,[[],["c_long",6]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"regoff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_OPTIONS","","",null,null],[17,"IP_ROUTER_ALERT","","",null,null],[17,"IP_RECVOPTS","","",null,null],[17,"IP_RETOPTS","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_PKTOPTIONS","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_RECVTTL","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_MTU","","",null,null],[17,"IP_FREEBIND","","",null,null],[17,"IP_IPSEC_POLICY","","",null,null],[17,"IP_XFRM_POLICY","","",null,null],[17,"IP_PASSSEC","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IP_MINTTL","","",null,null],[17,"IP_NODEFRAG","","",null,null],[17,"IP_CHECKSUM","","",null,null],[17,"IP_BIND_ADDRESS_NO_PORT","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_UNBLOCK_SOURCE","","",null,null],[17,"IP_BLOCK_SOURCE","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"IP_DEFAULT_MULTICAST_TTL","","",null,null],[17,"IP_DEFAULT_MULTICAST_LOOP","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"IP_PMTUDISC_INTERFACE","","",null,null],[17,"IP_PMTUDISC_OMIT","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"MCAST_EXCLUDE","","",null,null],[17,"MCAST_INCLUDE","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_AUTHHDR","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_IPSEC_POLICY","","",null,null],[17,"IPV6_XFRM_POLICY","","",null,null],[17,"IPV6_HDRINCL","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVHOPLIMIT","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVHOPOPTS","","",null,null],[17,"IPV6_HOPOPTS","","",null,null],[17,"IPV6_RTHDRDSTOPTS","","",null,null],[17,"IPV6_RECVRTHDR","","",null,null],[17,"IPV6_RTHDR","","",null,null],[17,"IPV6_RECVDSTOPTS","","",null,null],[17,"IPV6_DSTOPTS","","",null,null],[17,"IPV6_RECVPATHMTU","","",null,null],[17,"IPV6_PATHMTU","","",null,null],[17,"IPV6_DONTFRAG","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_AUTOFLOWLABEL","","",null,null],[17,"IPV6_ADDR_PREFERENCES","","",null,null],[17,"IPV6_MINHOPCOUNT","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_IF","","",null,null],[17,"IPV6_PREFER_SRC_TMP","","",null,null],[17,"IPV6_PREFER_SRC_PUBLIC","","",null,null],[17,"IPV6_PREFER_SRC_PUBTMP_DEFAULT","","",null,null],[17,"IPV6_PREFER_SRC_COA","","",null,null],[17,"IPV6_PREFER_SRC_HOME","","",null,null],[17,"IPV6_PREFER_SRC_CGA","","",null,null],[17,"IPV6_PREFER_SRC_NONCGA","","",null,null],[17,"IPV6_PMTUDISC_DONT","","",null,null],[17,"IPV6_PMTUDISC_WANT","","",null,null],[17,"IPV6_PMTUDISC_DO","","",null,null],[17,"IPV6_PMTUDISC_PROBE","","",null,null],[17,"IPV6_PMTUDISC_INTERFACE","","",null,null],[17,"IPV6_PMTUDISC_OMIT","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"UIO_MAXIOV","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"ADDR_NO_RANDOMIZE","","",null,null],[17,"MMAP_PAGE_ZERO","","",null,null],[17,"ADDR_COMPAT_LAYOUT","","",null,null],[17,"READ_IMPLIES_EXEC","","",null,null],[17,"ADDR_LIMIT_32BIT","","",null,null],[17,"SHORT_INODE","","",null,null],[17,"WHOLE_SECONDS","","",null,null],[17,"STICKY_TIMEOUTS","","",null,null],[17,"ADDR_LIMIT_3GB","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"CLD_EXITED","","",null,null],[17,"CLD_KILLED","","",null,null],[17,"CLD_DUMPED","","",null,null],[17,"CLD_TRAPPED","","",null,null],[17,"CLD_STOPPED","","",null,null],[17,"CLD_CONTINUED","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"P_PIDFD","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_ULP","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_MPTCP","","Multipath TCP",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_RECVFRAGSIZE","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_MULTICAST_ALL","","",null,null],[17,"IPV6_ROUTER_ALERT_ISOLATE","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_RECVFRAGSIZE","","",null,null],[17,"IPV6_FREEBIND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IPV6_RTHDR_LOOSE","","",null,null],[17,"IPV6_RTHDR_STRICT","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"PTRACE_EVENT_STOP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"UDP_CORK","","",null,null],[17,"UDP_ENCAP","","",null,null],[17,"UDP_NO_CHECK6_TX","","",null,null],[17,"UDP_NO_CHECK6_RX","","",null,null],[17,"UDP_SEGMENT","","",null,null],[17,"UDP_GRO","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_LOCAL","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FAN_ACCESS","","",null,null],[17,"FAN_MODIFY","","",null,null],[17,"FAN_CLOSE_WRITE","","",null,null],[17,"FAN_CLOSE_NOWRITE","","",null,null],[17,"FAN_OPEN","","",null,null],[17,"FAN_Q_OVERFLOW","","",null,null],[17,"FAN_OPEN_PERM","","",null,null],[17,"FAN_ACCESS_PERM","","",null,null],[17,"FAN_ONDIR","","",null,null],[17,"FAN_EVENT_ON_CHILD","","",null,null],[17,"FAN_CLOSE","","",null,null],[17,"FAN_CLOEXEC","","",null,null],[17,"FAN_NONBLOCK","","",null,null],[17,"FAN_CLASS_NOTIF","","",null,null],[17,"FAN_CLASS_CONTENT","","",null,null],[17,"FAN_CLASS_PRE_CONTENT","","",null,null],[17,"FAN_UNLIMITED_QUEUE","","",null,null],[17,"FAN_UNLIMITED_MARKS","","",null,null],[17,"FAN_MARK_ADD","","",null,null],[17,"FAN_MARK_REMOVE","","",null,null],[17,"FAN_MARK_DONT_FOLLOW","","",null,null],[17,"FAN_MARK_ONLYDIR","","",null,null],[17,"FAN_MARK_INODE","","",null,null],[17,"FAN_MARK_MOUNT","","",null,null],[17,"FAN_MARK_FILESYSTEM","","",null,null],[17,"FAN_MARK_IGNORED_MASK","","",null,null],[17,"FAN_MARK_IGNORED_SURV_MODIFY","","",null,null],[17,"FAN_MARK_FLUSH","","",null,null],[17,"FANOTIFY_METADATA_VERSION","","",null,null],[17,"FAN_ALLOW","","",null,null],[17,"FAN_DENY","","",null,null],[17,"FAN_NOFD","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_ENOSYS","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_SHIFT","","",null,null],[17,"HUGETLB_FLAG_ENCODE_MASK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_64KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_8MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_32MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_256MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16GB","","",null,null],[17,"MAP_HUGE_SHIFT","","",null,null],[17,"MAP_HUGE_MASK","","",null,null],[17,"MAP_HUGE_64KB","","",null,null],[17,"MAP_HUGE_512KB","","",null,null],[17,"MAP_HUGE_1MB","","",null,null],[17,"MAP_HUGE_2MB","","",null,null],[17,"MAP_HUGE_8MB","","",null,null],[17,"MAP_HUGE_16MB","","",null,null],[17,"MAP_HUGE_32MB","","",null,null],[17,"MAP_HUGE_256MB","","",null,null],[17,"MAP_HUGE_512MB","","",null,null],[17,"MAP_HUGE_1GB","","",null,null],[17,"MAP_HUGE_2GB","","",null,null],[17,"MAP_HUGE_16GB","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"AFS_SUPER_MAGIC","","",null,null],[17,"AUTOFS_SUPER_MAGIC","","",null,null],[17,"BINDERFS_SUPER_MAGIC","","",null,null],[17,"BPF_FS_MAGIC","","",null,null],[17,"BTRFS_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"DEBUGFS_MAGIC","","",null,null],[17,"DEVPTS_SUPER_MAGIC","","",null,null],[17,"ECRYPTFS_SUPER_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"F2FS_SUPER_MAGIC","","",null,null],[17,"FUTEXFS_SUPER_MAGIC","","",null,null],[17,"HOSTFS_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX3_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"NILFS_SUPER_MAGIC","","",null,null],[17,"OCFS2_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"OVERLAYFS_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"QNX6_SUPER_MAGIC","","",null,null],[17,"RDTGROUP_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"SYSFS_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"TRACEFS_MAGIC","","",null,null],[17,"UDF_SUPER_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"XENFS_SUPER_MAGIC","","",null,null],[17,"XFS_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"UNAME26","","",null,null],[17,"FDPIC_FUNCPTRS","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_EEND","","",null,null],[17,"REG_ESIZE","","",null,null],[17,"REG_ERPAREN","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_CBPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_EBPF","","",null,null],[17,"SO_CNX_ADVICE","","",null,null],[17,"SCM_TIMESTAMPING_OPT_STATS","","",null,null],[17,"SO_MEMINFO","","",null,null],[17,"SO_INCOMING_NAPI_ID","","",null,null],[17,"SO_COOKIE","","",null,null],[17,"SCM_TIMESTAMPING_PKTINFO","","",null,null],[17,"SO_PEERGROUPS","","",null,null],[17,"SO_ZEROCOPY","","",null,null],[17,"SO_TXTIME","","",null,null],[17,"SCM_TXTIME","","",null,null],[17,"SO_BINDTOIFINDEX","","",null,null],[17,"SO_TIMESTAMP_NEW","","",null,null],[17,"SO_TIMESTAMPNS_NEW","","",null,null],[17,"SO_TIMESTAMPING_NEW","","",null,null],[17,"SO_RCVTIMEO_NEW","","",null,null],[17,"SO_SNDTIMEO_NEW","","",null,null],[17,"SO_DETACH_REUSEPORT_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"PTRACE_SYSEMU","","",null,null],[17,"PTRACE_SYSEMU_SINGLESTEP","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[17,"SYS_pidfd_open","","",null,null],[17,"SYS_clone3","","",null,null],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"fmt","","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",157,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",158,[[],["file",4]]],[11,"clone","","",159,[[],["fpos_t",4]]],[11,"clone","","",160,[[],["timezone",4]]],[11,"clone","","",17,[[],["in_addr",3]]],[11,"clone","","",18,[[],["ip_mreq",3]]],[11,"clone","","",19,[[],["ip_mreq_source",3]]],[11,"clone","","",20,[[],["sockaddr",3]]],[11,"clone","","",21,[[],["sockaddr_in",3]]],[11,"clone","","",22,[[],["sockaddr_in6",3]]],[11,"clone","","",23,[[],["addrinfo",3]]],[11,"clone","","",24,[[],["sockaddr_ll",3]]],[11,"clone","","",140,[[],["fd_set",3]]],[11,"clone","","",25,[[],["tm",3]]],[11,"clone","","",26,[[],["sched_param",3]]],[11,"clone","","",27,[[],["dl_info",3]]],[11,"clone","","",28,[[],["lconv",3]]],[11,"clone","","",29,[[],["in_pktinfo",3]]],[11,"clone","","",30,[[],["ifaddrs",3]]],[11,"clone","","",141,[[],["in6_rtmsg",3]]],[11,"clone","","",31,[[],["arpreq",3]]],[11,"clone","","",32,[[],["arpreq_old",3]]],[11,"clone","","",33,[[],["arphdr",3]]],[11,"clone","","",34,[[],["mmsghdr",3]]],[11,"clone","","",35,[[],["epoll_event",3]]],[11,"clone","","",36,[[],["sockaddr_un",3]]],[11,"clone","","",37,[[],["sockaddr_storage",3]]],[11,"clone","","",38,[[],["utsname",3]]],[11,"clone","","",39,[[],["sigevent",3]]],[11,"clone","","",161,[[],["fpos64_t",4]]],[11,"clone","","",40,[[],["rlimit64",3]]],[11,"clone","","",41,[[],["glob_t",3]]],[11,"clone","","",42,[[],["passwd",3]]],[11,"clone","","",43,[[],["spwd",3]]],[11,"clone","","",44,[[],["dqblk",3]]],[11,"clone","","",45,[[],["signalfd_siginfo",3]]],[11,"clone","","",46,[[],["itimerspec",3]]],[11,"clone","","",142,[[],["fsid_t",3]]],[11,"clone","","",47,[[],["packet_mreq",3]]],[11,"clone","","",143,[[],["cpu_set_t",3]]],[11,"clone","","",48,[[],["if_nameindex",3]]],[11,"clone","","",49,[[],["msginfo",3]]],[11,"clone","","",50,[[],["sembuf",3]]],[11,"clone","","",51,[[],["input_event",3]]],[11,"clone","","",52,[[],["input_id",3]]],[11,"clone","","",53,[[],["input_absinfo",3]]],[11,"clone","","",54,[[],["input_keymap_entry",3]]],[11,"clone","","",55,[[],["input_mask",3]]],[11,"clone","","",56,[[],["ff_replay",3]]],[11,"clone","","",57,[[],["ff_trigger",3]]],[11,"clone","","",58,[[],["ff_envelope",3]]],[11,"clone","","",59,[[],["ff_constant_effect",3]]],[11,"clone","","",60,[[],["ff_ramp_effect",3]]],[11,"clone","","",61,[[],["ff_condition_effect",3]]],[11,"clone","","",62,[[],["ff_periodic_effect",3]]],[11,"clone","","",63,[[],["ff_rumble_effect",3]]],[11,"clone","","",64,[[],["ff_effect",3]]],[11,"clone","","",65,[[],["dl_phdr_info",3]]],[11,"clone","","",66,[[],["elf32_ehdr",3]]],[11,"clone","","",67,[[],["elf64_ehdr",3]]],[11,"clone","","",68,[[],["elf32_sym",3]]],[11,"clone","","",69,[[],["elf64_sym",3]]],[11,"clone","","",70,[[],["elf32_phdr",3]]],[11,"clone","","",71,[[],["elf64_phdr",3]]],[11,"clone","","",72,[[],["elf32_shdr",3]]],[11,"clone","","",73,[[],["elf64_shdr",3]]],[11,"clone","","",74,[[],["elf32_chdr",3]]],[11,"clone","","",75,[[],["elf64_chdr",3]]],[11,"clone","","",76,[[],["ucred",3]]],[11,"clone","","",77,[[],["mntent",3]]],[11,"clone","","",144,[[],["posix_spawn_file_actions_t",3]]],[11,"clone","","",145,[[],["posix_spawnattr_t",3]]],[11,"clone","","",78,[[],["genlmsghdr",3]]],[11,"clone","","",79,[[],["in6_pktinfo",3]]],[11,"clone","","",80,[[],["arpd_request",3]]],[11,"clone","","",81,[[],["inotify_event",3]]],[11,"clone","","",82,[[],["fanotify_response",3]]],[11,"clone","","",83,[[],["sockaddr_vm",3]]],[11,"clone","","",84,[[],["regmatch_t",3]]],[11,"clone","","",85,[[],["sock_extended_err",3]]],[11,"clone","","",86,[[],["sockaddr_nl",3]]],[11,"clone","","",87,[[],["dirent",3]]],[11,"clone","","",88,[[],["dirent64",3]]],[11,"clone","","",89,[[],["sockaddr_alg",3]]],[11,"clone","","",90,[[],["af_alg_iv",3]]],[11,"clone","","",91,[[],["mq_attr",3]]],[11,"clone","","",92,[[],["statx",3]]],[11,"clone","","",93,[[],["statx_timestamp",3]]],[11,"clone","","",94,[[],["aiocb",3]]],[11,"clone","","",95,[[],["__exit_status",3]]],[11,"clone","","",96,[[],["__timeval",3]]],[11,"clone","","",97,[[],["glob64_t",3]]],[11,"clone","","",98,[[],["msghdr",3]]],[11,"clone","","",99,[[],["cmsghdr",3]]],[11,"clone","","",100,[[],["termios",3]]],[11,"clone","","",101,[[],["mallinfo",3]]],[11,"clone","","",102,[[],["nlmsghdr",3]]],[11,"clone","","",103,[[],["nlmsgerr",3]]],[11,"clone","","",104,[[],["nl_pktinfo",3]]],[11,"clone","","",105,[[],["nl_mmap_req",3]]],[11,"clone","","",106,[[],["nl_mmap_hdr",3]]],[11,"clone","","",107,[[],["nlattr",3]]],[11,"clone","","",108,[[],["rtentry",3]]],[11,"clone","","",109,[[],["timex",3]]],[11,"clone","","",110,[[],["ntptimeval",3]]],[11,"clone","","",146,[[],["regex_t",3]]],[11,"clone","","",111,[[],["utmpx",3]]],[11,"clone","","",147,[[],["sigset_t",3]]],[11,"clone","","",112,[[],["sysinfo",3]]],[11,"clone","","",113,[[],["msqid_ds",3]]],[11,"clone","","",114,[[],["sigaction",3]]],[11,"clone","","",115,[[],["statfs",3]]],[11,"clone","","",116,[[],["flock",3]]],[11,"clone","","",117,[[],["flock64",3]]],[11,"clone","","",118,[[],["siginfo_t",3]]],[11,"clone","","",119,[[],["stack_t",3]]],[11,"clone","","",120,[[],["stat",3]]],[11,"clone","","",121,[[],["stat64",3]]],[11,"clone","","",122,[[],["statfs64",3]]],[11,"clone","","",123,[[],["statvfs64",3]]],[11,"clone","","",148,[[],["pthread_attr_t",3]]],[11,"clone","","",124,[[],["_libc_fpxreg",3]]],[11,"clone","","",125,[[],["_libc_xmmreg",3]]],[11,"clone","","",126,[[],["_libc_fpstate",3]]],[11,"clone","","",127,[[],["user_regs_struct",3]]],[11,"clone","","",128,[[],["user",3]]],[11,"clone","","",129,[[],["mcontext_t",3]]],[11,"clone","","",130,[[],["ipc_perm",3]]],[11,"clone","","",131,[[],["shmid_ds",3]]],[11,"clone","","",132,[[],["termios2",3]]],[11,"clone","","",133,[[],["ip_mreqn",3]]],[11,"clone","","",134,[[],["user_fpregs_struct",3]]],[11,"clone","","",135,[[],["ucontext_t",3]]],[11,"clone","","",136,[[],["statvfs",3]]],[11,"clone","","",149,[[],["max_align_t",3]]],[11,"clone","","",150,[[],["sem_t",3]]],[11,"clone","","",151,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",152,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",153,[[],["pthread_condattr_t",3]]],[11,"clone","","",137,[[],["fanotify_event_metadata",3]]],[11,"clone","","",154,[[],["pthread_cond_t",3]]],[11,"clone","","",155,[[],["pthread_mutex_t",3]]],[11,"clone","","",156,[[],["pthread_rwlock_t",3]]],[11,"clone","","",138,[[],["in6_addr",3]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"regex_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]},\
"log":{"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \\\"payload\\\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has…",null,null],[3,"ParseLevelError","","The type returned by `from_str` when the string doesn\'t…",null,null],[4,"Level","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \\\"error\\\" level.",0,null],[13,"Warn","","The \\\"warn\\\" level.",0,null],[13,"Info","","The \\\"info\\\" level.",0,null],[13,"Debug","","The \\\"debug\\\" level.",0,null],[13,"Trace","","The \\\"trace\\\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_logger","","Sets the global logger to a `&\'static Log`.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger_racy","","A thread-unsafe version of `set_logger`.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["metadata",3]]]],[10,"log","","Logs the `Record`.",2,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",2,[[]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level",4]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[],["levelfilter",4]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter",4]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[],[["option",4],["level",4]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder",3]]],[11,"args","","The message body.",3,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",3,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",3,[[],["level",4]]],[11,"target","","The name of the target of the directive.",3,[[]]],[11,"module_path","","The module path of the message.",3,[[],["option",4]]],[11,"module_path_static","","The module path of the message, if it is a `\'static` string.",3,[[],["option",4]]],[11,"file","","The source file containing the message.",3,[[],["option",4]]],[11,"file_static","","The module path of the message, if it is a `\'static` string.",3,[[],["option",4]]],[11,"line","","The line containing the message.",3,[[],["option",4]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder",3]]],[11,"args","","Set `args`.",4,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set `Metadata::level`.",4,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set `Metadata::target`",4,[[],["recordbuilder",3]]],[11,"module_path","","Set `module_path`",4,[[["option",4]],["recordbuilder",3]]],[11,"module_path_static","","Set `module_path` to a `\'static` string",4,[[["option",4]],["recordbuilder",3]]],[11,"file","","Set `file`",4,[[["option",4]],["recordbuilder",3]]],[11,"file_static","","Set `file` to a `\'static` string.",4,[[["option",4]],["recordbuilder",3]]],[11,"line","","Set `line`",4,[[["option",4]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a `Record`",4,[[],["record",3]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",5,[[],["level",4]]],[11,"target","","The name of the target of the directive.",5,[[]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder",3]]],[11,"level","","Setter for `level`.",6,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for `target`.",6,[[],["metadatabuilder",3]]],[11,"build","","Returns a `Metadata` object.",6,[[],["metadata",3]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["level",4]]]],[11,"eq","","",0,[[["levelfilter",4]]]],[11,"eq","","",1,[[["levelfilter",4]]]],[11,"eq","","",1,[[["level",4]]]],[11,"eq","","",5,[[["metadata",3]]]],[11,"ne","","",5,[[["metadata",3]]]],[11,"eq","","",6,[[["metadatabuilder",3]]]],[11,"ne","","",6,[[["metadatabuilder",3]]]],[11,"eq","","",8,[[["parselevelerror",3]]]],[11,"ne","","",8,[[["parselevelerror",3]]]],[11,"cmp","","",0,[[["level",4]],["ordering",4]]],[11,"cmp","","",1,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",5,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",6,[[["metadatabuilder",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["level",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["level",4]]]],[11,"le","","",0,[[["level",4]]]],[11,"gt","","",0,[[["level",4]]]],[11,"ge","","",0,[[["level",4]]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["levelfilter",4]]]],[11,"le","","",0,[[["levelfilter",4]]]],[11,"gt","","",0,[[["levelfilter",4]]]],[11,"ge","","",0,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["levelfilter",4]]]],[11,"le","","",1,[[["levelfilter",4]]]],[11,"gt","","",1,[[["levelfilter",4]]]],[11,"ge","","",1,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["level",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["level",4]]]],[11,"le","","",1,[[["level",4]]]],[11,"gt","","",1,[[["level",4]]]],[11,"ge","","",1,[[["level",4]]]],[11,"partial_cmp","","",5,[[["metadata",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["metadata",3]]]],[11,"le","","",5,[[["metadata",3]]]],[11,"gt","","",5,[[["metadata",3]]]],[11,"ge","","",5,[[["metadata",3]]]],[11,"partial_cmp","","",6,[[["metadatabuilder",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["metadatabuilder",3]]]],[11,"le","","",6,[[["metadatabuilder",3]]]],[11,"gt","","",6,[[["metadatabuilder",3]]]],[11,"ge","","",6,[[["metadatabuilder",3]]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"from_str","","",0,[[],[["level",4],["result",4]]]],[11,"from_str","","",1,[[],[["levelfilter",4],["result",4]]]],[11,"clone","","",0,[[],["level",4]]],[11,"clone","","",1,[[],["levelfilter",4]]],[11,"clone","","",3,[[],["record",3]]],[11,"clone","","",5,[[],["metadata",3]]]],"p":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"memchr":{"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",null,null],[3,"Memchr2","","An iterator for `memchr2`.",null,null],[3,"Memchr3","","An iterator for `memchr3`.",null,null],[5,"memchr_iter","","An iterator over all occurrences of the needle in a…",null,[[],["memchr",3]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[],["memchr2",3]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[],["memchr3",3]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a…",null,[[],[["rev",3],["memchr",3]]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[],[["rev",3],["memchr2",3]]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[],[["memchr3",3],["rev",3]]]],[5,"memchr","","Search for the first occurrence of a byte in a slice.",null,[[],["option",4]]],[5,"memchr2","","Like `memchr`, but searches for either of two bytes…",null,[[],["option",4]]],[5,"memchr3","","Like `memchr`, but searches for any of three bytes instead…",null,[[],["option",4]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[],["option",4]]],[5,"memrchr2","","Like `memrchr`, but searches for either of two bytes…",null,[[],["option",4]]],[5,"memrchr3","","Like `memrchr`, but searches for any of three bytes…",null,[[],["option",4]]],[11,"new","","Creates a new iterator that yields all positions of needle…",0,[[],["memchr",3]]],[11,"new","","Creates a new iterator that yields all positions of needle…",1,[[],["memchr2",3]]],[11,"new","","Create a new `Memchr3` that\'s initialized to zero with a…",2,[[],["memchr3",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"raw_field","memoffset","Computes a const raw pointer to the given field of the…",null,null],[14,"offset_of","","Calculates the offset of the specified field from the…",null,null],[14,"span_of","","Produces a range instance representing the sub-slice…",null,null]],"p":[]},\
"num_cpus":{"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,[[]]],[5,"get_physical","","Returns the number of physical cores of the current system.",null,[[]]]],"p":[]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord",8]],["partialord",8]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast",8]],[["option",4],["numcast",8]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",3,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive",8]],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[]]],[10,"neg_infinity","","Returns negative infinity.",7,[[]]],[10,"nan","","Returns NaN.",7,[[]]],[10,"neg_zero","","Returns `-0.0`.",7,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[]]],[11,"trunc","","Return the integer part of a number.",7,[[]]],[11,"fract","","Returns the fractional part of a number.",7,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[]]],[11,"min","","Returns the minimum of the two numbers.",7,[[]]],[11,"max","","Returns the maximum of the two numbers.",7,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[]]],[11,"powi","","Raise a number to an integer power.",7,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",8,[[]]],[10,"infinity","","Returns the infinite value.",8,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[]]],[10,"neg_zero","","Returns `-0.0`.",8,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[]]],[10,"trunc","","Return the integer part of a number.",8,[[]]],[10,"fract","","Returns the fractional part of a number.",8,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[]]],[10,"powi","","Raise a number to an integer power.",8,[[]]],[10,"powf","","Raise a number to a floating point power.",8,[[]]],[10,"sqrt","","Take the square root of a number.",8,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[]]],[10,"exp2","","Returns `2^(self)`.",8,[[]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[]]],[11,"to_degrees","","Converts radians to degrees.",8,[[]]],[11,"to_radians","","Converts degrees to radians.",8,[[]]],[10,"max","","Returns the maximum of the two numbers.",8,[[]]],[10,"min","","Returns the minimum of the two numbers.",8,[[]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[]]],[10,"cbrt","","Take the cubic root of a number.",8,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[]]],[10,"sinh","","Hyperbolic sine function.",8,[[]]],[10,"cosh","","Hyperbolic cosine function.",8,[[]]],[10,"tanh","","Hyperbolic tangent function.",8,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",9,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",9,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[]]],[11,"TAU","","Return the full circle constant `τ`.",9,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",9,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",9,[[]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero",8]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one",8]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",10,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",10,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",12,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",12,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",12,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",12,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",18,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",19,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",20,[[],["option",4]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",21,null],[10,"inv","","Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",22,null],[10,"mul_add","","Performs the fused multiply-add operation.",22,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[]]],[0,"overflowing","num_traits::ops","",null,null],[8,"OverflowingAdd","num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean indicating…",24,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean…",25,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean…",26,[[]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",27,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",27,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",28,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",29,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",30,[[]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",31,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",32,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",33,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",34,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",35,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",36,[[]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["clone",8],["mul",8],["one",8]],[["clone",8],["one",8],["mul",8]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["clone",8],["one",8],["checkedmul",8]],[["clone",8],["checkedmul",8],["one",8],["option",4]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",37,null],[10,"pow","","Returns `self` to the power `rhs`.",37,[[]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",38,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",38,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",38,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",38,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",38,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",38,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",38,[[]]],[10,"trunc","","Return the integer part of a number.",38,[[]]],[10,"fract","","Returns the fractional part of a number.",38,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",38,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",38,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",38,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",38,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",38,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",38,[[]]],[10,"powi","","Raise a number to an integer power.",38,[[]]],[10,"powf","","Raise a number to a real number power.",38,[[]]],[10,"sqrt","","Take the square root of a number.",38,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",38,[[]]],[10,"exp2","","Returns `2^(self)`.",38,[[]]],[10,"ln","","Returns the natural logarithm of the number.",38,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",38,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",38,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",38,[[]]],[10,"to_degrees","","Converts radians to degrees.",38,[[]]],[10,"to_radians","","Converts degrees to radians.",38,[[]]],[10,"max","","Returns the maximum of the two numbers.",38,[[]]],[10,"min","","Returns the minimum of the two numbers.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"cbrt","","Take the cubic root of a number.",38,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",38,[[]]],[10,"sin","","Computes the sine of a number (in radians).",38,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",38,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",38,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",38,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",38,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",38,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",38,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",38,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",38,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",38,[[]]],[10,"sinh","","Hyperbolic sine function.",38,[[]]],[10,"cosh","","Hyperbolic cosine function.",38,[[]]],[10,"tanh","","Hyperbolic tangent function.",38,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",38,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",38,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",38,[[]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed",8]],["signed",8]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed",8]],["signed",8]]],[5,"signum","","Returns the sign of the number.",null,[[["signed",8]],["signed",8]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",39,[[]]],[10,"abs_sub","","The positive difference of two numbers.",39,[[]]],[10,"signum","","Returns the sign of the number.",39,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",39,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",39,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",40,null],[10,"from_str_radix","","Convert from a string and radix (typically `2..=36`).",40,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]},\
"oorandom":{"doc":"A tiny, robust PRNG implementation.","i":[[3,"Rand32","oorandom","A PRNG producing a 32-bit output.",null,null],[3,"Rand64","","A PRNG producing a 64-bit output.",null,null],[18,"DEFAULT_INC","","The default value for `increment`. This is basically…",0,null],[11,"new","","Creates a new PRNG with the given seed and a default…",0,[[]]],[11,"new_inc","","Creates a new PRNG. The two inputs, `seed` and…",0,[[]]],[11,"state","","Returns the internal state of the PRNG. This allows you to…",0,[[]]],[11,"from_state","","Creates a new PRNG from a saved state from…",0,[[]]],[11,"rand_u32","","Produces a random `u32` in the range `[0, u32::MAX]`.",0,[[]]],[11,"rand_i32","","Produces a random `i32` in the range `[i32::MIN, i32::MAX]`.",0,[[]]],[11,"rand_float","","Produces a random `f32` in the range `[0.0, 1.0)`.",0,[[]]],[11,"rand_range","","Produces a random within the given bounds. Like any…",0,[[["range",3]]]],[18,"DEFAULT_INC","","The default value for `increment`.",1,null],[11,"new","","Creates a new PRNG with the given seed and a default…",1,[[]]],[11,"state","","Returns the internal state of the PRNG. This allows you to…",1,[[]]],[11,"from_state","","Creates a new PRNG from a saved state from…",1,[[]]],[11,"rand_u64","","Produces a random `u64` in the range`[0, u64::MAX]`.",1,[[]]],[11,"rand_i64","","Produces a random `i64` in the range `[i64::MIN, i64::MAX]`.",1,[[]]],[11,"rand_float","","Produces a random `f64` in the range `[0.0, 1.0)`.",1,[[]]],[11,"rand_range","","Produces a random within the given bounds. Like any…",1,[[["range",3]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["rand32",3]]]],[11,"ne","","",0,[[["rand32",3]]]],[11,"eq","","",1,[[["rand64",3]]]],[11,"ne","","",1,[[["rand64",3]]]],[11,"clone","","",0,[[],["rand32",3]]],[11,"clone","","",1,[[],["rand64",3]]]],"p":[[3,"Rand32"],[3,"Rand64"]]},\
"paste":{"doc":"github crates-io docs-rs","i":[[14,"paste","paste","",null,null]],"p":[]},\
"plotters":{"doc":"Plotters - A Rust drawing library focus on data plotting…","i":[[0,"chart","plotters","The high-level plotting abstractions.",null,null],[3,"ChartBuilder","plotters::chart","The helper object to create a chart context, which is used…",null,null],[3,"ChartContext","","The context of the chart. This is the core object of…",null,null],[3,"ChartState","","A chart context state - This is the data that is needed to…",null,null],[3,"SeriesAnno","","The annotations (such as the label of the series, the…",null,null],[3,"DualCoordChartContext","","The chart context that has two coordinate system attached",null,null],[3,"DualCoordChartState","","The chart state for a dual coord chart, see the detailed…",null,null],[3,"MeshStyle","","The struct that is used for tracking the configuration of…",null,null],[3,"SeriesLabelStyle","","The struct to specify the series label of a target chart…",null,null],[4,"LabelAreaPosition","","The enum used to specify the position of label area. This…",null,null],[13,"Top","","",0,null],[13,"Bottom","","",0,null],[13,"Left","","",0,null],[13,"Right","","",0,null],[4,"SeriesLabelPosition","","Describes where we want to put the series label",null,null],[13,"UpperLeft","","",1,null],[13,"MiddleLeft","","",1,null],[13,"LowerLeft","","",1,null],[13,"UpperMiddle","","",1,null],[13,"MiddleMiddle","","",1,null],[13,"LowerMiddle","","",1,null],[13,"UpperRight","","",1,null],[13,"MiddleRight","","",1,null],[13,"LowerRight","","",1,null],[13,"Coordinate","","Force the series label drawn at the specific location",1,null],[11,"on","","Create a chart builder on the given drawing area",2,[[["drawingarea",3]]]],[11,"margin","","Set the margin size of the chart (applied for top, bottom,…",2,[[["sizedesc",8]]]],[11,"margin_top","","Set the top margin of current chart",2,[[["sizedesc",8]]]],[11,"margin_bottom","","Set the bottom margin of current chart",2,[[["sizedesc",8]]]],[11,"margin_left","","Set the left margin of current chart",2,[[["sizedesc",8]]]],[11,"margin_right","","Set the right margin of current chart",2,[[["sizedesc",8]]]],[11,"set_all_label_area_size","","Set all the label area size with the same value",2,[[["sizedesc",8]]]],[11,"set_left_and_bottom_label_area_size","","Set the most commonly used label area size to the same value",2,[[["sizedesc",8]]]],[11,"x_label_area_size","","Set the size of X label area",2,[[["sizedesc",8]]]],[11,"y_label_area_size","","Set the size of the Y label area",2,[[["sizedesc",8]]]],[11,"top_x_label_area_size","","Set the size of X label area on the top of the chart",2,[[["sizedesc",8]]]],[11,"right_y_label_area_size","","Set the size of the Y label area on the right side",2,[[["sizedesc",8]]]],[11,"set_label_area_size","","Set a label area size",2,[[["labelareaposition",4],["sizedesc",8]]]],[11,"caption","","Set the caption of the chart",2,[[["intotextstyle",8],["asref",8]]]],[11,"build_ranged","","Build the chart with a 2D Cartesian coordinate system. The…",2,[[["asrangedcoord",8]],[["drawingareaerrorkind",4],["result",4],["chartcontext",3]]]],[11,"label","","Set the series label",3,[[["into",8],["string",3]]]],[11,"legend","","Set the legend element creator function",3,[[["fn",8]]]],[11,"into_chart_state","","Convert a chart context into a chart state, by doing so,…",4,[[],["chartstate",3]]],[11,"into_shared_chart_state","","Convert the chart context into a sharable chart state.…",4,[[],[["chartstate",3],["arc",3]]]],[11,"to_chart_state","","Make the chart context, do not consume the chart context…",4,[[],["chartstate",3]]],[11,"restore","","Restore the chart context on the given drawing area",5,[[["drawingarea",3]],[["chartcontext",3],["drawingbackend",8]]]],[11,"configure_mesh","","Initialize a mesh configuration object and mesh drawing…",4,[[],["meshstyle",3]]],[11,"configure_series_labels","","Configure the styles for drawing series labels in the chart",4,[[],["serieslabelstyle",3]]],[11,"plotting_area","","Get a reference of underlying plotting area",4,[[],["drawingarea",3]]],[11,"as_coord_spec","","",4,[[]]],[11,"into_coord_trans","","Convert the chart context into an closure that can be used…",4,[[]]],[11,"draw_series","","Draw a data series. A data series in Plotters is…",4,[[],[["drawingareaerrorkind",4],["result",4],["seriesanno",3]]]],[11,"x_range","","Get the range of X axis",4,[[],["range",3]]],[11,"y_range","","Get range of the Y axis",4,[[],["range",3]]],[11,"backend_coord","","Maps the coordinate to the backend coordinate. This is…",4,[[],["backendcoord",6]]],[11,"draw_series","","Draw a data series. A data series in Plotters is…",4,[[],[["drawingareaerrorkind",4],["result",4],["seriesanno",3]]]],[11,"set_secondary_coord","","Convert this chart context into a dual axis chart context",4,[[["asrangedcoord",8]],[["dualcoordchartcontext",3],["rangedcoord",3],["rangedcoord",3]]]],[11,"into_chart_state","","Convert the chart context into a chart state",6,[[],["dualcoordchartstate",3]]],[11,"into_shared_chart_state","","Convert the chart context into a sharable chart state",6,[[],[["dualcoordchartstate",3],["arc",3],["arc",3]]]],[11,"to_chart_state","","Copy the coordinate specs and make the chart state",6,[[],["dualcoordchartstate",3]]],[11,"restore","","Restore the chart state on the given drawing area",7,[[["drawingarea",3]],[["drawingbackend",8],["dualcoordchartcontext",3]]]],[11,"secondary_plotting_area","","Get a reference to the drawing area that uses the…",6,[[],["drawingarea",3]]],[11,"borrow_secondary","","Borrow a mutable reference to the chart context that uses…",6,[[],["chartcontext",3]]],[11,"into_secondary_coord_trans","","Convert the chart context into the secondary coordinate…",6,[[]]],[11,"into_coord_trans_pair","","Convert the chart context into a pair of closures that…",6,[[]]],[11,"configure_secondary_axes","","Start configure the style for the secondary axes",6,[[],["secondarymeshstyle",3]]],[11,"draw_secondary_series","","Draw a series use the secondary coordinate system",6,[[],[["drawingareaerrorkind",4],["result",4],["seriesanno",3]]]],[11,"set_all_tick_mark_size","","Set all the tick mark to the same size `value`: The new size",8,[[["sizedesc",8]]]],[11,"set_tick_mark_size","","Set the tick mark size on the axes. When this is set to…",8,[[["labelareaposition",4],["sizedesc",8]]]],[11,"x_label_offset","","The offset of x labels. This is used when we want to place…",8,[[["sizedesc",8]]]],[11,"y_label_offset","","The offset of y labels. This is used when we want to place…",8,[[["sizedesc",8]]]],[11,"disable_x_mesh","","Disable the mesh for the x axis.",8,[[]]],[11,"disable_y_mesh","","Disable the mesh for the y axis",8,[[]]],[11,"disable_x_axis","","Disable drawing the X axis",8,[[]]],[11,"disable_y_axis","","Disable drawing the Y axis",8,[[]]],[11,"disable_mesh","","Disable drawing all meshes",8,[[]]],[11,"disable_axes","","Disable drawing all axes",8,[[]]],[11,"axis_style","","Set the style definition for the axis",8,[[["into",8],["shapestyle",3]]]],[11,"x_labels","","Set how many labels for the X axis at most",8,[[]]],[11,"y_labels","","Set how many label for the Y axis at most",8,[[]]],[11,"line_style_1","","Set the style for the coarse grind grid",8,[[["into",8],["shapestyle",3]]]],[11,"line_style_2","","Set the style for the fine grind grid",8,[[["into",8],["shapestyle",3]]]],[11,"label_style","","Set the style of the label text",8,[[["intotextstyle",8]]]],[11,"x_label_style","","Set the style of the label X axis text",8,[[["intotextstyle",8]]]],[11,"y_label_style","","Set the style of the label Y axis text",8,[[["intotextstyle",8]]]],[11,"x_label_formatter","","Set the formatter function for the X label text",8,[[["fn",8]]]],[11,"y_label_formatter","","Set the formatter function for the Y label text",8,[[["fn",8]]]],[11,"axis_desc_style","","Set the axis description\'s style. If not given, use label…",8,[[["intotextstyle",8]]]],[11,"x_desc","","Set the X axis\'s description",8,[[["into",8],["string",3]]]],[11,"y_desc","","Set the Y axis\'s description",8,[[["into",8],["string",3]]]],[11,"draw","","Draw the configured mesh on the target plot",8,[[],[["result",4],["drawingareaerrorkind",4]]]],[11,"position","","Set the series label positioning style `pos` - The…",9,[[["serieslabelposition",4]]]],[11,"margin","","Set the margin of the series label drawing are",9,[[["sizedesc",8]]]],[11,"legend_area_size","","Set the size of legend area `size` - The size of legend…",9,[[["sizedesc",8]]]],[11,"border_style","","Set the style of the label series area `style` - The style…",9,[[["into",8],["shapestyle",3]]]],[11,"background_style","","Set the background style `style` - The style of the border",9,[[["into",8],["shapestyle",3]]]],[11,"label_font","","Set the series label font `font` - The font",9,[[["intotextstyle",8]]]],[11,"draw","","Draw the series label area",9,[[],[["result",4],["drawingareaerrorkind",4]]]],[0,"coord","plotters","Coordinate system abstractions.",null,null],[3,"RangedCoordf32","plotters::coord","The ranged coordinate for type f32",null,null],[3,"RangedCoordf64","","The ranged coordinate for type f64",null,null],[3,"RangedCoordi128","","The ranged coordinate for type i128",null,null],[3,"RangedCoordi32","","The ranged coordinate for type i32",null,null],[3,"RangedCoordi64","","The ranged coordinate for type i64",null,null],[3,"RangedCoordu128","","The ranged coordinate for type u128",null,null],[3,"RangedCoordu32","","The ranged coordinate for type u32",null,null],[3,"RangedCoordu64","","The ranged coordinate for type u64",null,null],[3,"RangedCoord","","The coordinate described by two ranged value",null,null],[3,"LogCoord","","A log scaled coordinate axis",null,null],[3,"LogRange","","The decorator type for a range of a log-scaled value",null,null],[12,"0","","",10,null],[3,"GroupBy","","The ranged value spec that needs to be grouped. This is…",null,null],[3,"Category","","The category coordinate",null,null],[3,"Shift","","The coordinate translation that only impose shift",null,null],[12,"0","","",11,null],[3,"ShiftAndTrans","","We can compose an arbitrary transformation with a shift",null,null],[4,"MeshLine","","Represent a coordinate mesh for the two ranged value…",null,null],[13,"XMesh","","",12,null],[13,"YMesh","","",12,null],[5,"make_partial_axis","","Make a partial axis based on the percentage of visible…",null,[[["range",3],["range",3]],[["option",4],["partialaxis",3]]]],[11,"new","","Create a new category coordinate.",13,[[["into",8],["string",3],["vec",3]]]],[11,"get","","Get an element reference (tick) by its value.",13,[[],[["option",4],["category",3]]]],[11,"range","","Create a full range over the category elements.",13,[[]]],[11,"len","","Get the number of elements in the category.",13,[[]]],[11,"is_empty","","Returns `true` if the category contains no elements.",13,[[]]],[11,"name","","Get the category name.",13,[[],["string",3]]],[11,"new","","Create a new ranged value coordinate system",14,[[["into",8],["into",8]]]],[11,"draw_mesh","","Draw the mesh for the coordinate system",14,[[["fnmut",8]],["result",4]]],[11,"get_x_range","","Get the range of X axis",14,[[],["range",3]]],[11,"get_y_range","","Get the range of Y axis",14,[[],["range",3]]],[11,"get_x_axis_pixel_range","","",14,[[],["range",3]]],[11,"get_y_axis_pixel_range","","",14,[[],["range",3]]],[11,"x_spec","","",14,[[]]],[11,"y_spec","","",14,[[]]],[11,"draw","","Draw a single mesh line onto the backend",12,[[["shapestyle",3]],[["drawingerrorkind",4],["result",4]]]],[8,"AsRangedCoord","","The trait for the type that can be converted into a ranged…",null,null],[16,"CoordDescType","","",15,null],[16,"Value","","",15,null],[8,"DiscreteRanged","","The trait indicates the coordinate is discrete, so that we…",null,null],[16,"RangeParameter","","",16,null],[10,"get_range_parameter","","",16,[[]]],[10,"next_value","","Get the smallest value that is larger than the `this` value",16,[[]]],[10,"previous_value","","Get the largest value that is smaller than `this` value",16,[[]]],[8,"IntoCentric","","The trait for types that can decorated by…",null,null],[11,"into_centric","","Convert current ranged value into a centric ranged value",17,[[],["centricdiscreterange",3]]],[8,"IntoPartialAxis","","The trait for the types that can be converted into a…",null,null],[11,"partial_axis","","Make the partial axis",18,[[["range",3]],["partialaxis",3]]],[8,"Ranged","","The trait that indicates we have a ordered and ranged…",null,null],[16,"ValueType","","The type of this value",19,null],[10,"map","","This function maps the value to i32, which is the drawing…",19,[[]]],[10,"key_points","","This function gives the key points that we can draw a grid…",19,[[],["vec",3]]],[10,"range","","Get the range of this value",19,[[],["range",3]]],[11,"axis_pixel_range","","This function provides the on-axis part of its range",19,[[],["range",3]]],[8,"ReversibleRanged","","The trait indicates the ranged value can be map reversely,…",null,null],[10,"unmap","","",20,[[],["option",4]]],[8,"LogScalable","","The trait for the type that is able to be presented in the…",null,null],[10,"as_f64","","Make the conversion from the type to the floating point…",21,[[]]],[10,"from_f64","","Convert a floating point number to the scale",21,[[]]],[8,"ToGroupByRange","","The trait that provides method `Self::group_by` function…",null,null],[11,"group_by","","Make a grouping ranged value, see the documentation for…",22,[[],["groupby",3]]],[8,"CoordTranslate","","The trait that translates some customized object to the…",null,null],[16,"From","","",23,null],[10,"translate","","Translate the guest coordinate to the guest coordinate",23,[[],["backendcoord",6]]],[8,"ReverseCoordTranslate","","The trait indicates that the coordinate system supports…",null,null],[10,"reverse_translate","","Reverse translate the coordinate from the drawing…",24,[[["backendcoord",6]],["option",4]]],[0,"data","plotters","The data processing module, which implements algorithms…",null,null],[3,"Quartiles","plotters::data","The quartiles",null,null],[5,"fitting_range","","Build a range that fits the data",null,[[["intoiterator",8]],["range",3]]],[11,"new","","Create a new quartiles struct with the values calculated…",25,[[]]],[11,"values","","Get the quartiles values.",25,[[]]],[11,"median","","Get the quartiles median.",25,[[]]],[0,"float","","",null,null],[5,"pretty_print_float","plotters::data::float","The function that pretty prints the floating number Since…",null,[[],["string",3]]],[0,"drawing","plotters","The drawing utils for Plotter. Which handles the both…",null,null],[3,"DrawingArea","plotters::drawing","The abstraction of a drawing area. Plotters uses drawing…",null,null],[3,"SVGBackend","","The SVG image drawing backend",null,null],[3,"DummyBackendError","","This is the dummy backend placeholder for the backend that…",null,null],[4,"DrawingAreaErrorKind","","The error description of any drawing area API",null,null],[13,"BackendError","","The error is due to drawing backend failure",26,null],[13,"SharingError","","We are not able to get the mutable reference of the…",26,null],[13,"LayoutError","","The error caused by invalid layout",26,null],[11,"draw_mesh","","Draw the mesh on a area",27,[[],[["result",4],["drawingareaerrorkind",4]]]],[11,"get_x_range","","Get the range of X of the guest coordinate for current…",27,[[],["range",3]]],[11,"get_y_range","","Get the range of Y of the guest coordinate for current…",27,[[],["range",3]]],[11,"get_x_axis_pixel_range","","",27,[[],["range",3]]],[11,"get_y_axis_pixel_range","","",27,[[],["range",3]]],[11,"get_base_pixel","","Get the left upper conner of this area in the drawing…",27,[[],["backendcoord",6]]],[11,"strip_coord_spec","","Strip the applied coordinate specification and returns a…",27,[[],[["drawingarea",3],["shift",3]]]],[11,"dim_in_pixel","","Get the area dimension in pixel",27,[[]]],[11,"relative_to_height","","Compute the relative size based on the drawing area\'s height",27,[[]]],[11,"relative_to_width","","Compute the relative size based on the drawing area\'s width",27,[[]]],[11,"get_pixel_range","","Get the pixel range of this area",27,[[]]],[11,"fill","","Fill the entire drawing area with a color",27,[[],[["result",4],["drawingareaerrorkind",4]]]],[11,"draw_pixel","","Draw a single pixel",27,[[],[["result",4],["drawingareaerrorkind",4]]]],[11,"present","","Present all the pending changes to the backend",27,[[],[["result",4],["drawingareaerrorkind",4]]]],[11,"draw","","Draw an high-level element",27,[[],[["result",4],["drawingareaerrorkind",4]]]],[11,"map_coordinate","","Map coordinate to the backend coordinate",27,[[],["backendcoord",6]]],[11,"estimate_text_size","","Estimate the dimension of the text if drawn on this…",27,[[["fontdesc",3]],[["drawingareaerrorkind",4],["result",4]]]],[11,"shrink","","Shrink the region, note all the locations are in guest…",27,[[],[["drawingarea",3],["shift",3]]]],[11,"apply_coord_spec","","Apply a new coord transformation object and returns a new…",27,[[["coordtranslate",8]],[["coordtranslate",8],["drawingarea",3]]]],[11,"margin","","Create a margin for the given drawing area and returns the…",27,[[["sizedesc",8]],[["drawingarea",3],["shift",3]]]],[11,"split_vertically","","Split the drawing area vertically",27,[[["sizedesc",8]]]],[11,"split_horizontally","","Split the drawing area horizontally",27,[[["sizedesc",8]]]],[11,"split_evenly","","Split the drawing area evenly",27,[[],["vec",3]]],[11,"split_by_breakpoints","","Split the drawing area into a grid with specified…",27,[[["asref",8],["asref",8]],["vec",3]]],[11,"titled","","Draw a title of the drawing area and return the remaining…",27,[[["into",8],["textstyle",3]],[["result",4],["drawingareaerrorkind",4]]]],[11,"draw_text","","Draw text on the drawing area",27,[[["textstyle",3],["backendcoord",6]],[["result",4],["drawingareaerrorkind",4]]]],[11,"into_coord_spec","","",27,[[]]],[11,"as_coord_spec","","",27,[[]]],[11,"new","","Create a new SVG drawing backend",28,[[]]],[11,"with_string","","Create a new SVG drawing backend and store the document…",28,[[["string",3]]]],[0,"rasterizer","","",null,null],[5,"draw_line","plotters::drawing::rasterizer","",null,[[["backendcoord",6]],[["drawingerrorkind",4],["result",4]]]],[5,"draw_rect","","",null,[[["backendcoord",6]],[["result",4],["drawingerrorkind",4]]]],[5,"draw_circle","","",null,[[["backendcoord",6]],[["result",4],["drawingerrorkind",4]]]],[5,"fill_polygon","","",null,[[],[["drawingerrorkind",4],["result",4]]]],[5,"polygonize","","",null,[[],[["backendcoord",6],["vec",3]]]],[0,"backend","plotters::drawing","",null,null],[4,"DrawingErrorKind","plotters::drawing::backend","The error produced by a drawing backend",null,null],[13,"DrawingError","","A drawing backend error",29,null],[13,"FontError","","A font rendering error",29,null],[6,"BackendCoord","","A coordinate in the image",null,null],[8,"BackendStyle","","The style data for the backend drawing API",null,null],[16,"ColorType","","The underlying type represents the color for this style",30,null],[10,"as_color","","Convert the style into the underlying color",30,[[],["rgbacolor",3]]],[11,"stroke_width","","",30,[[]]],[8,"DrawingBackend","","The drawing backend trait, which implements the low-level…",null,null],[16,"ErrorType","","The error type reported by the backend",31,null],[10,"get_size","","Get the dimension of the drawing backend in pixels",31,[[]]],[10,"ensure_prepared","","Ensure the backend is ready to draw",31,[[],[["result",4],["drawingerrorkind",4]]]],[10,"present","","Finalize the drawing step and present all the changes.…",31,[[],[["result",4],["drawingerrorkind",4]]]],[10,"draw_pixel","","Draw a pixel on the drawing backend",31,[[["backendcoord",6],["rgbacolor",3]],[["result",4],["drawingerrorkind",4]]]],[11,"draw_line","","Draw a line on the drawing backend",31,[[["backendcoord",6]],[["result",4],["drawingerrorkind",4]]]],[11,"draw_rect","","Draw a rectangle on the drawing backend",31,[[["backendcoord",6]],[["result",4],["drawingerrorkind",4]]]],[11,"draw_path","","Draw a path on the drawing backend",31,[[["intoiterator",8]],[["result",4],["drawingerrorkind",4]]]],[11,"draw_circle","","Draw a circle on the drawing backend",31,[[["backendcoord",6]],[["result",4],["drawingerrorkind",4]]]],[11,"fill_polygon","","",31,[[["intoiterator",8]],[["result",4],["drawingerrorkind",4]]]],[11,"draw_text","","Draw a text on the drawing backend",31,[[["textstyle",3],["backendcoord",6]],[["result",4],["drawingerrorkind",4]]]],[11,"estimate_text_size","","Estimate the size of the horizontal text if rendered on…",31,[[["fontdesc",3]],[["result",4],["drawingerrorkind",4]]]],[11,"blit_bitmap","","Blit a bitmap on to the backend.",31,[[["backendcoord",6]],[["result",4],["drawingerrorkind",4]]]],[8,"IntoDrawingArea","plotters::drawing","A type which can be converted into a root drawing area",null,null],[10,"into_drawing_area","","Convert the type into a root drawing area",32,[[],[["shift",3],["drawingarea",3]]]],[0,"element","plotters","Defines the drawing elements, the high-level drawing unit…",null,null],[3,"Pixel","plotters::element","An element of a single pixel",null,null],[3,"PathElement","","An element of a series of connected lines",null,null],[3,"Rectangle","","A rectangle element",null,null],[3,"Circle","","A circle element",null,null],[3,"Polygon","","An element of a filled polygon",null,null],[3,"Text","","A single line text element. This can be owned or borrowed…",null,null],[3,"MultiLineText","","An multi-line text element. The `Text` element allows only…",null,null],[3,"Cross","","Describe a cross",null,null],[3,"TriangleMarker","","Describe a triangle marker",null,null],[3,"ComposedElement","","The composed element which has at least two components",null,null],[3,"EmptyElement","","An empty composable element, which is the start point of…",null,null],[3,"DynElement","","The container for a dynamically dispatched element",null,null],[11,"new","","",33,[[["into",8],["into",8],["shapestyle",3]]]],[11,"new","","Create a new path",34,[[["into",8],["vec",3],["shapestyle",3],["into",8]]]],[11,"new","","Create a new path",35,[[["into",8],["shapestyle",3]]]],[11,"set_margin","","Set the margin of the rectangle",35,[[]]],[11,"new","","Create a new circle element",36,[[["into",8],["shapestyle",3]]]],[11,"new","","Create a new polygon",37,[[["into",8],["vec",3],["shapestyle",3],["into",8]]]],[11,"new","","Create a new text element",38,[[["into",8],["textstyle",3]]]],[11,"new","","Create an empty multi-line text element. Lines can be…",39,[[["into",8],["textstyle",3]]]],[11,"set_line_height","","Set the line height of the multi-line text element",39,[[]]],[11,"push_line","","Push a new line into the given multi-line text `line`: The…",39,[[["into",8]]]],[11,"estimate_dimension","","Estimate the multi-line text element\'s dimension",39,[[],["fontresult",6]]],[11,"relocate","","Move the location to the specified location",39,[[]]],[11,"compute_line_layout","","Compute the line layout",39,[[],[["fontresult",6],["vec",3]]]],[11,"from_str","","Parse a multi-line text into an multi-line element.",39,[[["into",8],["into",8],["textstyle",3]]]],[11,"from_string","","Parse a multi-line text into an multi-line element.",39,[[["string",3],["into",8],["textstyle",3]]]],[11,"new","","",40,[[["into",8],["shapestyle",3]]]],[11,"new","","",41,[[["into",8],["shapestyle",3]]]],[11,"at","","",42,[[]]],[6,"Path","","",null,null],[8,"PointElement","","The element that used to describe a point",null,null],[10,"make_point","","",43,[[["shapestyle",3]]]],[8,"IntoDynElement","","The trait that makes the conversion from the statically…",null,null],[10,"into_dyn","","Make the conversion",44,[[],["dynelement",3]]],[8,"PointCollection","","A type which is logically a collection of points, under…",null,null],[16,"Borrow","","The item in point iterator",45,null],[16,"IntoIter","","The point iterator",45,null],[10,"point_iter","","framework to do the coordinate mapping",45,[[]]],[8,"Drawable","","The trait indicates we are able to draw it on a drawing area",null,null],[10,"draw","","Actually draws the element. The key points is already…",46,[[["iterator",8]],[["drawingerrorkind",4],["result",4]]]],[0,"series","plotters","This module contains predefined types of series. The…",null,null],[3,"AreaSeries","plotters::series","An area series is similar to a line series but use a…",null,null],[3,"LineSeries","","The line series object, which takes an iterator of points…",null,null],[11,"new","","",47,[[["into",8],["intoiterator",8],["shapestyle",3]]]],[11,"border_style","","",47,[[["into",8],["shapestyle",3]]]],[11,"new","","",48,[[["into",8],["intoiterator",8],["shapestyle",3]]]],[11,"point_size","","",48,[[]]],[0,"style","plotters","The style for shapes and text, font, color, etc.",null,null],[3,"Palette99","plotters::style","The palette of 99% accessibility",null,null],[3,"Palette9999","","The palette of 99.99% accessibility",null,null],[3,"Palette100","","The palette of 100% accessibility",null,null],[3,"HSLColor","","The color described by HSL color space",null,null],[12,"0","","",49,null],[12,"1","","",49,null],[12,"2","","",49,null],[3,"PaletteColor","","A color in the given palette",null,null],[3,"RGBAColor","","The RGBA representation of the color, Plotters use RGBA as…",null,null],[3,"RGBColor","","The color described by its RGB value",null,null],[12,"0","","",50,null],[12,"1","","",50,null],[12,"2","","",50,null],[3,"FontDesc","","Describes a font",null,null],[3,"ShapeStyle","","Style for any of shape",null,null],[12,"color","","",51,null],[12,"filled","","",51,null],[12,"stroke_width","","",51,null],[3,"TextStyle","","Style of a text",null,null],[12,"font","","The font description",52,null],[12,"color","","The text color",52,null],[12,"pos","","The anchor point position",52,null],[4,"FontFamily","","Describes font family. This can be either a specific font…",null,null],[13,"Serif","","The system default serif font family",53,null],[13,"SansSerif","","The system default sans-serif font family",53,null],[13,"Monospace","","The system default monospace font",53,null],[13,"Name","","A specific font family name",53,null],[4,"FontStyle","","Describes the font style. Such as Italic, Oblique, etc.",null,null],[13,"Normal","","The normal style",54,null],[13,"Oblique","","The oblique style",54,null],[13,"Italic","","The italic style",54,null],[13,"Bold","","The bold style",54,null],[4,"FontTransform","","Specifying text transformations",null,null],[13,"None","","Nothing to transform",55,null],[13,"Rotate90","","Rotating the text 90 degree clockwise",55,null],[13,"Rotate180","","Rotating the text 180 degree clockwise",55,null],[13,"Rotate270","","Rotating the text 270 degree clockwise",55,null],[4,"RelativeSize","","Describes a relative size, might be",null,null],[13,"Height","","Percentage height",56,null],[13,"Width","","Percentage width",56,null],[13,"Smaller","","Percentage of either height or width, which is smaller",56,null],[11,"pick","","Pick a color from the palette",57,[[],["palettecolor",3]]],[0,"colors","","Basic predefined colors.",null,null],[17,"WHITE","plotters::style::colors","The predefined white color",null,null],[17,"BLACK","","The predefined black color",null,null],[17,"RED","","The predefined red color",null,null],[17,"GREEN","","The predefined green color",null,null],[17,"BLUE","","The predefined blue color",null,null],[17,"YELLOW","","The predefined yellow color",null,null],[17,"CYAN","","The predefined cyan color",null,null],[17,"MAGENTA","","The predefined magenta color",null,null],[17,"TRANSPARENT","","The predefined transparent",null,null],[11,"transform","plotters::style","Transform the coordinate to perform the rotation",55,[[]]],[11,"as_str","","Make a CSS compatible string for the font family name.…",53,[[]]],[11,"as_str","","Convert the font style into a CSS compatible string which…",54,[[]]],[11,"new","","Create a new font",58,[[["fontstyle",4],["fontfamily",4]]]],[11,"resize","","Create a new font desc with the same font but different size",58,[[],["fontdesc",3]]],[11,"style","","Set the style of the font",58,[[["fontstyle",4]]]],[11,"transform","","Set the font transformation",58,[[["fonttransform",4]]]],[11,"get_transform","","Get the font transformation description",58,[[],["fonttransform",4]]],[11,"color","","Set the color of the font and return the result text style…",58,[[],["textstyle",3]]],[11,"get_name","","Get the name of the font",58,[[]]],[11,"get_style","","Get the name of the style",58,[[],["fontstyle",4]]],[11,"get_size","","Get the size of font",58,[[]]],[11,"layout_box","","Get the size of the text if rendered in this font",58,[[],["fontresult",6]]],[11,"box_size","","Get the size of the text if rendered in this font. This is…",58,[[],["fontresult",6]]],[11,"draw","","Actually draws a font with a drawing function",58,[[["fnmut",8]],[["fontresult",6],["result",4]]]],[11,"filled","","Make a filled shape style",51,[[]]],[11,"stroke_width","","",51,[[]]],[11,"min","","Set the lower bound of the relative size.",56,[[],["relativesizewithbound",3]]],[11,"max","","Set the upper bound of the relative size",56,[[],["relativesizewithbound",3]]],[11,"color","","Sets the color of the style.",52,[[]]],[11,"transform","","Sets the font transformation of the style.",52,[[["fonttransform",4]]]],[11,"pos","","Sets the anchor position.",52,[[["pos",3]]]],[0,"text_anchor","","Text anchor attributes are used to properly position the…",null,null],[3,"Pos","plotters::style::text_anchor","The text anchor position.",null,null],[12,"h_pos","","The horizontal position of the anchor point",59,null],[12,"v_pos","","The vertical position of the anchor point",59,null],[4,"HPos","","The horizontal position of the anchor point relative to…",null,null],[13,"Left","","Anchor point is on the left side of the text",60,null],[13,"Right","","Anchor point is on the right side of the text",60,null],[13,"Center","","Anchor point is in the horizontal center of the text",60,null],[4,"VPos","","The vertical position of the anchor point relative to the…",null,null],[13,"Top","","Anchor point is on the top of the text",61,null],[13,"Center","","Anchor point is in the vertical center of the text",61,null],[13,"Bottom","","Anchor point is on the bottom of the text",61,null],[6,"FontError","plotters::style","The error type for the font implementation",null,null],[6,"FontResult","","The type we used to represent a result of any font…",null,null],[6,"LayoutBox","","",null,null],[8,"Palette","","",null,null],[18,"COLORS","","",62,null],[11,"pick","","",62,[[],["palettecolor",3]]],[8,"Color","","Any color representation",null,null],[10,"rgb","","Convert the RGB representation to the standard RGB tuple",63,[[]]],[10,"alpha","","Get the alpha channel of the color",63,[[]]],[11,"mix","","Mix the color with given opacity",63,[[],["rgbacolor",3]]],[11,"to_rgba","","Convert the color into the RGBA color which is internally…",63,[[],["rgbacolor",3]]],[11,"filled","","Make a filled style form the color",63,[[],["shapestyle",3]]],[11,"stroke_width","","Make a shape style with stroke width from a color",63,[[],["shapestyle",3]]],[8,"SimpleColor","","Color without alpha channel",null,null],[10,"rgb","","",64,[[]]],[8,"IntoFont","","The trait that allows some type turns into a font…",null,null],[10,"into_font","","Make the font description from the source type",65,[[],["fontdesc",3]]],[8,"AsRelative","","Allows a value turns into a relative size",null,null],[11,"percent_width","","Make the value a relative size of percentage of width",66,[[],["relativesize",4]]],[11,"percent_height","","Make the value a relative size of percentage of height",66,[[],["relativesize",4]]],[11,"percent","","Make the value a relative size of percentage of minimal of…",66,[[],["relativesize",4]]],[8,"SizeDesc","","The trait that describes a size, it may be a relative size…",null,null],[10,"in_pixels","","Convert the size into the number of pixels",67,[[]]],[8,"IntoTextStyle","","",null,null],[10,"into_text_style","","",68,[[],["textstyle",3]]],[0,"prelude","plotters","The module imports the most commonly used types and…",null,null],[3,"ChartBuilder","plotters::prelude","The helper object to create a chart context, which is used…",null,null],[3,"ChartContext","","The context of the chart. This is the core object of…",null,null],[3,"Category","","The category coordinate",null,null],[3,"GroupBy","","The ranged value spec that needs to be grouped. This is…",null,null],[3,"LogCoord","","A log scaled coordinate axis",null,null],[3,"LogRange","","The decorator type for a range of a log-scaled value",null,null],[12,"0","","",10,null],[3,"RangedCoord","","The coordinate described by two ranged value",null,null],[3,"RangedCoordf32","","The ranged coordinate for type f32",null,null],[3,"RangedCoordf64","","The ranged coordinate for type f64",null,null],[3,"RangedCoordi32","","The ranged coordinate for type i32",null,null],[3,"RangedCoordi64","","The ranged coordinate for type i64",null,null],[3,"RangedCoordu32","","The ranged coordinate for type u32",null,null],[3,"RangedCoordu64","","The ranged coordinate for type u64",null,null],[3,"AreaSeries","","An area series is similar to a line series but use a…",null,null],[3,"LineSeries","","The line series object, which takes an iterator of points…",null,null],[3,"FontDesc","","Describes a font",null,null],[3,"HSLColor","","The color described by HSL color space",null,null],[12,"0","","",49,null],[12,"1","","",49,null],[12,"2","","",49,null],[3,"Palette100","","The palette of 100% accessibility",null,null],[3,"Palette99","","The palette of 99% accessibility",null,null],[3,"Palette9999","","The palette of 99.99% accessibility",null,null],[3,"PaletteColor","","A color in the given palette",null,null],[3,"RGBColor","","The color described by its RGB value",null,null],[12,"0","","",50,null],[12,"1","","",50,null],[12,"2","","",50,null],[3,"ShapeStyle","","Style for any of shape",null,null],[12,"color","","",51,null],[12,"filled","","",51,null],[12,"stroke_width","","",51,null],[3,"TextStyle","","Style of a text",null,null],[12,"font","","The font description",52,null],[12,"color","","The text color",52,null],[12,"pos","","The anchor point position",52,null],[3,"Circle","","A circle element",null,null],[3,"Cross","","Describe a cross",null,null],[3,"DynElement","","The container for a dynamically dispatched element",null,null],[3,"EmptyElement","","An empty composable element, which is the start point of…",null,null],[3,"MultiLineText","","An multi-line text element. The `Text` element allows only…",null,null],[3,"PathElement","","An element of a series of connected lines",null,null],[3,"Pixel","","An element of a single pixel",null,null],[3,"Polygon","","An element of a filled polygon",null,null],[3,"Rectangle","","A rectangle element",null,null],[3,"Text","","A single line text element. This can be owned or borrowed…",null,null],[3,"TriangleMarker","","Describe a triangle marker",null,null],[3,"Quartiles","","The quartiles",null,null],[4,"LabelAreaPosition","","The enum used to specify the position of label area. This…",null,null],[13,"Top","","",0,null],[13,"Bottom","","",0,null],[13,"Left","","",0,null],[13,"Right","","",0,null],[4,"SeriesLabelPosition","","Describes where we want to put the series label",null,null],[13,"UpperLeft","","",1,null],[13,"MiddleLeft","","",1,null],[13,"LowerLeft","","",1,null],[13,"UpperMiddle","","",1,null],[13,"MiddleMiddle","","",1,null],[13,"LowerMiddle","","",1,null],[13,"UpperRight","","",1,null],[13,"MiddleRight","","",1,null],[13,"LowerRight","","",1,null],[13,"Coordinate","","Force the series label drawn at the specific location",1,null],[4,"FontFamily","","Describes font family. This can be either a specific font…",null,null],[13,"Serif","","The system default serif font family",53,null],[13,"SansSerif","","The system default sans-serif font family",53,null],[13,"Monospace","","The system default monospace font",53,null],[13,"Name","","A specific font family name",53,null],[4,"FontStyle","","Describes the font style. Such as Italic, Oblique, etc.",null,null],[13,"Normal","","The normal style",54,null],[13,"Oblique","","The oblique style",54,null],[13,"Italic","","The italic style",54,null],[13,"Bold","","The bold style",54,null],[4,"FontTransform","","Specifying text transformations",null,null],[13,"None","","Nothing to transform",55,null],[13,"Rotate90","","Rotating the text 90 degree clockwise",55,null],[13,"Rotate180","","Rotating the text 180 degree clockwise",55,null],[13,"Rotate270","","Rotating the text 270 degree clockwise",55,null],[6,"DrawResult","","The type used to returns a drawing operation that can be…",null,null],[8,"IntoCentric","","The trait for types that can decorated by…",null,null],[11,"into_centric","plotters::coord","Convert current ranged value into a centric ranged value",17,[[],["centricdiscreterange",3]]],[8,"IntoPartialAxis","plotters::prelude","The trait for the types that can be converted into a…",null,null],[11,"partial_axis","plotters::coord","Make the partial axis",18,[[["range",3]],["partialaxis",3]]],[8,"LogScalable","plotters::prelude","The trait for the type that is able to be presented in the…",null,null],[10,"as_f64","","Make the conversion from the type to the floating point…",21,[[]]],[10,"from_f64","","Convert a floating point number to the scale",21,[[]]],[8,"Ranged","","The trait that indicates we have a ordered and ranged…",null,null],[16,"ValueType","","The type of this value",19,null],[10,"map","","This function maps the value to i32, which is the drawing…",19,[[]]],[10,"key_points","","This function gives the key points that we can draw a grid…",19,[[],["vec",3]]],[10,"range","","Get the range of this value",19,[[],["range",3]]],[11,"axis_pixel_range","plotters::coord","This function provides the on-axis part of its range",19,[[],["range",3]]],[8,"ToGroupByRange","plotters::prelude","The trait that provides method `Self::group_by` function…",null,null],[11,"group_by","plotters::coord","Make a grouping ranged value, see the documentation for…",22,[[],["groupby",3]]],[8,"AsRelative","plotters::prelude","Allows a value turns into a relative size",null,null],[11,"percent_width","plotters::style","Make the value a relative size of percentage of width",66,[[],["relativesize",4]]],[11,"percent_height","","Make the value a relative size of percentage of height",66,[[],["relativesize",4]]],[11,"percent","","Make the value a relative size of percentage of minimal of…",66,[[],["relativesize",4]]],[8,"Color","plotters::prelude","Any color representation",null,null],[10,"rgb","","Convert the RGB representation to the standard RGB tuple",63,[[]]],[10,"alpha","","Get the alpha channel of the color",63,[[]]],[11,"mix","plotters::style","Mix the color with given opacity",63,[[],["rgbacolor",3]]],[11,"to_rgba","","Convert the color into the RGBA color which is internally…",63,[[],["rgbacolor",3]]],[11,"filled","","Make a filled style form the color",63,[[],["shapestyle",3]]],[11,"stroke_width","","Make a shape style with stroke width from a color",63,[[],["shapestyle",3]]],[8,"IntoFont","plotters::prelude","The trait that allows some type turns into a font…",null,null],[10,"into_font","","Make the font description from the source type",65,[[],["fontdesc",3]]],[8,"Palette","","",null,null],[18,"COLORS","plotters::style","",62,null],[11,"pick","","",62,[[],["palettecolor",3]]],[8,"SimpleColor","plotters::prelude","Color without alpha channel",null,null],[10,"rgb","","",64,[[]]],[8,"IntoDynElement","","The trait that makes the conversion from the statically…",null,null],[10,"into_dyn","","Make the conversion",44,[[],["dynelement",3]]],[11,"from","plotters::chart","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","plotters::coord","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","plotters::data","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","plotters::drawing","",27,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","plotters::drawing::backend","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","plotters::element","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","plotters::series","",47,[[]]],[11,"into","","",47,[[]]],[11,"into_iter","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"into_iter","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","plotters::style","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"as_color","","",49,[[],["rgbacolor",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"as_color","","",57,[[],["rgbacolor",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"as_color","","",86,[[],["rgbacolor",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"as_color","","",50,[[],["rgbacolor",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"as_color","","",51,[[],["rgbacolor",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","plotters::style::text_anchor","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"range","plotters::coord","",13,[[],[["category",3],["range",3]]]],[11,"map","","",13,[[]]],[11,"key_points","","",13,[[],["vec",3]]],[11,"map","","",77,[[]]],[11,"key_points","","",77,[[],["vec",3]]],[11,"range","","",77,[[],["range",3]]],[11,"map","","",69,[[]]],[11,"key_points","","",69,[[],["vec",3]]],[11,"range","","",69,[[],["range",3]]],[11,"map","","",70,[[]]],[11,"key_points","","",70,[[],["vec",3]]],[11,"range","","",70,[[],["range",3]]],[11,"map","","",75,[[]]],[11,"key_points","","",75,[[],["vec",3]]],[11,"range","","",75,[[],["range",3]]],[11,"map","","",72,[[]]],[11,"key_points","","",72,[[],["vec",3]]],[11,"range","","",72,[[],["range",3]]],[11,"map","","",76,[[]]],[11,"key_points","","",76,[[],["vec",3]]],[11,"range","","",76,[[],["range",3]]],[11,"map","","",73,[[]]],[11,"key_points","","",73,[[],["vec",3]]],[11,"range","","",73,[[],["range",3]]],[11,"map","","",74,[[]]],[11,"key_points","","",74,[[],["vec",3]]],[11,"range","","",74,[[],["range",3]]],[11,"map","","",71,[[]]],[11,"key_points","","",71,[[],["vec",3]]],[11,"range","","",71,[[],["range",3]]],[11,"map","","",78,[[]]],[11,"range","","",78,[[],["range",3]]],[11,"key_points","","",78,[[],["vec",3]]],[11,"unmap","","",69,[[],["option",4]]],[11,"unmap","","",70,[[],["option",4]]],[11,"unmap","","",75,[[],["option",4]]],[11,"unmap","","",72,[[],["option",4]]],[11,"unmap","","",76,[[],["option",4]]],[11,"unmap","","",73,[[],["option",4]]],[11,"unmap","","",74,[[],["option",4]]],[11,"unmap","","",71,[[],["option",4]]],[11,"get_range_parameter","","",75,[[]]],[11,"next_value","","",75,[[]]],[11,"previous_value","","",75,[[]]],[11,"get_range_parameter","","",72,[[]]],[11,"next_value","","",72,[[]]],[11,"previous_value","","",72,[[]]],[11,"get_range_parameter","","",76,[[]]],[11,"next_value","","",76,[[]]],[11,"previous_value","","",76,[[]]],[11,"get_range_parameter","","",73,[[]]],[11,"next_value","","",73,[[]]],[11,"previous_value","","",73,[[]]],[11,"get_range_parameter","","",74,[[]]],[11,"next_value","","",74,[[]]],[11,"previous_value","","",74,[[]]],[11,"get_range_parameter","","",71,[[]]],[11,"next_value","","",71,[[]]],[11,"previous_value","","",71,[[]]],[11,"get_range_parameter","","",78,[[]]],[11,"previous_value","","",78,[[]]],[11,"next_value","","",78,[[]]],[11,"translate","","",14,[[],["backendcoord",6]]],[11,"translate","","",11,[[],["backendcoord",6]]],[11,"translate","","",79,[[],["backendcoord",6]]],[11,"reverse_translate","","",14,[[["backendcoord",6]],["option",4]]],[11,"reverse_translate","","",11,[[["backendcoord",6]],[["backendcoord",6],["option",4]]]],[11,"reverse_translate","","",79,[[["backendcoord",6]],["option",4]]],[11,"as_color","plotters::style","",51,[[],["rgbacolor",3]]],[11,"stroke_width","","",51,[[]]],[11,"get_size","plotters::drawing","",28,[[]]],[11,"ensure_prepared","","",28,[[],[["drawingerrorkind",4],["result",4]]]],[11,"present","","",28,[[],[["drawingerrorkind",4],["result",4]]]],[11,"draw_pixel","","",28,[[["backendcoord",6],["rgbacolor",3]],[["drawingerrorkind",4],["result",4]]]],[11,"draw_line","","",28,[[["backendcoord",6]],[["result",4],["drawingerrorkind",4]]]],[11,"draw_rect","","",28,[[["backendcoord",6]],[["result",4],["drawingerrorkind",4]]]],[11,"draw_path","","",28,[[["intoiterator",8]],[["result",4],["drawingerrorkind",4]]]],[11,"fill_polygon","","",28,[[["intoiterator",8]],[["result",4],["drawingerrorkind",4]]]],[11,"draw_circle","","",28,[[["backendcoord",6]],[["result",4],["drawingerrorkind",4]]]],[11,"draw_text","","",28,[[["textstyle",3],["backendcoord",6]],[["result",4],["drawingerrorkind",4]]]],[11,"make_point","plotters::element","",40,[[["shapestyle",3]]]],[11,"make_point","","",41,[[["shapestyle",3]]]],[11,"make_point","","",36,[[["shapestyle",3]]]],[11,"make_point","","",33,[[["shapestyle",3]]]],[11,"draw","","",33,[[["iterator",8]],[["drawingerrorkind",4],["result",4]]]],[11,"draw","","",34,[[["iterator",8]],[["drawingerrorkind",4],["result",4]]]],[11,"draw","","",35,[[["iterator",8]],[["drawingerrorkind",4],["result",4]]]],[11,"draw","","",36,[[["iterator",8]],[["drawingerrorkind",4],["result",4]]]],[11,"draw","","",37,[[["iterator",8]],[["drawingerrorkind",4],["result",4]]]],[11,"draw","","",38,[[["iterator",8]],[["drawingerrorkind",4],["result",4]]]],[11,"draw","","",39,[[["iterator",8]],[["drawingerrorkind",4],["result",4]]]],[11,"draw","","",40,[[["iterator",8]],[["drawingerrorkind",4],["result",4]]]],[11,"draw","","",41,[[["iterator",8]],[["drawingerrorkind",4],["result",4]]]],[11,"draw","","",42,[[["iterator",8]],[["drawingerrorkind",4],["result",4]]]],[11,"draw","","",81,[[["iterator",8]],[["drawingerrorkind",4],["result",4]]]],[11,"draw","","",82,[[["iterator",8]],[["drawingerrorkind",4],["result",4]]]],[11,"rgb","plotters::style","",86,[[]]],[11,"alpha","","",86,[[]]],[11,"to_rgba","","",86,[[],["rgbacolor",3]]],[11,"rgb","","",57,[[]]],[11,"rgb","","",50,[[]]],[11,"rgb","","",49,[[]]],[11,"in_pixels","","",56,[[]]],[11,"into_text_style","","",58,[[],["textstyle",3]]],[11,"into_text_style","","",52,[[],["textstyle",3]]],[11,"into_text_style","","",53,[[],["textstyle",3]]],[11,"drop","plotters::drawing","",28,[[]]],[11,"from","plotters::chart","",5,[[["chartcontext",3]],["chartstate",3]]],[11,"from","","",5,[[["chartcontext",3]],["chartstate",3]]],[11,"from","","",7,[[["dualcoordchartcontext",3]],["dualcoordchartstate",3]]],[11,"from","","",7,[[["dualcoordchartcontext",3]],["dualcoordchartstate",3]]],[11,"from","plotters::coord","",77,[[["logrange",3]],["logcoord",3]]],[11,"from","","",69,[[["range",3]]]],[11,"from","","",70,[[["range",3]]]],[11,"from","","",75,[[["range",3]]]],[11,"from","","",72,[[["range",3]]]],[11,"from","","",76,[[["range",3]]]],[11,"from","","",73,[[["range",3]]]],[11,"from","","",74,[[["range",3]]]],[11,"from","","",71,[[["range",3]]]],[11,"from","plotters::drawing","",27,[[]]],[11,"from","","",27,[[["rc",3]]]],[11,"from","plotters::style","",53,[[],["fontfamily",4]]],[11,"from","","",54,[[],["fontstyle",4]]],[11,"from","","",58,[[],["fontdesc",3]]],[11,"from","","",58,[[["fontfamily",4]],["fontdesc",3]]],[11,"from","","",58,[[],["fontdesc",3]]],[11,"from","","",58,[[],["fontdesc",3]]],[11,"from","","",58,[[],["fontdesc",3]]],[11,"from","","",58,[[],["fontdesc",3]]],[11,"from","","",51,[[]]],[11,"from","","",52,[[]]],[11,"next","plotters::series","",47,[[],["option",4]]],[11,"next","","",48,[[],["option",4]]],[11,"clone","plotters::chart","",0,[[],["labelareaposition",4]]],[11,"clone","","",5,[[]]],[11,"clone","plotters::coord","",13,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",69,[[],["rangedcoordf32",3]]],[11,"clone","","",70,[[],["rangedcoordf64",3]]],[11,"clone","","",75,[[],["rangedcoordu32",3]]],[11,"clone","","",72,[[],["rangedcoordi32",3]]],[11,"clone","","",76,[[],["rangedcoordu64",3]]],[11,"clone","","",73,[[],["rangedcoordi64",3]]],[11,"clone","","",74,[[],["rangedcoordu128",3]]],[11,"clone","","",71,[[],["rangedcoordi128",3]]],[11,"clone","","",14,[[]]],[11,"clone","","",11,[[],["shift",3]]],[11,"clone","plotters::data","",25,[[],["quartiles",3]]],[11,"clone","plotters::drawing","",27,[[]]],[11,"clone","plotters::style","",86,[[],["rgbacolor",3]]],[11,"clone","","",55,[[],["fonttransform",4]]],[11,"clone","","",58,[[],["fontdesc",3]]],[11,"clone","","",53,[[],["fontfamily",4]]],[11,"clone","","",54,[[],["fontstyle",4]]],[11,"clone","","",51,[[],["shapestyle",3]]],[11,"clone","plotters::style::text_anchor","",60,[[],["hpos",4]]],[11,"clone","","",61,[[],["vpos",4]]],[11,"clone","","",59,[[],["pos",3]]],[11,"clone","plotters::style","",52,[[],["textstyle",3]]],[11,"eq","","",86,[[["rgbacolor",3]]]],[11,"ne","","",86,[[["rgbacolor",3]]]],[11,"deref","plotters::chart","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"fmt","plotters::coord","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","plotters::data","",25,[[["formatter",3]],["result",6]]],[11,"fmt","plotters::drawing","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","plotters::drawing::backend","",29,[[["formatter",3]],["result",6]]],[11,"fmt","plotters::style","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","plotters::drawing","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","plotters::drawing::backend","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"add","plotters::element","",42,[[]]],[11,"add","","",81,[[]]],[11,"borrow","plotters::chart","",6,[[],["chartcontext",3]]],[11,"borrow_mut","","",6,[[],["chartcontext",3]]],[11,"group_by","plotters::coord","Make a grouping ranged value, see the documentation for…",22,[[],["groupby",3]]],[11,"axis_pixel_range","","This function provides the on-axis part of its range",19,[[],["range",3]]],[11,"into_centric","","Convert current ranged value into a centric ranged value",17,[[],["centricdiscreterange",3]]],[11,"partial_axis","","Make the partial axis",18,[[["range",3]],["partialaxis",3]]],[11,"mix","plotters::style","Mix the color with given opacity",63,[[],["rgbacolor",3]]],[11,"to_rgba","","Convert the color into the RGBA color which is internally…",63,[[],["rgbacolor",3]]],[11,"filled","","Make a filled style form the color",63,[[],["shapestyle",3]]],[11,"stroke_width","","Make a shape style with stroke width from a color",63,[[],["shapestyle",3]]],[18,"COLORS","","",62,null],[11,"pick","","",62,[[],["palettecolor",3]]],[11,"percent_width","","Make the value a relative size of percentage of width",66,[[],["relativesize",4]]],[11,"percent_height","","Make the value a relative size of percentage of height",66,[[],["relativesize",4]]],[11,"percent","","Make the value a relative size of percentage of minimal of…",66,[[],["relativesize",4]]],[11,"new","plotters::style::text_anchor","Create a new text anchor position.",59,[[["vpos",4],["hpos",4]]]],[11,"default","","Create a default text anchor position (top left).",59,[[]]]],"p":[[4,"LabelAreaPosition"],[4,"SeriesLabelPosition"],[3,"ChartBuilder"],[3,"SeriesAnno"],[3,"ChartContext"],[3,"ChartState"],[3,"DualCoordChartContext"],[3,"DualCoordChartState"],[3,"MeshStyle"],[3,"SeriesLabelStyle"],[3,"LogRange"],[3,"Shift"],[4,"MeshLine"],[3,"Category"],[3,"RangedCoord"],[8,"AsRangedCoord"],[8,"DiscreteRanged"],[8,"IntoCentric"],[8,"IntoPartialAxis"],[8,"Ranged"],[8,"ReversibleRanged"],[8,"LogScalable"],[8,"ToGroupByRange"],[8,"CoordTranslate"],[8,"ReverseCoordTranslate"],[3,"Quartiles"],[4,"DrawingAreaErrorKind"],[3,"DrawingArea"],[3,"SVGBackend"],[4,"DrawingErrorKind"],[8,"BackendStyle"],[8,"DrawingBackend"],[8,"IntoDrawingArea"],[3,"Pixel"],[3,"PathElement"],[3,"Rectangle"],[3,"Circle"],[3,"Polygon"],[3,"Text"],[3,"MultiLineText"],[3,"Cross"],[3,"TriangleMarker"],[3,"EmptyElement"],[8,"PointElement"],[8,"IntoDynElement"],[8,"PointCollection"],[8,"Drawable"],[3,"AreaSeries"],[3,"LineSeries"],[3,"HSLColor"],[3,"RGBColor"],[3,"ShapeStyle"],[3,"TextStyle"],[4,"FontFamily"],[4,"FontStyle"],[4,"FontTransform"],[4,"RelativeSize"],[3,"PaletteColor"],[3,"FontDesc"],[3,"Pos"],[4,"HPos"],[4,"VPos"],[8,"Palette"],[8,"Color"],[8,"SimpleColor"],[8,"IntoFont"],[8,"AsRelative"],[8,"SizeDesc"],[8,"IntoTextStyle"],[3,"RangedCoordf32"],[3,"RangedCoordf64"],[3,"RangedCoordi128"],[3,"RangedCoordi32"],[3,"RangedCoordi64"],[3,"RangedCoordu128"],[3,"RangedCoordu32"],[3,"RangedCoordu64"],[3,"LogCoord"],[3,"GroupBy"],[3,"ShiftAndTrans"],[3,"DummyBackendError"],[3,"ComposedElement"],[3,"DynElement"],[3,"Palette99"],[3,"Palette9999"],[3,"Palette100"],[3,"RGBAColor"]]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\\\"hello\\\"`), byte string (`b\\\"hello\\\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`\'a\'`), string (`\\\"hello\\\"`), number…",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `\'` is `Joint` in `\'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`\'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span",3]]],[11,"mixed_site","","The span located at the invocation of the procedural…",4,[[],["span",3]]],[11,"resolved_at","","Creates a new span with the same line/column information…",4,[[["span",3]],["span",3]]],[11,"located_at","","Creates a new span with the same name resolution behavior…",4,[[["span",3]],["span",3]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span",3]]],[11,"join","","Create a new span encompassing `self` and `other`.",4,[[["span",3]],[["option",4],["span",3]]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[],["span",3]]],[11,"set_span","","Configures the span for only this token.",0,[[["span",3]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["delimiter",4],["tokenstream",3]],["group",3]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[],["delimiter",4]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of this…",5,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of this…",5,[[],["span",3]]],[11,"set_span","","Configures the span for this `Group`\'s delimiters, but not…",5,[[["span",3]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["spacing",4]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",6,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["span",3]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",7,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["span",3]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"string","","String literal.",8,[[],["literal",3]]],[11,"character","","Character literal.",8,[[],["literal",3]]],[11,"byte_string","","Byte string literal.",8,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",8,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["span",3]]]],[11,"subspan","","Returns a `Span` that is a subset of `self.span()`…",8,[[["rangebounds",8]],[["option",4],["span",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","proc_macro2::token_stream","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","proc_macro2","",4,[[["span",3]],["span",3]]],[11,"from","","",3,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",3,[[["tokentree",4]]]],[11,"from","","",0,[[["group",3]],["tokentree",4]]],[11,"from","","",0,[[["ident",3]],["tokentree",4]]],[11,"from","","",0,[[["punct",3]],["tokentree",4]]],[11,"from","","",0,[[["literal",3]],["tokentree",4]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"into_iter","","",3,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",10,[[],[["tokentree",4],["option",4]]]],[11,"clone","proc_macro2","",3,[[],["tokenstream",3]]],[11,"clone","","",4,[[],["span",3]]],[11,"clone","","",0,[[],["tokentree",4]]],[11,"clone","","",5,[[],["group",3]]],[11,"clone","","",1,[[],["delimiter",4]]],[11,"clone","","",6,[[],["punct",3]]],[11,"clone","","",2,[[],["spacing",4]]],[11,"clone","","",7,[[],["ident",3]]],[11,"clone","","",8,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",10,[[],["intoiter",3]]],[11,"default","proc_macro2","",3,[[]]],[11,"cmp","","",7,[[["ident",3]],["ordering",4]]],[11,"eq","","",1,[[["delimiter",4]]]],[11,"eq","","",2,[[["spacing",4]]]],[11,"eq","","",7,[[["ident",3]]]],[11,"eq","","",7,[[]]],[11,"partial_cmp","","",7,[[["ident",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"from_str","","",3,[[],[["lexerror",3],["tokenstream",3],["result",4]]]],[11,"from_iter","","",3,[[["intoiterator",8]]]],[11,"from_iter","","",3,[[["intoiterator",8]]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]},\
"quote":{"doc":"github crates-io docs-rs","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["option",4],["span",3]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["option",4],["span",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rayon":{"doc":"Data-parallelism library that makes it easy to convert…","i":[[3,"FnContext","rayon","Provides the calling context to a closure called by…",null,null],[3,"ThreadBuilder","","Thread builder used for customization via…",null,null],[3,"ThreadPool","","Represents a user created thread-pool.",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new `ThreadPool` or to configure the…",null,null],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],["option",4]]],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[]]],[5,"scope","","Creates a \\\"fork-join\\\" scope `s` and invokes the closure…",null,[[]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"scope_fifo","","Creates a \\\"fork-join\\\" scope `s` with FIFO order, and…",null,[[]]],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"spawn","","Fires off a task into the Rayon threadpool in the \\\"static\\\"…",null,[[]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \\\"static\\\"…",null,[[]]],[0,"collections","","Parallel iterator types for standard collections",null,null],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps…",null,null],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a binary…",null,null],[3,"Drain","","Draining parallel iterator that moves out of a binary…",null,null],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",null,null],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash map",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",null,null],[3,"Drain","","Draining parallel iterator that moves out of a hash map,…",null,null],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash set",null,null],[3,"Drain","","Draining parallel iterator that moves out of a hash set,…",null,null],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a linked…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a linked list",null,null],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a…",null,null],[3,"Drain","","Draining parallel iterator that moves a range out of a…",null,null],[0,"iter","rayon","Traits for writing parallel programs using an…",null,null],[4,"Either","rayon::iter","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[3,"Chain","","`Chain` is an iterator that joins `b` after `a` in one…",null,null],[3,"Chunks","","`Chunks` is an iterator that groups elements of an…",null,null],[3,"Cloned","","`Cloned` is an iterator that clones the elements of an…",null,null],[3,"Copied","","`Copied` is an iterator that copies the elements of an…",null,null],[3,"Empty","","Iterator adaptor for the `empty()` function.",null,null],[3,"Enumerate","","`Enumerate` is an iterator that returns the current count…",null,null],[3,"Filter","","`Filter` takes a predicate `filter_op` and filters out…",null,null],[3,"FilterMap","","`FilterMap` creates an iterator that uses `filter_op` to…",null,null],[3,"FlatMap","","`FlatMap` maps each element to a parallel iterator, then…",null,null],[3,"FlatMapIter","","`FlatMapIter` maps each element to a serial iterator, then…",null,null],[3,"Flatten","","`Flatten` turns each element to a parallel iterator, then…",null,null],[3,"FlattenIter","","`FlattenIter` turns each element to a serial iterator,…",null,null],[3,"Fold","","`Fold` is an iterator that applies a function over an…",null,null],[3,"FoldWith","","`FoldWith` is an iterator that applies a function over an…",null,null],[3,"Inspect","","`Inspect` is an iterator that calls a function with a…",null,null],[3,"Interleave","","`Interleave` is an iterator that interleaves elements of…",null,null],[3,"InterleaveShortest","","`InterleaveShortest` is an iterator that works similarly…",null,null],[3,"Intersperse","","`Intersperse` is an iterator that inserts a particular…",null,null],[3,"MaxLen","","`MaxLen` is an iterator that imposes a maximum length on…",null,null],[3,"MinLen","","`MinLen` is an iterator that imposes a minimum length on…",null,null],[3,"Map","","`Map` is an iterator that transforms the elements of an…",null,null],[3,"MapInit","","`MapInit` is an iterator that transforms the elements of…",null,null],[3,"MapWith","","`MapWith` is an iterator that transforms the elements of…",null,null],[3,"MultiZip","","`MultiZip` is an iterator that zips up a tuple of parallel…",null,null],[3,"Once","","Iterator adaptor for the `once()` function.",null,null],[3,"PanicFuse","","`PanicFuse` is an adaptor that wraps an iterator with a…",null,null],[3,"IterBridge","","`IterBridge` is a parallel iterator that wraps a…",null,null],[3,"Positions","","`Positions` takes a predicate `predicate` and filters out…",null,null],[3,"Repeat","","Iterator adaptor for the `repeat()` function.",null,null],[3,"RepeatN","","Iterator adaptor for the `repeatn()` function.",null,null],[3,"Rev","","`Rev` is an iterator that produces elements in reverse…",null,null],[3,"Skip","","`Skip` is an iterator that skips over the first `n`…",null,null],[3,"Split","","`Split` is a parallel iterator using arbitrary data and a…",null,null],[3,"Take","","`Take` is an iterator that iterates over the first `n`…",null,null],[3,"TryFold","","`TryFold` is an iterator that applies a function over an…",null,null],[3,"TryFoldWith","","`TryFoldWith` is an iterator that applies a function over…",null,null],[3,"Update","","`Update` is an iterator that mutates the elements of an…",null,null],[3,"WhileSome","","`WhileSome` is an iterator that yields the `Some` elements…",null,null],[3,"Zip","","`Zip` is an iterator that zips up `a` and `b` into a…",null,null],[3,"ZipEq","","An `IndexedParallelIterator` that iterates over two…",null,null],[3,"StepBy","","`StepBy` is an iterator that skips `n` elements between…",null,null],[5,"empty","","Creates a parallel iterator that produces nothing.",null,[[],[["send",8],["empty",3]]]],[5,"once","","Creates a parallel iterator that produces an element…",null,[[["send",8]],[["send",8],["once",3]]]],[5,"repeat","","Creates a parallel iterator that endlessly repeats `elt`…",null,[[["clone",8],["send",8]],[["repeat",3],["clone",8],["send",8]]]],[5,"repeatn","","Creates a parallel iterator that produces `n` repeats of…",null,[[["clone",8],["send",8]],[["repeatn",3],["clone",8],["send",8]]]],[5,"split","","The `split` function takes arbitrary data and a closure…",null,[[],["split",3]]],[0,"plumbing","","Traits and functions used to implement parallel iteration.…",null,null],[5,"bridge","rayon::iter::plumbing","This helper function is used to \\\"connect\\\" a parallel…",null,[[]]],[5,"bridge_producer_consumer","","This helper function is used to \\\"connect\\\" a producer and a…",null,[[]]],[5,"bridge_unindexed","","A variant of `bridge_producer_consumer` where the producer…",null,[[]]],[8,"ProducerCallback","","The `ProducerCallback` trait is a kind of generic closure,…",null,null],[16,"Output","","The type of value returned by this callback. Analogous to…",1,null],[10,"callback","","Invokes the callback with the given producer as argument.…",1,[[]]],[8,"Producer","","A `Producer` is effectively a \\\"splittable `IntoIterator`\\\".…",null,null],[16,"Item","","The type of item that will be produced by this producer…",2,null],[16,"IntoIter","","The type of iterator we will become.",2,null],[10,"into_iter","","Convert `self` into an iterator; at this point, no more…",2,[[]]],[11,"min_len","","The minimum number of items that we will process…",2,[[]]],[11,"max_len","","The maximum number of items that we will process…",2,[[]]],[10,"split_at","","Split into two producers; one produces items `0..index`,…",2,[[]]],[11,"fold_with","","Iterate the producer, feeding each element to `folder`,…",2,[[]]],[8,"Consumer","","A consumer is effectively a generalized \\\"fold\\\" operation,…",null,null],[16,"Folder","","The type of folder that this consumer can be converted into.",3,null],[16,"Reducer","","The type of reducer that is produced if this consumer is…",3,null],[16,"Result","","The type of result that this consumer will ultimately…",3,null],[10,"split_at","","Divide the consumer into two consumers, one processing…",3,[[]]],[10,"into_folder","","Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full","","Hint whether this `Consumer` would like to stop processing…",3,[[]]],[8,"Folder","","The `Folder` trait encapsulates the standard fold…",null,null],[16,"Result","","The type of result that will ultimately be produced by the…",4,null],[10,"consume","","Consume next item and return new sequential state.",4,[[]]],[11,"consume_iter","","Consume items from the iterator until full, and return new…",4,[[]]],[10,"complete","","Finish consuming items, produce final result.",4,[[]]],[10,"full","","Hint whether this `Folder` would like to stop processing…",4,[[]]],[8,"Reducer","","The reducer is the final step of a `Consumer` -- after a…",null,null],[10,"reduce","","Reduce two final results into one; this is executed after…",5,[[]]],[8,"UnindexedConsumer","","A stateless consumer can be freely copied. These consumers…",null,null],[10,"split_off_left","","Splits off a \\\"left\\\" consumer and returns it. The `self`…",6,[[]]],[10,"to_reducer","","Creates a reducer that can be used to combine the results…",6,[[]]],[8,"UnindexedProducer","","A variant on `Producer` which does not know its exact…",null,null],[16,"Item","","The type of item returned by this producer.",7,null],[10,"split","","Split midway into a new producer if possible, otherwise…",7,[[]]],[10,"fold_with","","Iterate the producer, feeding each element to `folder`,…",7,[[]]],[11,"take","rayon::iter","Takes only `n` repeats of the element, similar to the…",8,[[],["repeatn",3]]],[11,"zip","","Iterates tuples, repeating the element with items from…",8,[[],[["repeatn",3],["zip",3]]]],[8,"ParallelBridge","","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Creates a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge",3]]],[8,"IntoParallelIterator","","`IntoParallelIterator` implements the conversion to a…",null,null],[16,"Iter","","The parallel iterator type that will be created.",10,null],[16,"Item","","The type of item that the parallel iterator will produce.",10,null],[10,"into_par_iter","","Converts `self` into a parallel iterator.",10,[[]]],[8,"IntoParallelRefIterator","","`IntoParallelRefIterator` implements the conversion to a…",null,null],[16,"Iter","","The type of the parallel iterator that will be returned.",11,null],[16,"Item","","The type of item that the parallel iterator will produce.…",11,null],[10,"par_iter","","Converts `self` into a parallel iterator.",11,[[]]],[8,"IntoParallelRefMutIterator","","`IntoParallelRefMutIterator` implements the conversion to…",null,null],[16,"Iter","","The type of iterator that will be created.",12,null],[16,"Item","","The type of item that will be produced; this is typically…",12,null],[10,"par_iter_mut","","Creates the parallel iterator from `self`.",12,[[]]],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",null,null],[16,"Item","","The type of item that this parallel iterator produces. For…",13,null],[11,"for_each","","Executes `OP` on each item produced by the iterator, in…",13,[[]]],[11,"for_each_with","","Executes `OP` on the given `init` value with each item…",13,[[]]],[11,"for_each_init","","Executes `OP` on a value returned by `init` with each item…",13,[[]]],[11,"try_for_each","","Executes a fallible `OP` on each item produced by the…",13,[[]]],[11,"try_for_each_with","","Executes a fallible `OP` on the given `init` value with…",13,[[]]],[11,"try_for_each_init","","Executes a fallible `OP` on a value returned by `init`…",13,[[]]],[11,"count","","Counts the number of items in this parallel iterator.",13,[[]]],[11,"map","","Applies `map_op` to each item of this iterator, producing…",13,[[],["map",3]]],[11,"map_with","","Applies `map_op` to the given `init` value with each item…",13,[[],["mapwith",3]]],[11,"map_init","","Applies `map_op` to a value returned by `init` with each…",13,[[],["mapinit",3]]],[11,"cloned","","Creates an iterator which clones all of its elements. This…",13,[[],["cloned",3]]],[11,"copied","","Creates an iterator which copies all of its elements. This…",13,[[],["copied",3]]],[11,"inspect","","Applies `inspect_op` to a reference to each item of this…",13,[[],["inspect",3]]],[11,"update","","Mutates each item of this iterator before yielding it.",13,[[],["update",3]]],[11,"filter","","Applies `filter_op` to each item of this iterator,…",13,[[],["filter",3]]],[11,"filter_map","","Applies `filter_op` to each item of this iterator to get…",13,[[],["filtermap",3]]],[11,"flat_map","","Applies `map_op` to each item of this iterator to get…",13,[[],["flatmap",3]]],[11,"flat_map_iter","","Applies `map_op` to each item of this iterator to get…",13,[[],["flatmapiter",3]]],[11,"flatten","","An adaptor that flattens parallel-iterable `Item`s into…",13,[[],["flatten",3]]],[11,"flatten_iter","","An adaptor that flattens serial-iterable `Item`s into one…",13,[[],["flatteniter",3]]],[11,"reduce","","Reduces the items in the iterator into one item using…",13,[[]]],[11,"reduce_with","","Reduces the items in the iterator into one item using…",13,[[],["option",4]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a…",13,[[]]],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a…",13,[[],["option",4]]],[11,"fold","","Parallel fold is similar to sequential fold except that…",13,[[],["fold",3]]],[11,"fold_with","","Applies `fold_op` to the given `init` value with each item…",13,[[],["foldwith",3]]],[11,"try_fold","","Performs a fallible parallel fold.",13,[[],["tryfold",3]]],[11,"try_fold_with","","Performs a fallible parallel fold with a cloneable `init`…",13,[[],["tryfoldwith",3]]],[11,"sum","","Sums up the items in the iterator.",13,[[]]],[11,"product","","Multiplies all the items in the iterator.",13,[[]]],[11,"min","","Computes the minimum of all the items in the iterator. If…",13,[[],["option",4]]],[11,"min_by","","Computes the minimum of all the items in the iterator with…",13,[[],["option",4]]],[11,"min_by_key","","Computes the item that yields the minimum value for the…",13,[[],["option",4]]],[11,"max","","Computes the maximum of all the items in the iterator. If…",13,[[],["option",4]]],[11,"max_by","","Computes the maximum of all the items in the iterator with…",13,[[],["option",4]]],[11,"max_by_key","","Computes the item that yields the maximum value for the…",13,[[],["option",4]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",13,[[],["chain",3]]],[11,"find_any","","Searches for some item in the parallel iterator that…",13,[[],["option",4]]],[11,"find_first","","Searches for the sequentially first item in the parallel…",13,[[],["option",4]]],[11,"find_last","","Searches for the sequentially last item in the parallel…",13,[[],["option",4]]],[11,"find_map_any","","Applies the given predicate to the items in the parallel…",13,[[],["option",4]]],[11,"find_map_first","","Applies the given predicate to the items in the parallel…",13,[[],["option",4]]],[11,"find_map_last","","Applies the given predicate to the items in the parallel…",13,[[],["option",4]]],[11,"any","","Searches for some item in the parallel iterator that…",13,[[]]],[11,"all","","Tests that every item in the parallel iterator matches the…",13,[[]]],[11,"while_some","","Creates an iterator over the `Some` items of this…",13,[[],["whilesome",3]]],[11,"panic_fuse","","Wraps an iterator with a fuse in case of panics, to halt…",13,[[],["panicfuse",3]]],[11,"collect","","Creates a fresh collection containing all the elements…",13,[[]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition","","Partitions the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition_map","","Partitions and maps the items of a parallel iterator into…",13,[[]]],[11,"intersperse","","Intersperses clones of an element between items of this…",13,[[],["intersperse",3]]],[10,"drive_unindexed","","Internal method used to define the behavior of this…",13,[[]]],[11,"opt_len","","Internal method used to define the behavior of this…",13,[[],["option",4]]],[8,"IndexedParallelIterator","","An iterator that supports \\\"random access\\\" to its data,…",null,null],[11,"collect_into_vec","","Collects the results of the iterator into the specified…",14,[[["vec",3]]]],[11,"unzip_into_vecs","","Unzips the results of the iterator into the specified…",14,[[["vec",3],["vec",3]]]],[11,"zip","","Iterates over tuples `(A, B)`, where the items `A` are…",14,[[],["zip",3]]],[11,"zip_eq","","The same as `Zip`, but requires that both iterators have…",14,[[],["zipeq",3]]],[11,"interleave","","Interleaves elements of this iterator and the other given…",14,[[],["interleave",3]]],[11,"interleave_shortest","","Interleaves elements of this iterator and the other given…",14,[[],["interleaveshortest",3]]],[11,"chunks","","Splits an iterator up into fixed-size chunks.",14,[[],["chunks",3]]],[11,"cmp","","Lexicographically compares the elements of this…",14,[[],["ordering",4]]],[11,"partial_cmp","","Lexicographically compares the elements of this…",14,[[],[["ordering",4],["option",4]]]],[11,"eq","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"ne","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"lt","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"le","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"gt","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"ge","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"enumerate","","Yields an index along with each item.",14,[[],["enumerate",3]]],[11,"step_by","","Creates an iterator that steps by the given amount",14,[[],["stepby",3]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",14,[[],["skip",3]]],[11,"take","","Creates an iterator that yields the first `n` elements.",14,[[],["take",3]]],[11,"position_any","","Searches for some item in the parallel iterator that…",14,[[],["option",4]]],[11,"position_first","","Searches for the sequentially first item in the parallel…",14,[[],["option",4]]],[11,"position_last","","Searches for the sequentially last item in the parallel…",14,[[],["option",4]]],[11,"positions","","Searches for items in the parallel iterator that match the…",14,[[],["positions",3]]],[11,"rev","","Produces a new iterator with the elements of this iterator…",14,[[],["rev",3]]],[11,"with_min_len","","Sets the minimum length of iterators desired to process in…",14,[[],["minlen",3]]],[11,"with_max_len","","Sets the maximum length of iterators desired to process in…",14,[[],["maxlen",3]]],[10,"len","","Produces an exact count of how many items this iterator…",14,[[]]],[10,"drive","","Internal method used to define the behavior of this…",14,[[["consumer",8]]]],[10,"with_producer","","Internal method used to define the behavior of this…",14,[[["producercallback",8]]]],[8,"FromParallelIterator","","`FromParallelIterator` implements the creation of a…",null,null],[10,"from_par_iter","","Creates an instance of the collection from the parallel…",15,[[]]],[8,"ParallelExtend","","`ParallelExtend` extends an existing collection with items…",null,null],[10,"par_extend","","Extends an instance of the collection with the elements…",16,[[]]],[8,"ParallelDrainFull","","`ParallelDrainFull` creates a parallel iterator that moves…",null,null],[16,"Iter","","The draining parallel iterator type that will be created.",17,null],[16,"Item","","The type of item that the parallel iterator will produce.…",17,null],[10,"par_drain","","Returns a draining parallel iterator over an entire…",17,[[]]],[8,"ParallelDrainRange","","`ParallelDrainRange` creates a parallel iterator that…",null,null],[16,"Iter","","The draining parallel iterator type that will be created.",18,null],[16,"Item","","The type of item that the parallel iterator will produce.…",18,null],[10,"par_drain","","Returns a draining parallel iterator over a range of the…",18,[[["rangebounds",8]]]],[0,"option","rayon","Parallel iterator types for options",null,null],[3,"IntoIter","rayon::option","A parallel iterator over the value in `Some` variant of an…",null,null],[3,"Iter","","A parallel iterator over a reference to the `Some` variant…",null,null],[3,"IterMut","","A parallel iterator over a mutable reference to the `Some`…",null,null],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",null,null],[8,"ParallelBridge","rayon::prelude","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Creates a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge",3]]],[0,"range","rayon","Parallel iterator types for ranges, the type for values…",null,null],[3,"Iter","rayon::range","Parallel iterator over a range, implemented for all…",null,null],[0,"range_inclusive","rayon","Parallel iterator types for inclusive ranges, the type for…",null,null],[3,"Iter","rayon::range_inclusive","Parallel iterator over an inclusive range, implemented for…",null,null],[0,"result","rayon","Parallel iterator types for results",null,null],[3,"IntoIter","rayon::result","Parallel iterator over a result",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a result",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a result",null,null],[0,"slice","rayon","Parallel iterator types for slices",null,null],[3,"Iter","rayon::slice","Parallel iterator over immutable items in a slice",null,null],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks of…",null,null],[3,"ChunksExact","","Parallel iterator over immutable non-overlapping chunks of…",null,null],[3,"Windows","","Parallel iterator over immutable overlapping windows of a…",null,null],[3,"IterMut","","Parallel iterator over mutable items in a slice",null,null],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of a…",null,null],[3,"ChunksExactMut","","Parallel iterator over mutable non-overlapping chunks of a…",null,null],[3,"Split","","Parallel iterator over slices separated by a predicate",null,null],[3,"SplitMut","","Parallel iterator over mutable slices separated by a…",null,null],[8,"ParallelSlice","","Parallel extensions for slices.",null,null],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the rest…",19,[[]]],[11,"par_split","","Returns a parallel iterator over subslices separated by…",19,[[],["split",3]]],[11,"par_windows","","Returns a parallel iterator over all contiguous windows of…",19,[[],["windows",3]]],[11,"par_chunks","","Returns a parallel iterator over at most `chunk_size`…",19,[[],["chunks",3]]],[11,"par_chunks_exact","","Returns a parallel iterator over `chunk_size` elements of…",19,[[],["chunksexact",3]]],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",null,null],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement…",20,[[]]],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices…",20,[[],["splitmut",3]]],[11,"par_chunks_mut","","Returns a parallel iterator over at most `chunk_size`…",20,[[],["chunksmut",3]]],[11,"par_chunks_exact_mut","","Returns a parallel iterator over `chunk_size` elements of…",20,[[],["chunksexactmut",3]]],[11,"par_sort","","Sorts the slice in parallel.",20,[[]]],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",20,[[]]],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction function.",20,[[]]],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the…",20,[[]]],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function,…",20,[[]]],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction…",20,[[]]],[11,"remainder","","Return the remainder of the original slice that is not…",21,[[]]],[11,"into_remainder","","Return the remainder of the original slice that is not…",22,[[]]],[11,"remainder","","Return the remainder of the original slice that is not…",22,[[]]],[11,"take_remainder","","Return the remainder of the original slice that is not…",22,[[]]],[0,"str","rayon","Parallel iterator types for strings",null,null],[3,"Chars","rayon::str","Parallel iterator over the characters of a string",null,null],[3,"CharIndices","","Parallel iterator over the characters of a string, with…",null,null],[3,"Bytes","","Parallel iterator over the bytes of a string",null,null],[3,"EncodeUtf16","","Parallel iterator over a string encoded as UTF-16",null,null],[3,"Split","","Parallel iterator over substrings separated by a pattern",null,null],[3,"SplitTerminator","","Parallel iterator over substrings separated by a…",null,null],[3,"Lines","","Parallel iterator over lines in a string",null,null],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",null,null],[3,"Matches","","Parallel iterator over substrings that match a pattern",null,null],[3,"MatchIndices","","Parallel iterator over substrings that match a pattern,…",null,null],[8,"ParallelString","","Parallel extensions for strings.",null,null],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement…",23,[[]]],[11,"par_chars","","Returns a parallel iterator over the characters of a string.",23,[[],["chars",3]]],[11,"par_char_indices","","Returns a parallel iterator over the characters of a…",23,[[],["charindices",3]]],[11,"par_bytes","","Returns a parallel iterator over the bytes of a string.",23,[[],["bytes",3]]],[11,"par_encode_utf16","","Returns a parallel iterator over a string encoded as UTF-16.",23,[[],["encodeutf16",3]]],[11,"par_split","","Returns a parallel iterator over substrings separated by a…",23,[[["pattern",8]],[["pattern",8],["split",3]]]],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by…",23,[[["pattern",8]],[["splitterminator",3],["pattern",8]]]],[11,"par_lines","","Returns a parallel iterator over the lines of a string,…",23,[[],["lines",3]]],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a…",23,[[],["splitwhitespace",3]]],[11,"par_matches","","Returns a parallel iterator over substrings that match a…",23,[[["pattern",8]],[["matches",3],["pattern",8]]]],[11,"par_match_indices","","Returns a parallel iterator over substrings that match a…",23,[[["pattern",8]],[["matchindices",3],["pattern",8]]]],[0,"string","rayon","This module contains the parallel iterator types for owned…",null,null],[3,"Drain","rayon::string","Draining parallel iterator that moves a range of…",null,null],[0,"vec","rayon","Parallel iterator types for vectors (`Vec<T>`)",null,null],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",null,null],[3,"Drain","","Draining parallel iterator that moves a range out of a…",null,null],[11,"from","rayon","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"into_par_iter","rayon::collections::binary_heap","",31,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"into_par_iter","","",32,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"into_par_iter","","",33,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"into_par_iter","rayon::collections::btree_map","",34,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"into_par_iter","","",35,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"into_par_iter","","",36,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"into_par_iter","rayon::collections::btree_set","",37,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"into_par_iter","","",38,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"into_par_iter","rayon::collections::hash_map","",39,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"into_par_iter","","",40,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"into_par_iter","","",41,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"into_par_iter","","",42,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"into_par_iter","rayon::collections::hash_set","",43,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"into_par_iter","","",44,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"into_par_iter","","",45,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"into_par_iter","rayon::collections::linked_list","",46,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"into_par_iter","","",47,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"into_par_iter","","",48,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"into_par_iter","rayon::collections::vec_deque","",49,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"into_par_iter","","",50,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"into_par_iter","","",51,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"into_par_iter","","",52,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"into_par_iter","rayon::iter","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"into_par_iter","","",53,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"into_par_iter","","",54,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"into_par_iter","","",55,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"into_par_iter","","",56,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"into_par_iter","","",57,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"into_par_iter","","",58,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"into_par_iter","","",59,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"into_par_iter","","",60,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"into_par_iter","","",61,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"into_par_iter","","",62,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"into_par_iter","","",63,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"into_par_iter","","",64,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"into_par_iter","","",65,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"into_par_iter","","",66,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"into_par_iter","","",67,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"into_par_iter","","",68,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"into_par_iter","","",69,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"into_par_iter","","",70,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"into_par_iter","","",71,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"into_par_iter","","",72,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"into_par_iter","","",73,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"into_par_iter","","",74,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"init","","",74,[[]]],[11,"deref","","",74,[[]]],[11,"deref_mut","","",74,[[]]],[11,"drop","","",74,[[]]],[11,"into_par_iter","","",75,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"init","","",75,[[]]],[11,"deref","","",75,[[]]],[11,"deref_mut","","",75,[[]]],[11,"drop","","",75,[[]]],[11,"into_par_iter","","",76,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"into_par_iter","","",77,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"init","","",77,[[]]],[11,"deref","","",77,[[]]],[11,"deref_mut","","",77,[[]]],[11,"drop","","",77,[[]]],[11,"into_par_iter","","",78,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"into_par_iter","","",79,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"init","","",79,[[]]],[11,"deref","","",79,[[]]],[11,"deref_mut","","",79,[[]]],[11,"drop","","",79,[[]]],[11,"into_par_iter","","",80,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"init","","",80,[[]]],[11,"deref","","",80,[[]]],[11,"deref_mut","","",80,[[]]],[11,"drop","","",80,[[]]],[11,"into_par_iter","","",8,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"into_par_iter","","",81,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"init","","",81,[[]]],[11,"deref","","",81,[[]]],[11,"deref_mut","","",81,[[]]],[11,"drop","","",81,[[]]],[11,"into_par_iter","","",82,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"init","","",82,[[]]],[11,"deref","","",82,[[]]],[11,"deref_mut","","",82,[[]]],[11,"drop","","",82,[[]]],[11,"into_par_iter","","",83,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"init","","",83,[[]]],[11,"deref","","",83,[[]]],[11,"deref_mut","","",83,[[]]],[11,"drop","","",83,[[]]],[11,"into_par_iter","","",84,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"init","","",84,[[]]],[11,"deref","","",84,[[]]],[11,"deref_mut","","",84,[[]]],[11,"drop","","",84,[[]]],[11,"into_par_iter","","",85,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"init","","",85,[[]]],[11,"deref","","",85,[[]]],[11,"deref_mut","","",85,[[]]],[11,"drop","","",85,[[]]],[11,"into_par_iter","","",86,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"init","","",86,[[]]],[11,"deref","","",86,[[]]],[11,"deref_mut","","",86,[[]]],[11,"drop","","",86,[[]]],[11,"into_par_iter","","",87,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"init","","",87,[[]]],[11,"deref","","",87,[[]]],[11,"deref_mut","","",87,[[]]],[11,"drop","","",87,[[]]],[11,"into_par_iter","","",88,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"init","","",88,[[]]],[11,"deref","","",88,[[]]],[11,"deref_mut","","",88,[[]]],[11,"drop","","",88,[[]]],[11,"into_par_iter","","",89,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"init","","",89,[[]]],[11,"deref","","",89,[[]]],[11,"deref_mut","","",89,[[]]],[11,"drop","","",89,[[]]],[11,"into_par_iter","","",90,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"init","","",90,[[]]],[11,"deref","","",90,[[]]],[11,"deref_mut","","",90,[[]]],[11,"drop","","",90,[[]]],[11,"into_par_iter","","",91,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"init","","",91,[[]]],[11,"deref","","",91,[[]]],[11,"deref_mut","","",91,[[]]],[11,"drop","","",91,[[]]],[11,"into_par_iter","","",92,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"init","","",92,[[]]],[11,"deref","","",92,[[]]],[11,"deref_mut","","",92,[[]]],[11,"drop","","",92,[[]]],[11,"into_par_iter","rayon::option","",93,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"init","","",93,[[]]],[11,"deref","","",93,[[]]],[11,"deref_mut","","",93,[[]]],[11,"drop","","",93,[[]]],[11,"into_par_iter","","",94,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"init","","",94,[[]]],[11,"deref","","",94,[[]]],[11,"deref_mut","","",94,[[]]],[11,"drop","","",94,[[]]],[11,"into_par_iter","","",95,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"init","","",95,[[]]],[11,"deref","","",95,[[]]],[11,"deref_mut","","",95,[[]]],[11,"drop","","",95,[[]]],[11,"into_par_iter","rayon::range","",96,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"init","","",96,[[]]],[11,"deref","","",96,[[]]],[11,"deref_mut","","",96,[[]]],[11,"drop","","",96,[[]]],[11,"into_par_iter","rayon::range_inclusive","",97,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"init","","",97,[[]]],[11,"deref","","",97,[[]]],[11,"deref_mut","","",97,[[]]],[11,"drop","","",97,[[]]],[11,"into_par_iter","rayon::result","",98,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"init","","",98,[[]]],[11,"deref","","",98,[[]]],[11,"deref_mut","","",98,[[]]],[11,"drop","","",98,[[]]],[11,"into_par_iter","","",99,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"init","","",99,[[]]],[11,"deref","","",99,[[]]],[11,"deref_mut","","",99,[[]]],[11,"drop","","",99,[[]]],[11,"into_par_iter","","",100,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"init","","",100,[[]]],[11,"deref","","",100,[[]]],[11,"deref_mut","","",100,[[]]],[11,"drop","","",100,[[]]],[11,"into_par_iter","rayon::slice","",101,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"init","","",101,[[]]],[11,"deref","","",101,[[]]],[11,"deref_mut","","",101,[[]]],[11,"drop","","",101,[[]]],[11,"into_par_iter","","",102,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"init","","",102,[[]]],[11,"deref","","",102,[[]]],[11,"deref_mut","","",102,[[]]],[11,"drop","","",102,[[]]],[11,"into_par_iter","","",21,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"into_par_iter","","",103,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"init","","",103,[[]]],[11,"deref","","",103,[[]]],[11,"deref_mut","","",103,[[]]],[11,"drop","","",103,[[]]],[11,"into_par_iter","","",104,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"init","","",104,[[]]],[11,"deref","","",104,[[]]],[11,"deref_mut","","",104,[[]]],[11,"drop","","",104,[[]]],[11,"into_par_iter","","",105,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"init","","",105,[[]]],[11,"deref","","",105,[[]]],[11,"deref_mut","","",105,[[]]],[11,"drop","","",105,[[]]],[11,"into_par_iter","","",22,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"into_par_iter","","",106,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"init","","",106,[[]]],[11,"deref","","",106,[[]]],[11,"deref_mut","","",106,[[]]],[11,"drop","","",106,[[]]],[11,"into_par_iter","","",107,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"init","","",107,[[]]],[11,"deref","","",107,[[]]],[11,"deref_mut","","",107,[[]]],[11,"drop","","",107,[[]]],[11,"into_par_iter","rayon::str","",108,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"init","","",108,[[]]],[11,"deref","","",108,[[]]],[11,"deref_mut","","",108,[[]]],[11,"drop","","",108,[[]]],[11,"into_par_iter","","",109,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"init","","",109,[[]]],[11,"deref","","",109,[[]]],[11,"deref_mut","","",109,[[]]],[11,"drop","","",109,[[]]],[11,"into_par_iter","","",110,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"init","","",110,[[]]],[11,"deref","","",110,[[]]],[11,"deref_mut","","",110,[[]]],[11,"drop","","",110,[[]]],[11,"into_par_iter","","",111,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"init","","",111,[[]]],[11,"deref","","",111,[[]]],[11,"deref_mut","","",111,[[]]],[11,"drop","","",111,[[]]],[11,"into_par_iter","","",112,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"init","","",112,[[]]],[11,"deref","","",112,[[]]],[11,"deref_mut","","",112,[[]]],[11,"drop","","",112,[[]]],[11,"into_par_iter","","",113,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"init","","",113,[[]]],[11,"deref","","",113,[[]]],[11,"deref_mut","","",113,[[]]],[11,"drop","","",113,[[]]],[11,"into_par_iter","","",114,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"init","","",114,[[]]],[11,"deref","","",114,[[]]],[11,"deref_mut","","",114,[[]]],[11,"drop","","",114,[[]]],[11,"into_par_iter","","",115,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"init","","",115,[[]]],[11,"deref","","",115,[[]]],[11,"deref_mut","","",115,[[]]],[11,"drop","","",115,[[]]],[11,"into_par_iter","","",116,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"init","","",116,[[]]],[11,"deref","","",116,[[]]],[11,"deref_mut","","",116,[[]]],[11,"drop","","",116,[[]]],[11,"into_par_iter","","",117,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"init","","",117,[[]]],[11,"deref","","",117,[[]]],[11,"deref_mut","","",117,[[]]],[11,"drop","","",117,[[]]],[11,"into_par_iter","rayon::string","",118,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"init","","",118,[[]]],[11,"deref","","",118,[[]]],[11,"deref_mut","","",118,[[]]],[11,"drop","","",118,[[]]],[11,"into_par_iter","rayon::vec","",119,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"init","","",119,[[]]],[11,"deref","","",119,[[]]],[11,"deref_mut","","",119,[[]]],[11,"drop","","",119,[[]]],[11,"into_par_iter","","",120,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"init","","",120,[[]]],[11,"deref","","",120,[[]]],[11,"deref_mut","","",120,[[]]],[11,"drop","","",120,[[]]],[11,"extend","rayon::iter","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"into","","",0,[[],["result",4]]],[11,"clone","","",0,[[],["either",4]]],[11,"deref_mut","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"from","","",0,[[["result",4]],["either",4]]],[11,"cmp","","",0,[[["either",4]],["ordering",4]]],[11,"eq","","",0,[[["either",4]]]],[11,"ne","","",0,[[["either",4]]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"fold","","",0,[[]]],[11,"count","","",0,[[]]],[11,"last","","",0,[[],["option",4]]],[11,"nth","","",0,[[],["option",4]]],[11,"collect","","",0,[[]]],[11,"all","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next_back","","",0,[[],["option",4]]],[11,"partial_cmp","","",0,[[["either",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["either",4]]]],[11,"le","","",0,[[["either",4]]]],[11,"gt","","",0,[[["either",4]]]],[11,"ge","","",0,[[["either",4]]]],[11,"drop","rayon","",26,[[]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",27,[[]]],[11,"source","","",27,[[],[["option",4],["error",8]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",28,[[],[["defaultspawn",3],["threadpoolbuilder",3]]]],[11,"drive_unindexed","rayon::collections::binary_heap","",31,[[]]],[11,"opt_len","","",31,[[],["option",4]]],[11,"drive_unindexed","","",32,[[]]],[11,"opt_len","","",32,[[],["option",4]]],[11,"drive_unindexed","","",33,[[]]],[11,"opt_len","","",33,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::btree_map","",34,[[]]],[11,"opt_len","","",34,[[],["option",4]]],[11,"drive_unindexed","","",35,[[]]],[11,"opt_len","","",35,[[],["option",4]]],[11,"drive_unindexed","","",36,[[]]],[11,"opt_len","","",36,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::btree_set","",37,[[]]],[11,"opt_len","","",37,[[],["option",4]]],[11,"drive_unindexed","","",38,[[]]],[11,"opt_len","","",38,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::hash_map","",39,[[]]],[11,"opt_len","","",39,[[],["option",4]]],[11,"drive_unindexed","","",40,[[]]],[11,"opt_len","","",40,[[],["option",4]]],[11,"drive_unindexed","","",41,[[]]],[11,"opt_len","","",41,[[],["option",4]]],[11,"drive_unindexed","","",42,[[]]],[11,"opt_len","","",42,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::hash_set","",43,[[]]],[11,"opt_len","","",43,[[],["option",4]]],[11,"drive_unindexed","","",44,[[]]],[11,"opt_len","","",44,[[],["option",4]]],[11,"drive_unindexed","","",45,[[]]],[11,"opt_len","","",45,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::linked_list","",46,[[]]],[11,"opt_len","","",46,[[],["option",4]]],[11,"drive_unindexed","","",47,[[]]],[11,"opt_len","","",47,[[],["option",4]]],[11,"drive_unindexed","","",48,[[]]],[11,"opt_len","","",48,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::vec_deque","",49,[[]]],[11,"opt_len","","",49,[[],["option",4]]],[11,"drive_unindexed","","",50,[[]]],[11,"opt_len","","",50,[[],["option",4]]],[11,"drive_unindexed","","",51,[[]]],[11,"opt_len","","",51,[[],["option",4]]],[11,"drive_unindexed","","",52,[[]]],[11,"opt_len","","",52,[[],["option",4]]],[11,"drive_unindexed","rayon::iter","",53,[[]]],[11,"opt_len","","",53,[[],["option",4]]],[11,"drive_unindexed","","",54,[[]]],[11,"opt_len","","",54,[[],["option",4]]],[11,"drive_unindexed","","",55,[[]]],[11,"opt_len","","",55,[[],["option",4]]],[11,"drive_unindexed","","",56,[[]]],[11,"opt_len","","",56,[[],["option",4]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],["option",4]]],[11,"drive_unindexed","","",58,[[]]],[11,"opt_len","","",58,[[],["option",4]]],[11,"drive_unindexed","","",59,[[]]],[11,"drive_unindexed","","",60,[[]]],[11,"drive_unindexed","","",61,[[]]],[11,"drive_unindexed","","",62,[[]]],[11,"drive_unindexed","","",63,[[]]],[11,"drive_unindexed","","",64,[[]]],[11,"drive_unindexed","","",65,[[]]],[11,"drive_unindexed","","",66,[[]]],[11,"drive_unindexed","","",67,[[]]],[11,"opt_len","","",67,[[],["option",4]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],["option",4]]],[11,"drive_unindexed","","",69,[[]]],[11,"opt_len","","",69,[[],["option",4]]],[11,"drive_unindexed","","",70,[[]]],[11,"opt_len","","",70,[[],["option",4]]],[11,"drive_unindexed","","",72,[[]]],[11,"opt_len","","",72,[[],["option",4]]],[11,"drive_unindexed","","",71,[[]]],[11,"opt_len","","",71,[[],["option",4]]],[11,"drive_unindexed","","",73,[[]]],[11,"opt_len","","",73,[[],["option",4]]],[11,"drive_unindexed","","",75,[[]]],[11,"opt_len","","",75,[[],["option",4]]],[11,"drive_unindexed","","",74,[[]]],[11,"opt_len","","",74,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",77,[[]]],[11,"opt_len","","",77,[[],["option",4]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],["option",4]]],[11,"drive_unindexed","","",79,[[]]],[11,"drive_unindexed","","",80,[[]]],[11,"drive_unindexed","","",8,[[]]],[11,"drive_unindexed","","",81,[[]]],[11,"opt_len","","",81,[[],["option",4]]],[11,"drive_unindexed","","",82,[[]]],[11,"opt_len","","",82,[[],["option",4]]],[11,"drive_unindexed","","",83,[[]]],[11,"opt_len","","",83,[[],["option",4]]],[11,"drive_unindexed","","",84,[[]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","","",86,[[]]],[11,"drive_unindexed","","",87,[[]]],[11,"drive_unindexed","","",88,[[]]],[11,"opt_len","","",88,[[],["option",4]]],[11,"drive_unindexed","","",89,[[]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],["option",4]]],[11,"drive_unindexed","","",91,[[]]],[11,"opt_len","","",91,[[],["option",4]]],[11,"drive_unindexed","","",92,[[]]],[11,"opt_len","","",92,[[],["option",4]]],[11,"drive_unindexed","rayon::option","",93,[[]]],[11,"opt_len","","",93,[[],["option",4]]],[11,"drive_unindexed","","",94,[[]]],[11,"opt_len","","",94,[[],["option",4]]],[11,"drive_unindexed","","",95,[[]]],[11,"opt_len","","",95,[[],["option",4]]],[11,"drive_unindexed","rayon::range","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","rayon::range_inclusive","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","rayon::result","",98,[[]]],[11,"opt_len","","",98,[[],["option",4]]],[11,"drive_unindexed","","",99,[[]]],[11,"opt_len","","",99,[[],["option",4]]],[11,"drive_unindexed","","",100,[[]]],[11,"opt_len","","",100,[[],["option",4]]],[11,"drive_unindexed","rayon::slice","",101,[[]]],[11,"opt_len","","",101,[[],["option",4]]],[11,"drive_unindexed","","",102,[[]]],[11,"opt_len","","",102,[[],["option",4]]],[11,"drive_unindexed","","",21,[[]]],[11,"opt_len","","",21,[[],["option",4]]],[11,"drive_unindexed","","",103,[[]]],[11,"opt_len","","",103,[[],["option",4]]],[11,"drive_unindexed","","",104,[[]]],[11,"opt_len","","",104,[[],["option",4]]],[11,"drive_unindexed","","",105,[[]]],[11,"opt_len","","",105,[[],["option",4]]],[11,"drive_unindexed","","",22,[[]]],[11,"opt_len","","",22,[[],["option",4]]],[11,"drive_unindexed","","",106,[[]]],[11,"drive_unindexed","","",107,[[]]],[11,"drive_unindexed","rayon::str","",108,[[]]],[11,"drive_unindexed","","",109,[[]]],[11,"drive_unindexed","","",110,[[]]],[11,"drive_unindexed","","",111,[[]]],[11,"drive_unindexed","","",112,[[]]],[11,"drive_unindexed","","",113,[[]]],[11,"drive_unindexed","","",114,[[]]],[11,"drive_unindexed","","",115,[[]]],[11,"drive_unindexed","","",116,[[]]],[11,"drive_unindexed","","",117,[[]]],[11,"drive_unindexed","rayon::string","",118,[[]]],[11,"drive_unindexed","rayon::vec","",119,[[]]],[11,"opt_len","","",119,[[],["option",4]]],[11,"drive_unindexed","","",120,[[]]],[11,"opt_len","","",120,[[],["option",4]]],[11,"drive_unindexed","rayon::iter","",0,[[]]],[11,"opt_len","","",0,[[],["option",4]]],[11,"drive","rayon::collections::binary_heap","",31,[[]]],[11,"len","","",31,[[]]],[11,"with_producer","","",31,[[]]],[11,"drive","","",32,[[]]],[11,"len","","",32,[[]]],[11,"with_producer","","",32,[[]]],[11,"drive","","",33,[[]]],[11,"len","","",33,[[]]],[11,"with_producer","","",33,[[]]],[11,"drive","rayon::collections::vec_deque","",49,[[]]],[11,"len","","",49,[[]]],[11,"with_producer","","",49,[[]]],[11,"drive","","",50,[[]]],[11,"len","","",50,[[]]],[11,"with_producer","","",50,[[]]],[11,"drive","","",51,[[]]],[11,"len","","",51,[[]]],[11,"with_producer","","",51,[[]]],[11,"drive","","",52,[[]]],[11,"len","","",52,[[]]],[11,"with_producer","","",52,[[]]],[11,"drive","rayon::iter","",53,[[]]],[11,"len","","",53,[[]]],[11,"with_producer","","",53,[[]]],[11,"drive","","",54,[[]]],[11,"len","","",54,[[]]],[11,"with_producer","","",54,[[]]],[11,"drive","","",55,[[]]],[11,"len","","",55,[[]]],[11,"with_producer","","",55,[[]]],[11,"drive","","",56,[[]]],[11,"len","","",56,[[]]],[11,"with_producer","","",56,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",58,[[["consumer",8]]]],[11,"len","","",58,[[]]],[11,"with_producer","","",58,[[]]],[11,"drive","","",67,[[]]],[11,"len","","",67,[[]]],[11,"with_producer","","",67,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",69,[[]]],[11,"len","","",69,[[]]],[11,"with_producer","","",69,[[]]],[11,"drive","","",70,[[]]],[11,"len","","",70,[[]]],[11,"with_producer","","",70,[[]]],[11,"drive","","",72,[[["consumer",8]]]],[11,"len","","",72,[[]]],[11,"with_producer","","",72,[[]]],[11,"drive","","",71,[[["consumer",8]]]],[11,"len","","",71,[[]]],[11,"with_producer","","",71,[[]]],[11,"drive","","",73,[[]]],[11,"len","","",73,[[]]],[11,"with_producer","","",73,[[]]],[11,"drive","","",75,[[]]],[11,"len","","",75,[[]]],[11,"with_producer","","",75,[[]]],[11,"drive","","",74,[[]]],[11,"len","","",74,[[]]],[11,"with_producer","","",74,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",77,[[]]],[11,"len","","",77,[[]]],[11,"with_producer","","",77,[[]]],[11,"drive","","",78,[[]]],[11,"len","","",78,[[]]],[11,"with_producer","","",78,[[]]],[11,"drive","","",81,[[]]],[11,"with_producer","","",81,[[]]],[11,"len","","",81,[[]]],[11,"drive","","",82,[[["consumer",8]]]],[11,"len","","",82,[[]]],[11,"with_producer","","",82,[[]]],[11,"len","","",83,[[]]],[11,"drive","","",83,[[["consumer",8]]]],[11,"with_producer","","",83,[[]]],[11,"len","","",85,[[]]],[11,"drive","","",85,[[["consumer",8]]]],[11,"with_producer","","",85,[[]]],[11,"drive","","",88,[[]]],[11,"len","","",88,[[]]],[11,"with_producer","","",88,[[]]],[11,"drive","","",90,[[]]],[11,"len","","",90,[[]]],[11,"with_producer","","",90,[[]]],[11,"drive","","",91,[[]]],[11,"len","","",91,[[]]],[11,"with_producer","","",91,[[]]],[11,"drive","","",92,[[["consumer",8]]]],[11,"len","","",92,[[]]],[11,"with_producer","","",92,[[]]],[11,"drive","rayon::option","",93,[[]]],[11,"len","","",93,[[]]],[11,"with_producer","","",93,[[]]],[11,"drive","","",94,[[]]],[11,"len","","",94,[[]]],[11,"with_producer","","",94,[[]]],[11,"drive","","",95,[[]]],[11,"len","","",95,[[]]],[11,"with_producer","","",95,[[]]],[11,"drive","rayon::range","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","rayon::range_inclusive","",97,[[]]],[11,"len","","",97,[[]]],[11,"with_producer","","",97,[[]]],[11,"drive","","",97,[[]]],[11,"len","","",97,[[]]],[11,"with_producer","","",97,[[]]],[11,"drive","","",97,[[]]],[11,"len","","",97,[[]]],[11,"with_producer","","",97,[[]]],[11,"drive","","",97,[[]]],[11,"len","","",97,[[]]],[11,"with_producer","","",97,[[]]],[11,"drive","","",97,[[]]],[11,"len","","",97,[[]]],[11,"with_producer","","",97,[[]]],[11,"drive","rayon::result","",98,[[]]],[11,"len","","",98,[[]]],[11,"with_producer","","",98,[[]]],[11,"drive","","",99,[[]]],[11,"len","","",99,[[]]],[11,"with_producer","","",99,[[]]],[11,"drive","","",100,[[]]],[11,"len","","",100,[[]]],[11,"with_producer","","",100,[[]]],[11,"drive","rayon::slice","",101,[[]]],[11,"len","","",101,[[]]],[11,"with_producer","","",101,[[]]],[11,"drive","","",102,[[]]],[11,"len","","",102,[[]]],[11,"with_producer","","",102,[[]]],[11,"drive","","",21,[[]]],[11,"len","","",21,[[]]],[11,"with_producer","","",21,[[]]],[11,"drive","","",103,[[]]],[11,"len","","",103,[[]]],[11,"with_producer","","",103,[[]]],[11,"drive","","",104,[[]]],[11,"len","","",104,[[]]],[11,"with_producer","","",104,[[]]],[11,"drive","","",105,[[]]],[11,"len","","",105,[[]]],[11,"with_producer","","",105,[[]]],[11,"drive","","",22,[[]]],[11,"len","","",22,[[]]],[11,"with_producer","","",22,[[]]],[11,"drive","rayon::vec","",119,[[]]],[11,"len","","",119,[[]]],[11,"with_producer","","",119,[[]]],[11,"drive","","",120,[[]]],[11,"len","","",120,[[]]],[11,"with_producer","","",120,[[]]],[11,"drive","rayon::iter","",0,[[]]],[11,"len","","",0,[[]]],[11,"with_producer","","",0,[[]]],[11,"par_extend","","",0,[[]]],[11,"drop","rayon::collections::binary_heap","",33,[[]]],[11,"drop","rayon::collections::vec_deque","",52,[[]]],[11,"drop","rayon::string","",118,[[]]],[11,"drop","rayon::vec","",120,[[]]],[11,"clone","rayon::collections::binary_heap","",31,[[],["intoiter",3]]],[11,"clone","","",32,[[]]],[11,"clone","rayon::collections::btree_map","",35,[[]]],[11,"clone","rayon::collections::btree_set","",38,[[]]],[11,"clone","rayon::collections::hash_map","",40,[[]]],[11,"clone","rayon::collections::hash_set","",44,[[]]],[11,"clone","rayon::collections::linked_list","",46,[[],["intoiter",3]]],[11,"clone","","",47,[[]]],[11,"clone","rayon::collections::vec_deque","",49,[[],["intoiter",3]]],[11,"clone","","",50,[[]]],[11,"clone","rayon::iter","",53,[[],["chain",3]]],[11,"clone","","",54,[[],["chunks",3]]],[11,"clone","","",55,[[],["cloned",3]]],[11,"clone","","",56,[[],["copied",3]]],[11,"clone","","",57,[[]]],[11,"clone","","",58,[[],["enumerate",3]]],[11,"clone","","",59,[[],["filter",3]]],[11,"clone","","",60,[[],["filtermap",3]]],[11,"clone","","",61,[[],["flatmap",3]]],[11,"clone","","",62,[[],["flatmapiter",3]]],[11,"clone","","",63,[[],["flatten",3]]],[11,"clone","","",64,[[],["flatteniter",3]]],[11,"clone","","",65,[[],["fold",3]]],[11,"clone","","",66,[[],["foldwith",3]]],[11,"clone","","",67,[[],["inspect",3]]],[11,"clone","","",68,[[],["interleave",3]]],[11,"clone","","",69,[[],["interleaveshortest",3]]],[11,"clone","","",70,[[],["intersperse",3]]],[11,"clone","","",72,[[],["minlen",3]]],[11,"clone","","",71,[[],["maxlen",3]]],[11,"clone","","",73,[[],["map",3]]],[11,"clone","","",75,[[],["mapwith",3]]],[11,"clone","","",74,[[],["mapinit",3]]],[11,"clone","","",76,[[],["multizip",3]]],[11,"clone","","",77,[[],["once",3]]],[11,"clone","","",78,[[],["panicfuse",3]]],[11,"clone","","",79,[[],["iterbridge",3]]],[11,"clone","","",80,[[],["positions",3]]],[11,"clone","","",8,[[],["repeat",3]]],[11,"clone","","",81,[[],["repeatn",3]]],[11,"clone","","",82,[[],["rev",3]]],[11,"clone","","",83,[[],["skip",3]]],[11,"clone","","",84,[[],["split",3]]],[11,"clone","","",85,[[],["take",3]]],[11,"clone","","",86,[[],["tryfold",3]]],[11,"clone","","",87,[[],["tryfoldwith",3]]],[11,"clone","","",88,[[],["update",3]]],[11,"clone","","",89,[[],["whilesome",3]]],[11,"clone","","",90,[[],["zip",3]]],[11,"clone","","",91,[[],["zipeq",3]]],[11,"clone","","",92,[[],["stepby",3]]],[11,"clone","rayon::option","",93,[[],["intoiter",3]]],[11,"clone","","",94,[[]]],[11,"clone","rayon::range","",96,[[],["iter",3]]],[11,"clone","rayon::range_inclusive","",97,[[],["iter",3]]],[11,"clone","rayon::result","",98,[[],["intoiter",3]]],[11,"clone","","",99,[[]]],[11,"clone","rayon::slice","",101,[[]]],[11,"clone","","",102,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",103,[[]]],[11,"clone","","",106,[[]]],[11,"clone","rayon::str","",108,[[],["chars",3]]],[11,"clone","","",109,[[],["charindices",3]]],[11,"clone","","",110,[[],["bytes",3]]],[11,"clone","","",111,[[],["encodeutf16",3]]],[11,"clone","","",112,[[],["split",3]]],[11,"clone","","",113,[[],["splitterminator",3]]],[11,"clone","","",114,[[],["lines",3]]],[11,"clone","","",115,[[],["splitwhitespace",3]]],[11,"clone","","",116,[[],["matches",3]]],[11,"clone","","",117,[[],["matchindices",3]]],[11,"clone","rayon::vec","",119,[[],["intoiter",3]]],[11,"fmt","rayon::collections::binary_heap","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::btree_map","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::btree_set","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::hash_map","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::hash_set","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::linked_list","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::vec_deque","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::iter","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::option","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::range","",96,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::range_inclusive","",97,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::result","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::slice","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::str","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::string","",118,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::vec","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"migrated","rayon","Returns `true` if the closure was called from a different…",24,[[]]],[11,"index","","Gets the index of this thread in the pool, within…",25,[[]]],[11,"name","","Gets the string that was specified by…",25,[[],["option",4]]],[11,"stack_size","","Gets the value that was specified by…",25,[[],["option",4]]],[11,"run","","Executes the main loop for this thread. This will not…",25,[[]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",26,[[["configuration",3]],[["threadpool",3],["box",3],["result",4]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",26,[[]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",26,[[]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",26,[[],["option",4]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",26,[[],["option",4]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",26,[[]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",26,[[]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",26,[[]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",26,[[]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",26,[[]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",28,[[],[["defaultspawn",3],["threadpoolbuilder",3]]]],[11,"build","","Creates a new `ThreadPool` initialized using this…",28,[[],[["threadpool",3],["result",4],["threadpoolbuilderror",3]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",28,[[],[["threadpoolbuilderror",3],["result",4]]]],[11,"build_scoped","","Creates a scoped `ThreadPool` initialized using this…",28,[[],[["threadpoolbuilderror",3],["result",4]]]],[11,"spawn_handler","","Sets a custom function for spawning threads.",28,[[],[["customspawn",3],["threadpoolbuilder",3]]]],[11,"thread_name","","Sets a closure which takes a thread index and returns the…",28,[[],["threadpoolbuilder",3]]],[11,"num_threads","","Sets the number of threads to be used in the rayon…",28,[[],["threadpoolbuilder",3]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",28,[[],["threadpoolbuilder",3]]],[11,"stack_size","","Sets the stack size of the worker threads",28,[[],["threadpoolbuilder",3]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",28,[[],["threadpoolbuilder",3]]],[11,"start_handler","","Sets a callback to be invoked on thread start.",28,[[],["threadpoolbuilder",3]]],[11,"exit_handler","","Sets a callback to be invoked on thread exit.",28,[[],["threadpoolbuilder",3]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",29,[[]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",30,[[]]],[11,"is_left","rayon::iter","Return true if the value is the `Left` variant.",0,[[]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option",4]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option",4]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[],["either",4]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[],["either",4]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either",4]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either",4]]],[11,"left_or","","Return left value or given value",0,[[]]],[11,"left_or_default","","Return left or a default",0,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[]]],[11,"right_or","","Return right value or given value",0,[[]]],[11,"right_or_default","","Return right or a default",0,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[]]],[11,"unwrap_left","","Returns the left value",0,[[]]],[11,"unwrap_right","","Returns the right value",0,[[]]],[11,"expect_left","","Returns the left value",0,[[]]],[11,"expect_right","","Returns the right value",0,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[],["either",4]]]],"p":[[4,"Either"],[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[3,"Repeat"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[8,"ParallelDrainFull"],[8,"ParallelDrainRange"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[3,"ChunksExact"],[3,"ChunksExactMut"],[8,"ParallelString"],[3,"FnContext"],[3,"ThreadBuilder"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[3,"ThreadPoolBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[3,"Chain"],[3,"Chunks"],[3,"Cloned"],[3,"Copied"],[3,"Empty"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"FlatMapIter"],[3,"Flatten"],[3,"FlattenIter"],[3,"Fold"],[3,"FoldWith"],[3,"Inspect"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"MaxLen"],[3,"MinLen"],[3,"Map"],[3,"MapInit"],[3,"MapWith"],[3,"MultiZip"],[3,"Once"],[3,"PanicFuse"],[3,"IterBridge"],[3,"Positions"],[3,"RepeatN"],[3,"Rev"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Update"],[3,"WhileSome"],[3,"Zip"],[3,"ZipEq"],[3,"StepBy"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"]]},\
"rayon_core":{"doc":"Under construction","i":[[3,"ThreadBuilder","rayon_core","Thread builder used for customization via…",null,null],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ThreadPool","","Represents a user created thread-pool.",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new `ThreadPool` or to configure the…",null,null],[3,"Configuration","","Contains the rayon thread pool configuration. Use…",null,null],[3,"FnContext","","Provides the calling context to a closure called by…",null,null],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[]]],[5,"scope","","Creates a \\\"fork-join\\\" scope `s` and invokes the closure…",null,[[]]],[5,"scope_fifo","","Creates a \\\"fork-join\\\" scope `s` with FIFO order, and…",null,[[]]],[5,"spawn","","Fires off a task into the Rayon threadpool in the \\\"static\\\"…",null,[[]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \\\"static\\\"…",null,[[]]],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether…",null,[[],["option",4]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],["option",4]]],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[]]],[5,"initialize","","Deprecated in favor of `ThreadPoolBuilder::build_global`.",null,[[["configuration",3]],[["box",3],["result",4]]]],[11,"index","","Gets the index of this thread in the pool, within…",0,[[]]],[11,"name","","Gets the string that was specified by…",0,[[],["option",4]]],[11,"stack_size","","Gets the value that was specified by…",0,[[],["option",4]]],[11,"run","","Executes the main loop for this thread. This will not…",0,[[]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",1,[[]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",2,[[]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",3,[[["configuration",3]],[["threadpool",3],["box",3],["result",4]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",3,[[]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",3,[[]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",3,[[],["option",4]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",3,[[],["option",4]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",3,[[]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",3,[[]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",3,[[]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",3,[[]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",3,[[]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",4,[[]]],[11,"build","","Creates a new `ThreadPool` initialized using this…",4,[[],[["result",4],["threadpool",3],["threadpoolbuilderror",3]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",4,[[],[["result",4],["threadpoolbuilderror",3]]]],[11,"build_scoped","","Creates a scoped `ThreadPool` initialized using this…",4,[[],[["result",4],["threadpoolbuilderror",3]]]],[11,"spawn_handler","","Sets a custom function for spawning threads.",4,[[],[["customspawn",3],["threadpoolbuilder",3]]]],[11,"thread_name","","Sets a closure which takes a thread index and returns the…",4,[[]]],[11,"num_threads","","Sets the number of threads to be used in the rayon…",4,[[]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",4,[[]]],[11,"stack_size","","Sets the stack size of the worker threads",4,[[]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",4,[[]]],[11,"start_handler","","Sets a callback to be invoked on thread start.",4,[[]]],[11,"exit_handler","","Sets a callback to be invoked on thread exit.",4,[[]]],[11,"new","","Creates and return a valid rayon thread pool…",5,[[],["configuration",3]]],[11,"build","","Deprecated in favor of `ThreadPoolBuilder::build`.",5,[[],[["threadpool",3],["box",3],["result",4]]]],[11,"thread_name","","Deprecated in favor of `ThreadPoolBuilder::thread_name`.",5,[[]]],[11,"num_threads","","Deprecated in favor of `ThreadPoolBuilder::num_threads`.",5,[[],["configuration",3]]],[11,"panic_handler","","Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",5,[[],["configuration",3]]],[11,"stack_size","","Deprecated in favor of `ThreadPoolBuilder::stack_size`.",5,[[]]],[11,"breadth_first","","Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",5,[[]]],[11,"start_handler","","Deprecated in favor of `ThreadPoolBuilder::start_handler`.",5,[[],["configuration",3]]],[11,"exit_handler","","Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",5,[[],["configuration",3]]],[11,"migrated","","Returns `true` if the closure was called from a different…",6,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"drop","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"description","","",7,[[]]],[11,"source","","",7,[[],[["option",4],["error",8]]]]],"p":[[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"],[3,"ThreadPoolBuildError"]]},\
"regex":{"doc":"This crate provides a library for parsing, compiling, and…","i":[[3,"RegexSetBuilder","regex","A configurable builder for a set of regular expressions.",null,null],[3,"RegexBuilder","","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured strings for a…",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[4,"Error","","An error that occurred during parsing or compiling a…",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The…",1,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[],["string",3]]],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,[[["vec",3],["captures",3]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,[[],[["cow",4],["option",4]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[],["replacerref",3]]],[11,"new","","Create a new regular expression builder with the given…",4,[[],["regexbuilder",3]]],[11,"build","","Consume the builder and compile the regular expression.",4,[[],[["result",4],["regex",3],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,[[],["regexbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,[[],["regexbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",4,[[],["regexbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,[[],["regexbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,[[],["regexbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,[[],["regexbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",4,[[],["regexbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",4,[[],["regexbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,[[],["regexbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",4,[[],["regexbuilder",3]]],[11,"new","regex","Create a new regular expression builder with the given…",5,[[],["regexbuilder",3]]],[11,"build","","Consume the builder and compile the regular expression.",5,[[],[["error",4],["regex",3],["result",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,[[],["regexbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,[[],["regexbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",5,[[],["regexbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,[[],["regexbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,[[],["regexbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,[[],["regexbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",5,[[],["regexbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",5,[[],["regexbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,[[],["regexbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",5,[[],["regexbuilder",3]]],[11,"new","regex::bytes","Create a new regular expression builder with the given…",6,[[],["regexsetbuilder",3]]],[11,"build","","Consume the builder and compile the regular expressions…",6,[[],[["regexset",3],["error",4],["result",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,[[],["regexsetbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,[[],["regexsetbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",6,[[],["regexsetbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,[[],["regexsetbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,[[],["regexsetbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,[[],["regexsetbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",6,[[],["regexsetbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",6,[[],["regexsetbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,[[],["regexsetbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",6,[[],["regexsetbuilder",3]]],[11,"new","regex","Create a new regular expression builder with the given…",7,[[],["regexsetbuilder",3]]],[11,"build","","Consume the builder and compile the regular expressions…",7,[[],[["regexset",3],["result",4],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,[[],["regexsetbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,[[],["regexsetbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",7,[[],["regexsetbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,[[],["regexsetbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,[[],["regexsetbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,[[],["regexsetbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",7,[[],["regexsetbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",7,[[],["regexsetbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,[[],["regexsetbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",7,[[],["regexsetbuilder",3]]],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,[[],[["cow",4],["option",4]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[],["replacerref",3]]],[11,"start","","Returns the starting byte offset of the match in the…",8,[[]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,[[]]],[11,"range","","Returns the range over the starting and ending byte…",8,[[],["range",3]]],[11,"as_bytes","","Returns the matched text.",8,[[]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",9,[[],[["result",4],["regex",3],["error",4]]]],[11,"is_match","","Returns true if and only if there is a match for the regex…",9,[[]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",9,[[],[["option",4],["match",3]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",9,[[],["matches",3]]],[11,"captures","","Returns the capture groups corresponding to the…",9,[[],[["captures",3],["option",4]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",9,[[],["capturematches",3]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",9,[[],["split",3]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",9,[[],["splitn",3]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",9,[[["replacer",8]],["cow",4]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",9,[[["replacer",8]],["cow",4]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",9,[[["replacer",8]],["cow",4]]],[11,"shortest_match","","Returns the end location of a match in the text given.",9,[[],["option",4]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",9,[[],["option",4]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",9,[[]]],[11,"find_at","","Returns the same as find, but starts the search at the…",9,[[],[["option",4],["match",3]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",9,[[["capturelocations",3]],[["option",4],["match",3]]]],[11,"captures_read_at","","Returns the same as `captures_read`, but starts the search…",9,[[["capturelocations",3]],[["option",4],["match",3]]]],[11,"as_str","","Returns the original string of this regex.",9,[[]]],[11,"capture_names","","Returns an iterator over the capture names.",9,[[],["capturenames",3]]],[11,"captures_len","","Returns the number of captures.",9,[[]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",9,[[],["capturelocations",3]]],[11,"get","","Returns the start and end positions of the Nth capture…",10,[[],["option",4]]],[11,"len","","Returns the total number of capturing groups.",10,[[]]],[11,"get","","Returns the match associated with the capture group at…",11,[[],[["option",4],["match",3]]]],[11,"name","","Returns the match for the capture group named `name`. If…",11,[[],[["option",4],["match",3]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",11,[[],["subcapturematches",3]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",11,[[["vec",3]]]],[11,"len","","Returns the number of captured groups.",11,[[]]],[11,"new","regex","Create a new regex set with the given regular expressions.",12,[[],[["regexset",3],["result",4],["error",4]]]],[11,"empty","","Create a new empty regex set.",12,[[],["regexset",3]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",12,[[]]],[11,"matches","","Returns the set of regular expressions that match in the…",12,[[],["setmatches",3]]],[11,"len","","Returns the total number of regular expressions in this set.",12,[[]]],[11,"is_empty","","Returns `true` if this set contains no regular expressions.",12,[[]]],[11,"patterns","","Returns the patterns that this set will match on.",12,[[]]],[11,"matched_any","","Whether this set contains any matches.",13,[[]]],[11,"matched","","Whether the regex at the given index matched.",13,[[]]],[11,"len","","The total number of regexes in the set that created these…",13,[[]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",13,[[],["setmatchesiter",3]]],[11,"new","regex::bytes","Create a new regex set with the given regular expressions.",14,[[],[["regexset",3],["error",4],["result",4]]]],[11,"empty","","Create a new empty regex set.",14,[[],["regexset",3]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",14,[[]]],[11,"matches","","Returns the set of regular expressions that match in the…",14,[[],["setmatches",3]]],[11,"len","","Returns the total number of regular expressions in this set.",14,[[]]],[11,"is_empty","","Returns `true` if this set contains no regular expressions.",14,[[]]],[11,"patterns","","Returns the patterns that this set will match on.",14,[[]]],[11,"matched_any","","Whether this set contains any matches.",15,[[]]],[11,"matched","","Whether the regex at the given index matched.",15,[[]]],[11,"len","","The total number of regexes in the set that created these…",15,[[]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",15,[[],["setmatchesiter",3]]],[11,"start","regex","Returns the starting byte offset of the match in the…",16,[[]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",16,[[]]],[11,"range","","Returns the range over the starting and ending byte…",16,[[],["range",3]]],[11,"as_str","","Returns the matched text.",16,[[]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",17,[[],[["error",4],["regex",3],["result",4]]]],[11,"is_match","","Returns true if and only if there is a match for the regex…",17,[[]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",17,[[],[["match",3],["option",4]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",17,[[],["matches",3]]],[11,"captures","","Returns the capture groups corresponding to the…",17,[[],[["option",4],["captures",3]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",17,[[],["capturematches",3]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",17,[[],["split",3]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",17,[[],["splitn",3]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",17,[[["replacer",8]],["cow",4]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",17,[[["replacer",8]],["cow",4]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",17,[[["replacer",8]],["cow",4]]],[11,"shortest_match","","Returns the end location of a match in the text given.",17,[[],["option",4]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",17,[[],["option",4]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",17,[[]]],[11,"find_at","","Returns the same as find, but starts the search at the…",17,[[],[["match",3],["option",4]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",17,[[["capturelocations",3]],[["match",3],["option",4]]]],[11,"captures_read_at","","Returns the same as captures, but starts the search at the…",17,[[["capturelocations",3]],[["match",3],["option",4]]]],[11,"as_str","","Returns the original string of this regex.",17,[[]]],[11,"capture_names","","Returns an iterator over the capture names.",17,[[],["capturenames",3]]],[11,"captures_len","","Returns the number of captures.",17,[[]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",17,[[],["capturelocations",3]]],[11,"get","","Returns the start and end positions of the Nth capture…",18,[[],["option",4]]],[11,"len","","Returns the total number of capturing groups.",18,[[]]],[11,"get","","Returns the match associated with the capture group at…",19,[[],[["match",3],["option",4]]]],[11,"name","","Returns the match for the capture group named `name`. If…",19,[[],[["match",3],["option",4]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",19,[[],["subcapturematches",3]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",19,[[["string",3]]]],[11,"len","","Returns the number of captured groups.",19,[[]]],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",20,[[["captures",3],["string",3]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[],["replacerref",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into_iter","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","regex::bytes","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into_iter","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into_iter","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"into_iter","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"replace_append","","",36,[[["vec",3],["captures",3]]]],[11,"no_expansion","","",36,[[],[["cow",4],["option",4]]]],[11,"replace_append","","",2,[[["vec",3],["captures",3]]]],[11,"no_expansion","","",2,[[],[["option",4],["cow",4]]]],[11,"replace_append","regex","",26,[[["captures",3],["string",3]]]],[11,"no_expansion","","",26,[[],[["option",4],["cow",4]]]],[11,"replace_append","","",0,[[["captures",3],["string",3]]]],[11,"no_expansion","","",0,[[],[["option",4],["cow",4]]]],[11,"next_back","","",21,[[],["option",4]]],[11,"next_back","","",22,[[],["option",4]]],[11,"next_back","regex::bytes","",37,[[],["option",4]]],[11,"next_back","","",38,[[],["option",4]]],[11,"into_iter","regex","",13,[[]]],[11,"into_iter","regex::bytes","",15,[[]]],[11,"next","","",30,[[],[["option",4],["match",3]]]],[11,"next","","",31,[[],[["captures",3],["option",4]]]],[11,"next","","",32,[[],["option",4]]],[11,"next","","",33,[[],["option",4]]],[11,"next","","",34,[[],[["option",4],["option",4]]]],[11,"size_hint","","",34,[[]]],[11,"next","","",35,[[],[["option",4],["option",4]]]],[11,"next","regex","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"next","regex::bytes","",37,[[],["option",4]]],[11,"size_hint","","",37,[[]]],[11,"next","","",38,[[],["option",4]]],[11,"size_hint","","",38,[[]]],[11,"next","regex","",24,[[],[["option",4],["option",4]]]],[11,"size_hint","","",24,[[]]],[11,"next","","",27,[[],["option",4]]],[11,"next","","",28,[[],["option",4]]],[11,"next","","",29,[[],[["option",4],["option",4]]]],[11,"next","","",23,[[],[["option",4],["captures",3]]]],[11,"next","","",25,[[],[["match",3],["option",4]]]],[11,"clone","","",1,[[],["error",4]]],[11,"clone","regex::bytes","",8,[[],["match",3]]],[11,"clone","","",9,[[],["regex",3]]],[11,"clone","","",10,[[],["capturelocations",3]]],[11,"clone","","",35,[[],["subcapturematches",3]]],[11,"clone","regex","",12,[[],["regexset",3]]],[11,"clone","","",13,[[],["setmatches",3]]],[11,"clone","","",22,[[],["setmatchesiter",3]]],[11,"clone","regex::bytes","",14,[[],["regexset",3]]],[11,"clone","","",15,[[],["setmatches",3]]],[11,"clone","","",38,[[],["setmatchesiter",3]]],[11,"clone","regex","",16,[[],["match",3]]],[11,"clone","","",17,[[],["regex",3]]],[11,"clone","","",18,[[],["capturelocations",3]]],[11,"clone","","",29,[[],["subcapturematches",3]]],[11,"eq","","",1,[[["error",4]]]],[11,"ne","","",1,[[["error",4]]]],[11,"eq","regex::bytes","",8,[[["match",3]]]],[11,"ne","","",8,[[["match",3]]]],[11,"eq","regex","",16,[[["match",3]]]],[11,"ne","","",16,[[["match",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","Shows the original regular expression.",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","regex","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","regex","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","Shows the original regular expression.",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","Shows the original regular expression.",9,[[["formatter",3]],["result",6]]],[11,"fmt","regex","Shows the original regular expression.",17,[[["formatter",3]],["result",6]]],[11,"index","regex::bytes","",11,[[]]],[11,"index","","",11,[[]]],[11,"index","regex","",19,[[]]],[11,"index","","",19,[[]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",9,[[],[["result",4],["regex",3],["error",4]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",17,[[],[["error",4],["regex",3],["result",4]]]],[11,"description","","",1,[[]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[],["replacerref",3]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[8,"Replacer"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"CaptureMatches"],[3,"CaptureNames"],[3,"Matches"],[3,"ReplacerRef"],[3,"Split"],[3,"SplitN"],[3,"SubCaptureMatches"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"]]},\
"regex_automata":{"doc":"A low level regular expression library that uses…","i":[[3,"Regex","regex_automata","A regular expression that uses deterministic finite…",null,null],[4,"DenseDFA","","A dense table-based deterministic finite automaton (DFA).",null,null],[13,"Standard","","A standard DFA that does not use premultiplication or byte…",0,null],[13,"ByteClass","","A DFA that shrinks its alphabet to a set of equivalence…",0,null],[13,"Premultiplied","","A DFA that premultiplies all of its state identifiers in…",0,null],[13,"PremultipliedByteClass","","The default configuration of a DFA, which uses byte…",0,null],[4,"SparseDFA","","A sparse table-based deterministic finite automaton (DFA).",null,null],[13,"Standard","","A standard DFA that does not use byte classes.",1,null],[13,"ByteClass","","A DFA that shrinks its alphabet to a set of equivalence…",1,null],[11,"as_ref","","Cheaply return a borrowed version of this dense DFA.…",0,[[],["densedfa",4]]],[11,"memory_usage","","Returns the memory usage, in bytes, of this DFA.",0,[[]]],[11,"from_bytes","","Deserialize a DFA with a specific state identifier…",0,[[],["densedfa",4]]],[11,"is_match","","Returns true if and only if the given bytes match.",2,[[]]],[11,"shortest_match","","Returns the first position at which a match is found.",2,[[],["option",4]]],[11,"find","","Returns the start and end offset of the leftmost first…",2,[[],["option",4]]],[11,"is_match_at","","Returns the same as `is_match`, but starts the search at…",2,[[]]],[11,"shortest_match_at","","Returns the same as `shortest_match`, but starts the…",2,[[],["option",4]]],[11,"find_at","","Returns the same as `find`, but starts the search at the…",2,[[],["option",4]]],[11,"find_iter","","Returns an iterator over all non-overlapping leftmost…",2,[[],["matches",3]]],[11,"from_dfas","","Build a new regex from its constituent forward and reverse…",2,[[],["regex",3]]],[11,"forward","","Return the underlying DFA responsible for forward matching.",2,[[]]],[11,"reverse","","Return the underlying DFA responsible for reverse matching.",2,[[]]],[11,"as_ref","","Cheaply return a borrowed version of this sparse DFA.…",1,[[],["sparsedfa",4]]],[11,"memory_usage","","Returns the memory usage, in bytes, of this DFA.",1,[[]]],[11,"from_bytes","","Deserialize a sparse DFA with a specific state identifier…",1,[[],["sparsedfa",4]]],[0,"dense","","Types and routines specific to dense DFAs.",null,null],[3,"Standard","regex_automata::dense","A standard dense DFA that does not use premultiplication…",null,null],[3,"ByteClass","","A dense DFA that shrinks its alphabet.",null,null],[3,"Premultiplied","","A dense DFA that premultiplies all of its state…",null,null],[3,"PremultipliedByteClass","","The default configuration of a dense DFA, which uses byte…",null,null],[4,"DenseDFA","","A dense table-based deterministic finite automaton (DFA).",null,null],[13,"Standard","","A standard DFA that does not use premultiplication or byte…",0,null],[13,"ByteClass","","A DFA that shrinks its alphabet to a set of equivalence…",0,null],[13,"Premultiplied","","A DFA that premultiplies all of its state identifiers in…",0,null],[13,"PremultipliedByteClass","","The default configuration of a DFA, which uses byte…",0,null],[0,"sparse","regex_automata","Types and routines specific to sparse DFAs.",null,null],[3,"Standard","regex_automata::sparse","A standard sparse DFA that does not use premultiplication…",null,null],[3,"ByteClass","","A sparse DFA that shrinks its alphabet.",null,null],[4,"SparseDFA","","A sparse table-based deterministic finite automaton (DFA).",null,null],[13,"Standard","","A standard DFA that does not use byte classes.",1,null],[13,"ByteClass","","A DFA that shrinks its alphabet to a set of equivalence…",1,null],[8,"DFA","regex_automata","A trait describing the interface of a deterministic finite…",null,null],[16,"ID","","The representation used for state identifiers in this DFA.",3,null],[10,"start_state","","Return the identifier of this DFA\'s start state.",3,[[]]],[10,"is_match_state","","Returns true if and only if the given identifier…",3,[[]]],[10,"is_dead_state","","Returns true if and only if the given identifier…",3,[[]]],[10,"is_match_or_dead_state","","Returns true if and only if the given identifier…",3,[[]]],[10,"is_anchored","","Returns true if and only if this DFA is anchored.",3,[[]]],[10,"next_state","","Given the current state that this DFA is in and the next…",3,[[]]],[10,"next_state_unchecked","","Like `next_state`, but its implementation may look up the…",3,[[]]],[11,"is_match","","Returns true if and only if the given bytes match this DFA.",3,[[]]],[11,"shortest_match","","Returns the first position at which a match is found.",3,[[],["option",4]]],[11,"find","","Returns the end offset of the longest match. If no match…",3,[[],["option",4]]],[11,"rfind","","Returns the start offset of the longest match in reverse,…",3,[[],["option",4]]],[11,"is_match_at","","Returns the same as `is_match`, but starts the search at…",3,[[]]],[11,"shortest_match_at","","Returns the same as `shortest_match`, but starts the…",3,[[],["option",4]]],[11,"find_at","","Returns the same as `find`, but starts the search at the…",3,[[],["option",4]]],[11,"rfind_at","","Returns the same as `rfind`, but starts the search at the…",3,[[],["option",4]]],[8,"StateID","","A trait describing the representation of a DFA\'s state…",null,null],[10,"from_usize","","Convert from a `usize` to this implementation\'s…",4,[[]]],[10,"to_usize","","Convert this implementation\'s representation to a `usize`.",4,[[]]],[10,"max_id","","Return the maximum state identifier supported by this…",4,[[]]],[10,"read_bytes","","Read a single state identifier from the given slice of…",4,[[]]],[10,"write_bytes","","Write this state identifier to the given slice of bytes in…",4,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","regex_automata::dense","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","regex_automata::sparse","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"start_state","regex_automata","",0,[[]]],[11,"is_match_state","","",0,[[]]],[11,"is_dead_state","","",0,[[]]],[11,"is_match_or_dead_state","","",0,[[]]],[11,"is_anchored","","",0,[[]]],[11,"next_state","","",0,[[]]],[11,"next_state_unchecked","","",0,[[]]],[11,"is_match_at","","",0,[[]]],[11,"shortest_match_at","","",0,[[],["option",4]]],[11,"find_at","","",0,[[],["option",4]]],[11,"rfind_at","","",0,[[],["option",4]]],[11,"start_state","regex_automata::dense","",5,[[]]],[11,"is_match_state","","",5,[[]]],[11,"is_dead_state","","",5,[[]]],[11,"is_match_or_dead_state","","",5,[[]]],[11,"is_anchored","","",5,[[]]],[11,"next_state","","",5,[[]]],[11,"next_state_unchecked","","",5,[[]]],[11,"start_state","","",6,[[]]],[11,"is_match_state","","",6,[[]]],[11,"is_dead_state","","",6,[[]]],[11,"is_match_or_dead_state","","",6,[[]]],[11,"is_anchored","","",6,[[]]],[11,"next_state","","",6,[[]]],[11,"next_state_unchecked","","",6,[[]]],[11,"start_state","","",7,[[]]],[11,"is_match_state","","",7,[[]]],[11,"is_dead_state","","",7,[[]]],[11,"is_match_or_dead_state","","",7,[[]]],[11,"is_anchored","","",7,[[]]],[11,"next_state","","",7,[[]]],[11,"next_state_unchecked","","",7,[[]]],[11,"start_state","","",8,[[]]],[11,"is_match_state","","",8,[[]]],[11,"is_dead_state","","",8,[[]]],[11,"is_match_or_dead_state","","",8,[[]]],[11,"is_anchored","","",8,[[]]],[11,"next_state","","",8,[[]]],[11,"next_state_unchecked","","",8,[[]]],[11,"start_state","regex_automata","",1,[[]]],[11,"is_match_state","","",1,[[]]],[11,"is_dead_state","","",1,[[]]],[11,"is_match_or_dead_state","","",1,[[]]],[11,"is_anchored","","",1,[[]]],[11,"next_state","","",1,[[]]],[11,"next_state_unchecked","","",1,[[]]],[11,"is_match_at","","",1,[[]]],[11,"shortest_match_at","","",1,[[],["option",4]]],[11,"find_at","","",1,[[],["option",4]]],[11,"rfind_at","","",1,[[],["option",4]]],[11,"start_state","regex_automata::sparse","",9,[[]]],[11,"is_match_state","","",9,[[]]],[11,"is_dead_state","","",9,[[]]],[11,"is_match_or_dead_state","","",9,[[]]],[11,"is_anchored","","",9,[[]]],[11,"next_state","","",9,[[]]],[11,"next_state_unchecked","","",9,[[]]],[11,"start_state","","",10,[[]]],[11,"is_match_state","","",10,[[]]],[11,"is_dead_state","","",10,[[]]],[11,"is_match_or_dead_state","","",10,[[]]],[11,"is_anchored","","",10,[[]]],[11,"next_state","","",10,[[]]],[11,"next_state_unchecked","","",10,[[]]],[11,"fmt","regex_automata","",0,[[["formatter",3]],["result",6]]],[11,"fmt","regex_automata::dense","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","regex_automata","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","regex_automata::sparse","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"clone","regex_automata","",0,[[],["densedfa",4]]],[11,"clone","regex_automata::dense","",5,[[],["standard",3]]],[11,"clone","","",6,[[],["byteclass",3]]],[11,"clone","","",7,[[],["premultiplied",3]]],[11,"clone","","",8,[[],["premultipliedbyteclass",3]]],[11,"clone","regex_automata","",2,[[],["regex",3]]],[11,"clone","","",1,[[],["sparsedfa",4]]],[11,"clone","regex_automata::sparse","",9,[[],["standard",3]]],[11,"clone","","",10,[[],["byteclass",3]]],[11,"is_match","regex_automata","Returns true if and only if the given bytes match this DFA.",3,[[]]],[11,"shortest_match","","Returns the first position at which a match is found.",3,[[],["option",4]]],[11,"find","","Returns the end offset of the longest match. If no match…",3,[[],["option",4]]],[11,"rfind","","Returns the start offset of the longest match in reverse,…",3,[[],["option",4]]],[11,"is_match_at","","Returns the same as `is_match`, but starts the search at…",3,[[]]],[11,"shortest_match_at","","Returns the same as `shortest_match`, but starts the…",3,[[],["option",4]]],[11,"find_at","","Returns the same as `find`, but starts the search at the…",3,[[],["option",4]]],[11,"rfind_at","","Returns the same as `rfind`, but starts the search at the…",3,[[],["option",4]]]],"p":[[4,"DenseDFA"],[4,"SparseDFA"],[3,"Regex"],[8,"DFA"],[8,"StateID"],[3,"Standard"],[3,"ByteClass"],[3,"Premultiplied"],[3,"PremultipliedByteClass"],[3,"Standard"],[3,"ByteClass"]]},\
"regex_syntax":{"doc":"This crate provides a robust regular expression parser.","i":[[3,"Parser","regex_syntax","A convenience parser for regular expressions.",null,null],[3,"ParserBuilder","","A builder for a regular expression parser.",null,null],[3,"UnicodeWordError","","An error that occurs when the Unicode-aware `\\\\w` class is…",null,null],[4,"Error","","This error type encompasses any error that can be returned…",null,null],[13,"Parse","","An error that occurred while translating concrete syntax…",0,null],[13,"Translate","","An error that occurred while translating abstract syntax…",0,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[],["string",3]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the…",null,[[["string",3]]]],[5,"is_meta_character","","Returns true if the give character has significance in a…",null,[[]]],[5,"is_word_character","","Returns true if and only if the given character is a…",null,[[]]],[5,"try_is_word_character","","Returns true if and only if the given character is a…",null,[[],[["result",4],["unicodeworderror",3]]]],[5,"is_word_byte","","Returns true if and only if the given character is an…",null,[[]]],[0,"ast","","Defines an abstract syntax for regular expressions.",null,null],[3,"Error","regex_syntax::ast","An error that occurred while parsing a regular expression…",null,null],[3,"Span","","Span represents the position information of a single AST…",null,null],[12,"start","","The start byte offset.",1,null],[12,"end","","The end byte offset.",1,null],[3,"Position","","A single position in a regular expression.",null,null],[12,"offset","","The absolute offset of this position, starting at `0` from…",2,null],[12,"line","","The line number, starting at `1`.",2,null],[12,"column","","The approximate column number, starting at `1`.",2,null],[3,"WithComments","","An abstract syntax tree for a singular expression along…",null,null],[12,"ast","","The actual ast.",3,null],[12,"comments","","All comments found in the original regular expression.",3,null],[3,"Comment","","A comment from a regular expression with an associated span.",null,null],[12,"span","","The span of this comment, including the beginning `#` and…",4,null],[12,"comment","","The comment text, starting with the first character…",4,null],[3,"Alternation","","An alternation of regular expressions.",null,null],[12,"span","","The span of this alternation.",5,null],[12,"asts","","The alternate regular expressions.",5,null],[3,"Concat","","A concatenation of regular expressions.",null,null],[12,"span","","The span of this concatenation.",6,null],[12,"asts","","The concatenation regular expressions.",6,null],[3,"Literal","","A single literal expression.",null,null],[12,"span","","The span of this literal.",7,null],[12,"kind","","The kind of this literal.",7,null],[12,"c","","The Unicode scalar value corresponding to this literal.",7,null],[3,"ClassPerl","","A Perl character class.",null,null],[12,"span","","The span of this class.",8,null],[12,"kind","","The kind of Perl class.",8,null],[12,"negated","","Whether the class is negated or not. e.g., `\\\\d` is not…",8,null],[3,"ClassAscii","","An ASCII character class.",null,null],[12,"span","","The span of this class.",9,null],[12,"kind","","The kind of ASCII class.",9,null],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,null],[3,"ClassUnicode","","A Unicode character class.",null,null],[12,"span","","The span of this class.",10,null],[12,"negated","","Whether this class is negated or not.",10,null],[12,"kind","","The kind of Unicode class.",10,null],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",null,null],[12,"span","","The span of this class.",11,null],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not…",11,null],[12,"kind","","The type of this set. A set is either a normal union of…",11,null],[3,"ClassSetRange","","A single character class range in a set.",null,null],[12,"span","","The span of this range.",12,null],[12,"start","","The start of this range.",12,null],[12,"end","","The end of this range.",12,null],[3,"ClassSetUnion","","A union of items inside a character class set.",null,null],[12,"span","","The span of the items in this operation. e.g., the…",13,null],[12,"items","","The sequence of items that make up this union.",13,null],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",null,null],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in…",14,null],[12,"kind","","The type of this set operation.",14,null],[12,"lhs","","The left hand side of the operation.",14,null],[12,"rhs","","The right hand side of the operation.",14,null],[3,"Assertion","","A single zero-width assertion.",null,null],[12,"span","","The span of this assertion.",15,null],[12,"kind","","The assertion kind, e.g., `\\\\b` or `^`.",15,null],[3,"Repetition","","A repetition operation applied to a regular expression.",null,null],[12,"span","","The span of this operation.",16,null],[12,"op","","The actual operation.",16,null],[12,"greedy","","Whether this operation was applied greedily or not.",16,null],[12,"ast","","The regular expression under repetition.",16,null],[3,"RepetitionOp","","The repetition operator itself.",null,null],[12,"span","","The span of this operator. This includes things like `+`,…",17,null],[12,"kind","","The type of operation.",17,null],[3,"Group","","A grouped regular expression.",null,null],[12,"span","","The span of this group.",18,null],[12,"kind","","The kind of this group.",18,null],[12,"ast","","The regular expression in this group.",18,null],[3,"CaptureName","","A capture name.",null,null],[12,"span","","The span of this capture name.",19,null],[12,"name","","The capture name.",19,null],[12,"index","","The capture index.",19,null],[3,"SetFlags","","A group of flags that is not applied to a particular…",null,null],[12,"span","","The span of these flags, including the grouping parentheses.",20,null],[12,"flags","","The actual sequence of flags.",20,null],[3,"Flags","","A group of flags.",null,null],[12,"span","","The span of this group of flags.",21,null],[12,"items","","A sequence of flag items. Each item is either a flag or a…",21,null],[3,"FlagsItem","","A single item in a group of flags.",null,null],[12,"span","","The span of this item.",22,null],[12,"kind","","The kind of this item.",22,null],[4,"ErrorKind","","The type of an error that occurred while building an AST.",null,null],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",23,null],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class…",23,null],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid…",23,null],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class.…",23,null],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",23,null],[13,"DecimalEmpty","","Note that this error variant is no longer used. Namely, a…",23,null],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",23,null],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",23,null],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode…",23,null],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",23,null],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",23,null],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",23,null],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",23,null],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position…",24,null],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error…",25,null],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",23,null],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",23,null],[13,"GroupNameDuplicate","","A duplicate capture name was found.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture…",26,null],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",23,null],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name.…",23,null],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",23,null],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",23,null],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",23,null],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the…",23,null],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is…",23,null],[13,"RepetitionCountDecimalEmpty","","An opening `{` was not followed by a valid decimal value.…",23,null],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",23,null],[13,"RepetitionMissing","","A repetition operator was applied to a missing…",23,null],[13,"UnicodeClassInvalid","","The Unicode class is not valid. This typically occurs when…",23,null],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced…",23,null],[13,"UnsupportedLookAround","","When syntax similar to PCRE\'s look-around is used, this…",23,null],[4,"Ast","","An abstract syntax tree for a single regular expression.",null,null],[13,"Empty","","An empty regex that matches everything.",27,null],[13,"Flags","","A set of flags, e.g., `(?is)`.",27,null],[13,"Literal","","A single character literal, which includes escape sequences.",27,null],[13,"Dot","","The \\\"any character\\\" class.",27,null],[13,"Assertion","","A single zero-width assertion.",27,null],[13,"Class","","A single character class. This includes all forms of…",27,null],[13,"Repetition","","A repetition operator applied to an arbitrary regular…",27,null],[13,"Group","","A grouped regular expression.",27,null],[13,"Alternation","","An alternation of regular expressions.",27,null],[13,"Concat","","A concatenation of regular expressions.",27,null],[4,"LiteralKind","","The kind of a single literal expression.",null,null],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",28,null],[13,"Punctuation","","The literal is written as an escape because it is…",28,null],[13,"Octal","","The literal is written as an octal escape, e.g., `\\\\141`.",28,null],[13,"HexFixed","","The literal is written as a hex code with a fixed number…",28,null],[13,"HexBrace","","The literal is written as a hex code with a bracketed…",28,null],[13,"Special","","The literal is written as a specially recognized escape,…",28,null],[4,"SpecialLiteralKind","","The type of a special literal.",null,null],[13,"Bell","","Bell, spelled `\\\\a` (`\\\\x07`).",29,null],[13,"FormFeed","","Form feed, spelled `\\\\f` (`\\\\x0C`).",29,null],[13,"Tab","","Tab, spelled `\\\\t` (`\\\\x09`).",29,null],[13,"LineFeed","","Line feed, spelled `\\\\n` (`\\\\x0A`).",29,null],[13,"CarriageReturn","","Carriage return, spelled `\\\\r` (`\\\\x0D`).",29,null],[13,"VerticalTab","","Vertical tab, spelled `\\\\v` (`\\\\x0B`).",29,null],[13,"Space","","Space, spelled `\\\\ ` (`\\\\x20`). Note that this can only…",29,null],[4,"HexLiteralKind","","The type of a Unicode hex literal.",null,null],[13,"X","","A `\\\\x` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeShort","","A `\\\\u` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeLong","","A `\\\\U` prefix. When used without brackets, this form is…",30,null],[4,"Class","","A single character class expression.",null,null],[13,"Unicode","","A Unicode character class, e.g., `\\\\pL` or `\\\\p{Greek}`.",31,null],[13,"Perl","","A perl character class, e.g., `\\\\d` or `\\\\W`.",31,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",31,null],[4,"ClassPerlKind","","The available Perl character classes.",null,null],[13,"Digit","","Decimal numbers.",32,null],[13,"Space","","Whitespace.",32,null],[13,"Word","","Word characters.",32,null],[4,"ClassAsciiKind","","The available ASCII character classes.",null,null],[13,"Alnum","","`[0-9A-Za-z]`",33,null],[13,"Alpha","","`[A-Za-z]`",33,null],[13,"Ascii","","`[\\\\x00-\\\\x7F]`",33,null],[13,"Blank","","`[ \\\\t]`",33,null],[13,"Cntrl","","`[\\\\x00-\\\\x1F\\\\x7F]`",33,null],[13,"Digit","","`[0-9]`",33,null],[13,"Graph","","`[!-~]`",33,null],[13,"Lower","","`[a-z]`",33,null],[13,"Print","","`[ -~]`",33,null],[13,"Punct","","`[!-/:-@\\\\[-`{-~]`",33,null],[13,"Space","","`[\\\\t\\\\n\\\\v\\\\f\\\\r ]`",33,null],[13,"Upper","","`[A-Z]`",33,null],[13,"Word","","`[0-9A-Za-z_]`",33,null],[13,"Xdigit","","`[0-9A-Fa-f]`",33,null],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",null,null],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\\\pN`.",34,null],[13,"Named","","A binary property, general category or script. The string…",34,null],[13,"NamedValue","","A property name and an associated value.",34,null],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",35,null],[12,"name","","The property name (which may be empty).",35,null],[12,"value","","The property value (which may be empty).",35,null],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",null,null],[13,"Equal","","A property set to a specific value, e.g.,…",36,null],[13,"Colon","","A property set to a specific value using a colon, e.g.,…",36,null],[13,"NotEqual","","A property that isn\'t a particular value, e.g.,…",36,null],[4,"ClassSet","","A character class set.",null,null],[13,"Item","","An item, which can be a single literal, range, nested…",37,null],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",37,null],[4,"ClassSetItem","","A single component of a character class set.",null,null],[13,"Empty","","An empty item.",38,null],[13,"Literal","","A single literal.",38,null],[13,"Range","","A range between two literals.",38,null],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",38,null],[13,"Unicode","","A Unicode character class, e.g., `\\\\pL` or `\\\\p{Greek}`.",38,null],[13,"Perl","","A perl character class, e.g., `\\\\d` or `\\\\W`.",38,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",38,null],[13,"Union","","A union of items.",38,null],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",null,null],[13,"Intersection","","The intersection of two sets, e.g., `\\\\pN&&[a-z]`.",39,null],[13,"Difference","","The difference of two sets, e.g., `\\\\pN--[0-9]`.",39,null],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric…",39,null],[4,"AssertionKind","","An assertion kind.",null,null],[13,"StartLine","","`^`",40,null],[13,"EndLine","","`$`",40,null],[13,"StartText","","`\\\\A`",40,null],[13,"EndText","","`\\\\z`",40,null],[13,"WordBoundary","","`\\\\b`",40,null],[13,"NotWordBoundary","","`\\\\B`",40,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","`?`",41,null],[13,"ZeroOrMore","","`*`",41,null],[13,"OneOrMore","","`+`",41,null],[13,"Range","","`{m,n}`",41,null],[4,"RepetitionRange","","A range repetition operator.",null,null],[13,"Exactly","","`{m}`",42,null],[13,"AtLeast","","`{m,}`",42,null],[13,"Bounded","","`{m,n}`",42,null],[4,"GroupKind","","The kind of a group.",null,null],[13,"CaptureIndex","","`(a)`",43,null],[13,"CaptureName","","`(?P<name>a)`",43,null],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",43,null],[4,"FlagsItemKind","","The kind of an item in a group of flags.",null,null],[13,"Negation","","A negation operator applied to all subsequent flags in the…",44,null],[13,"Flag","","A single flag in a group.",44,null],[4,"Flag","","A single flag.",null,null],[13,"CaseInsensitive","","`i`",45,null],[13,"MultiLine","","`m`",45,null],[13,"DotMatchesNewLine","","`s`",45,null],[13,"SwapGreed","","`U`",45,null],[13,"Unicode","","`u`",45,null],[13,"IgnoreWhitespace","","`x`",45,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["ast",4],["visitor",8]],["result",4]]],[0,"parse","","This module provides a regular expression parser.",null,null],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",null,null],[3,"Parser","","A regular expression parser.",null,null],[11,"new","","Create a new parser builder with a default configuration.",46,[[],["parserbuilder",3]]],[11,"build","","Build a parser from this configuration with the given…",46,[[],["parser",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",46,[[],["parserbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",46,[[],["parserbuilder",3]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",46,[[],["parserbuilder",3]]],[11,"new","","Create a new parser with a default configuration.",47,[[],["parser",3]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",47,[[],[["result",4],["ast",4],["error",3]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax…",47,[[],[["result",4],["withcomments",3],["error",3]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",null,null],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",null,null],[11,"new","","Create a new printer.",48,[[],["printer",3]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",48,[[["ast",4],["write",8]],["result",6]]],[8,"Visitor","regex_syntax::ast","A trait for visiting an abstract syntax tree (AST) in…",null,null],[16,"Output","","The result of visiting an AST.",49,null],[16,"Err","","An error that visiting an AST might return.",49,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",49,[[],["result",4]]],[11,"start","","This method is called before beginning traversal of the AST.",49,[[]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["ast",4]],["result",4]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["ast",4]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[],["result",4]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"kind","","Return the type of this error.",50,[[],["errorkind",4]]],[11,"pattern","","The original pattern string in which this error occurred.",50,[[]]],[11,"span","","Return the span at which this error occurred.",50,[[],["span",3]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some…",50,[[],[["span",3],["option",4]]]],[11,"new","","Create a new span with the given positions.",1,[[["position",3]],["span",3]]],[11,"splat","","Create a new span using the given position as the start…",1,[[["position",3]],["span",3]]],[11,"with_start","","Create a new span by replacing the starting the position…",1,[[["position",3]],["span",3]]],[11,"with_end","","Create a new span by replacing the ending the position…",1,[[["position",3]],["span",3]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single…",1,[[]]],[11,"is_empty","","Returns true if and only if this span is empty. That is,…",1,[[]]],[11,"new","","Create a new position with the given information.",2,[[],["position",3]]],[11,"span","","Return the span of this abstract syntax tree.",27,[[],["span",3]]],[11,"is_empty","","Return true if and only if this Ast is empty.",27,[[]]],[11,"into_ast","","Return this alternation as an AST.",5,[[],["ast",4]]],[11,"into_ast","","Return this concatenation as an AST.",6,[[],["ast",4]]],[11,"byte","","If this literal was written as a `\\\\x` hex escape, then…",7,[[],["option",4]]],[11,"digits","","The number of digits that must be used with this literal…",30,[[]]],[11,"span","","Return the span of this character class.",31,[[],["span",3]]],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the…",33,[[],[["classasciikind",4],["option",4]]]],[11,"is_negated","","Returns true if this class has been negated.",10,[[]]],[11,"is_equal","","Whether the op is an equality op or not.",36,[[]]],[11,"union","","Build a set from a union.",37,[[["classsetunion",3]],["classset",4]]],[11,"span","","Return the span of this character class set.",37,[[],["span",3]]],[11,"span","","Return the span of this character class set item.",38,[[],["span",3]]],[11,"is_valid","","Returns true if and only if this character class range is…",12,[[]]],[11,"push","","Push a new item in this union.",13,[[["classsetitem",4]]]],[11,"into_item","","Return this union as a character class set item.",13,[[],["classsetitem",4]]],[11,"is_valid","","Returns true if and only if this repetition range is valid.",42,[[]]],[11,"flags","","If this group is non-capturing, then this returns the…",18,[[],[["option",4],["flags",3]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",18,[[]]],[11,"capture_index","","Returns the capture index of this group, if this is a…",18,[[],["option",4]]],[11,"add_item","","Add the given item to this sequence of flags.",21,[[["flagsitem",3]],["option",4]]],[11,"flag_state","","Returns the state of the given flag in this set.",21,[[["flag",4]],["option",4]]],[11,"is_negation","","Returns true if and only if this item is a negation…",44,[[]]],[0,"hir","regex_syntax","Defines a high-level intermediate representation for…",null,null],[3,"CaseFoldError","regex_syntax::hir","An error that occurs when Unicode-aware simple case…",null,null],[3,"Error","","An error that can occur while translating an `Ast` to a…",null,null],[3,"Hir","","A high-level intermediate representation (HIR) for a…",null,null],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",null,null],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",null,null],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar…",null,null],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where…",null,null],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",null,null],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",null,null],[3,"Group","","The high-level intermediate representation for a group.",null,null],[12,"kind","","The kind of this group. If it is a capturing group, then…",51,null],[12,"hir","","The expression inside the capturing group, which may be…",51,null],[3,"Repetition","","The high-level intermediate representation of a repetition…",null,null],[12,"kind","","The kind of this repetition operator.",52,null],[12,"greedy","","Whether this repetition operator is greedy or not. A…",52,null],[12,"hir","","The expression being repeated.",52,null],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",null,null],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when…",53,null],[13,"InvalidUtf8","","This error occurs when translating a pattern that could…",53,null],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name…",53,null],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value…",53,null],[13,"UnicodePerlClassNotFound","","This occurs when a Unicode-aware Perl character class…",53,null],[13,"UnicodeCaseUnavailable","","This occurs when the Unicode simple case mapping tables…",53,null],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a…",53,null],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",null,null],[13,"Empty","","The empty regular expression, which matches everything,…",54,null],[13,"Literal","","A single literal character that matches exactly this…",54,null],[13,"Class","","A single character class that matches any of the…",54,null],[13,"Anchor","","An anchor assertion. An anchor assertion match always has…",54,null],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode…",54,null],[13,"Repetition","","A repetition operation applied to a child expression.",54,null],[13,"Group","","A possibly capturing group, which contains a child…",54,null],[13,"Concat","","A concatenation of expressions. A concatenation always has…",54,null],[13,"Alternation","","An alternation of expressions. An alternation always has…",54,null],[4,"Literal","","The high-level intermediate representation of a literal.",null,null],[13,"Unicode","","A single character represented by a Unicode scalar value.",55,null],[13,"Byte","","A single character represented by an arbitrary byte.",55,null],[4,"Class","","The high-level intermediate representation of a character…",null,null],[13,"Unicode","","A set of characters represented by Unicode scalar values.",56,null],[13,"Bytes","","A set of characters represented by arbitrary bytes (one…",56,null],[4,"Anchor","","The high-level intermediate representation for an anchor…",null,null],[13,"StartLine","","Match the beginning of a line or the beginning of text.…",57,null],[13,"EndLine","","Match the end of a line or the end of text. Specifically,…",57,null],[13,"StartText","","Match the beginning of text. Specifically, this matches at…",57,null],[13,"EndText","","Match the end of text. Specifically, this matches at the…",57,null],[4,"WordBoundary","","The high-level intermediate representation for a…",null,null],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches…",58,null],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",58,null],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a…",58,null],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",58,null],[4,"GroupKind","","The kind of group.",null,null],[13,"CaptureIndex","","A normal unnamed capturing group.",59,null],[13,"CaptureName","","A named capturing group.",59,null],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",60,null],[12,"index","","The capture index of the group.",60,null],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",59,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",61,null],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",61,null],[13,"OneOrMore","","Matches a sub-expression one or more times.",61,null],[13,"Range","","Matches a sub-expression within a bounded range of times.",61,null],[4,"RepetitionRange","","The kind of a counted repetition operator.",null,null],[13,"Exactly","","Matches a sub-expression exactly this many times.",62,null],[13,"AtLeast","","Matches a sub-expression at least this many times.",62,null],[13,"Bounded","","Matches a sub-expression at least `m` times and at most…",62,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["visitor",8],["hir",3]],["result",4]]],[0,"literal","","Provides routines for extracting literal prefixes and…",null,null],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular…",null,null],[3,"Literal","","A single member of a set of literals extracted from a…",null,null],[11,"empty","","Returns a new empty set of literals using default limits.",63,[[],["literals",3]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the given…",63,[[["hir",3]],["literals",3]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the given…",63,[[["hir",3]],["literals",3]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",63,[[]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",63,[[],["literals",3]]],[11,"limit_class","","Get the character class size limit for this set.",63,[[]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",63,[[],["literals",3]]],[11,"literals","","Returns the set of literals as a slice. Its order is…",63,[[]]],[11,"min_len","","Returns the length of the smallest literal.",63,[[],["option",4]]],[11,"all_complete","","Returns true if all members in this set are complete.",63,[[]]],[11,"any_complete","","Returns true if any member in this set is complete.",63,[[]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",63,[[]]],[11,"is_empty","","Returns true if this set is empty or if all of its members…",63,[[]]],[11,"to_empty","","Returns a new empty set of literals using this set\'s limits.",63,[[],["literals",3]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this…",63,[[]]],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this…",63,[[]]],[11,"trim_suffix","","Returns a new set of literals with the given number of…",63,[[],[["literals",3],["option",4]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that…",63,[[],["literals",3]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that…",63,[[],["literals",3]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",63,[[["hir",3]]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",63,[[["hir",3]]]],[11,"union","","Unions this set with another set.",63,[[["literals",3]]]],[11,"cross_product","","Extends this set with another set.",63,[[["literals",3]]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",63,[[]]],[11,"add","","Adds the given literal to this set.",63,[[["literal",3]]]],[11,"add_char_class","","Extends each literal in this set with the character class…",63,[[["classunicode",3]]]],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",63,[[["classbytes",3]]]],[11,"cut","","Cuts every member of this set. When a member is cut, it…",63,[[]]],[11,"reverse","","Reverses all members in place.",63,[[]]],[11,"clear","","Clears this set of all members.",63,[[]]],[11,"new","","Returns a new complete literal with the bytes given.",64,[[["vec",3]],["literal",3]]],[11,"empty","","Returns a new complete empty literal.",64,[[],["literal",3]]],[11,"is_cut","","Returns true if this literal was \\\"cut.\\\"",64,[[]]],[11,"cut","","Cuts this literal.",64,[[]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",null,null],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression\'s high-level…",null,null],[11,"new","","Create a new printer.",65,[[],["printer",3]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",65,[[["write",8],["hir",3]],["result",6]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",null,null],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",null,null],[3,"Translator","","A translator maps abstract syntax to a high level…",null,null],[11,"new","","Create a new translator builder with a default c…",66,[[],["translatorbuilder",3]]],[11,"build","","Build a translator using the current configuration.",66,[[],["translator",3]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of…",66,[[],["translatorbuilder",3]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by…",66,[[],["translatorbuilder",3]]],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by…",66,[[],["translatorbuilder",3]]],[11,"dot_matches_new_line","","Enable or disable the \\\"dot matches any character\\\" flag…",66,[[],["translatorbuilder",3]]],[11,"swap_greed","","Enable or disable the \\\"swap greed\\\" flag (`U`) by default.",66,[[],["translatorbuilder",3]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",66,[[],["translatorbuilder",3]]],[11,"new","","Create a new translator using the default configuration.",67,[[],["translator",3]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a high…",67,[[["ast",4]],[["hir",3],["result",4],["error",3]]]],[8,"Visitor","regex_syntax::hir","A trait for visiting the high-level IR (HIR) in depth…",null,null],[16,"Output","","The result of visiting an HIR.",68,null],[16,"Err","","An error that visiting an HIR might return.",68,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",68,[[],["result",4]]],[11,"start","","This method is called before beginning traversal of the HIR.",68,[[]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["hir",3]],["result",4]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["hir",3]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[],["result",4]]],[11,"kind","","Return the type of this error.",69,[[],["errorkind",4]]],[11,"pattern","","The original pattern string in which this error occurred.",69,[[]]],[11,"span","","Return the span at which this error occurred.",69,[[],["span",3]]],[11,"kind","","Returns a reference to the underlying HIR kind.",70,[[],["hirkind",4]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its…",70,[[],["hirkind",4]]],[11,"empty","","Returns an empty HIR expression.",70,[[],["hir",3]]],[11,"literal","","Creates a literal HIR expression.",70,[[["literal",4]],["hir",3]]],[11,"class","","Creates a class HIR expression.",70,[[["class",4]],["hir",3]]],[11,"anchor","","Creates an anchor assertion HIR expression.",70,[[["anchor",4]],["hir",3]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",70,[[["wordboundary",4]],["hir",3]]],[11,"repetition","","Creates a repetition HIR expression.",70,[[["repetition",3]],["hir",3]]],[11,"group","","Creates a group HIR expression.",70,[[["group",3]],["hir",3]]],[11,"concat","","Returns the concatenation of the given expressions.",70,[[["hir",3],["vec",3]],["hir",3]]],[11,"alternation","","Returns the alternation of the given expressions.",70,[[["hir",3],["vec",3]],["hir",3]]],[11,"dot","","Build an HIR expression for `.`.",70,[[],["hir",3]]],[11,"any","","Build an HIR expression for `(?s).`.",70,[[],["hir",3]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match…",70,[[]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is…",70,[[]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match…",70,[[]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match…",70,[[]]],[11,"is_line_anchored_start","","Return true if and only if this HIR is required to match…",70,[[]]],[11,"is_line_anchored_end","","Return true if and only if this HIR is required to match…",70,[[]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any…",70,[[]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any…",70,[[]]],[11,"is_match_empty","","Return true if and only if the empty string is part of the…",70,[[]]],[11,"is_literal","","Return true if and only if this HIR is a simple literal.…",70,[[]]],[11,"is_alternation_literal","","Return true if and only if this HIR is either a simple…",70,[[]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular…",54,[[]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including…",54,[[]]],[11,"is_unicode","","Returns true if and only if this literal corresponds to a…",55,[[]]],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class,…",56,[[]]],[11,"negate","","Negate this character class in place.",56,[[]]],[11,"is_always_utf8","","Returns true if and only if this character class will only…",56,[[]]],[11,"new","","Create a new class from a sequence of ranges.",71,[[],["classunicode",3]]],[11,"empty","","Create a new class with no ranges.",71,[[],["classunicode",3]]],[11,"push","","Add a new range to this set.",71,[[["classunicoderange",3]]]],[11,"iter","","Return an iterator over all ranges in this class.",71,[[],["classunicodeiter",3]]],[11,"ranges","","Return the underlying ranges as a slice.",71,[[]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",71,[[]]],[11,"try_case_fold_simple","","Expand this character class such that it contains all case…",71,[[],[["result",4],["casefolderror",3]]]],[11,"negate","","Negate this character class.",71,[[]]],[11,"union","","Union this character class with the given character class,…",71,[[["classunicode",3]]]],[11,"intersect","","Intersect this character class with the given character…",71,[[["classunicode",3]]]],[11,"difference","","Subtract the given character class from this character…",71,[[["classunicode",3]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character…",71,[[["classunicode",3]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",71,[[]]],[11,"new","","Create a new Unicode scalar value range for a character…",72,[[],["classunicoderange",3]]],[11,"start","","Return the start of this range.",72,[[]]],[11,"end","","Return the end of this range.",72,[[]]],[11,"new","","Create a new class from a sequence of ranges.",73,[[],["classbytes",3]]],[11,"empty","","Create a new class with no ranges.",73,[[],["classbytes",3]]],[11,"push","","Add a new range to this set.",73,[[["classbytesrange",3]]]],[11,"iter","","Return an iterator over all ranges in this class.",73,[[],["classbytesiter",3]]],[11,"ranges","","Return the underlying ranges as a slice.",73,[[]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",73,[[]]],[11,"negate","","Negate this byte class.",73,[[]]],[11,"union","","Union this byte class with the given byte class, in place.",73,[[["classbytes",3]]]],[11,"intersect","","Intersect this byte class with the given byte class, in…",73,[[["classbytes",3]]]],[11,"difference","","Subtract the given byte class from this byte class, in…",73,[[["classbytes",3]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte…",73,[[["classbytes",3]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",73,[[]]],[11,"new","","Create a new byte range for a character class.",74,[[],["classbytesrange",3]]],[11,"start","","Return the start of this range.",74,[[]]],[11,"end","","Return the end of this range.",74,[[]]],[11,"is_negated","","Returns true if and only if this word boundary assertion…",58,[[]]],[11,"is_match_empty","","Returns true if and only if this repetition operator makes…",52,[[]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",75,[[],["parserbuilder",3]]],[11,"build","","Build a parser from this configuration with the given…",75,[[],["parser",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",75,[[],["parserbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",75,[[],["parserbuilder",3]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a…",75,[[],["parserbuilder",3]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",75,[[],["parserbuilder",3]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",75,[[],["parserbuilder",3]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",75,[[],["parserbuilder",3]]],[11,"dot_matches_new_line","","Enable or disable the \\\"dot matches any character\\\" flag by…",75,[[],["parserbuilder",3]]],[11,"swap_greed","","Enable or disable the \\\"swap greed\\\" flag by default.",75,[[],["parserbuilder",3]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",75,[[],["parserbuilder",3]]],[11,"new","","Create a new parser with a default configuration.",76,[[],["parser",3]]],[11,"parse","","Parse the regular expression into a high level…",76,[[],[["hir",3],["result",6]]]],[0,"utf8","","Converts ranges of Unicode scalar values to equivalent…",null,null],[3,"Utf8Range","regex_syntax::utf8","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",77,null],[12,"end","","End of byte range (inclusive).",77,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",78,null],[13,"Two","","Two successive byte ranges.",78,null],[13,"Three","","Three successive byte ranges.",78,null],[13,"Four","","Four successive byte ranges.",78,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",78,[[]]],[11,"len","","Returns the number of byte ranges in this sequence.",78,[[]]],[11,"reverse","","Reverses the ranges in this sequence.",78,[[]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches…",78,[[]]],[11,"matches","","Returns true if and only if the given byte is in this range.",77,[[]]],[11,"new","","Create a new iterator over UTF-8 byte ranges for the…",79,[[]]],[6,"Result","regex_syntax","A type alias for dealing with errors returned by this crate.",null,null],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","regex_syntax::ast","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","regex_syntax::ast::parse","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","regex_syntax::ast::print","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","regex_syntax::hir","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"to_string","","",69,[[],["string",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"into_iter","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"into_iter","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","regex_syntax::hir::literal","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","regex_syntax::hir::print","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","regex_syntax::hir::translate","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","regex_syntax::utf8","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"into_iter","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"drop","regex_syntax::ast","",27,[[]]],[11,"drop","","",37,[[]]],[11,"drop","regex_syntax::hir","",70,[[]]],[11,"as_ref","regex_syntax::hir::literal","",64,[[]]],[11,"from","regex_syntax","",0,[[["error",3]],["error",4]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"next","regex_syntax::hir","",82,[[],[["classunicoderange",3],["option",4]]]],[11,"next","","",83,[[],[["option",4],["classbytesrange",3]]]],[11,"next","regex_syntax::utf8","",79,[[],["option",4]]],[11,"clone","regex_syntax::ast::parse","",46,[[],["parserbuilder",3]]],[11,"clone","","",47,[[],["parser",3]]],[11,"clone","regex_syntax::ast","",50,[[],["error",3]]],[11,"clone","","",23,[[],["errorkind",4]]],[11,"clone","","",1,[[],["span",3]]],[11,"clone","","",2,[[],["position",3]]],[11,"clone","","",3,[[],["withcomments",3]]],[11,"clone","","",4,[[],["comment",3]]],[11,"clone","","",27,[[],["ast",4]]],[11,"clone","","",5,[[],["alternation",3]]],[11,"clone","","",6,[[],["concat",3]]],[11,"clone","","",7,[[],["literal",3]]],[11,"clone","","",28,[[],["literalkind",4]]],[11,"clone","","",29,[[],["specialliteralkind",4]]],[11,"clone","","",30,[[],["hexliteralkind",4]]],[11,"clone","","",31,[[],["class",4]]],[11,"clone","","",8,[[],["classperl",3]]],[11,"clone","","",32,[[],["classperlkind",4]]],[11,"clone","","",9,[[],["classascii",3]]],[11,"clone","","",33,[[],["classasciikind",4]]],[11,"clone","","",10,[[],["classunicode",3]]],[11,"clone","","",34,[[],["classunicodekind",4]]],[11,"clone","","",36,[[],["classunicodeopkind",4]]],[11,"clone","","",11,[[],["classbracketed",3]]],[11,"clone","","",37,[[],["classset",4]]],[11,"clone","","",38,[[],["classsetitem",4]]],[11,"clone","","",12,[[],["classsetrange",3]]],[11,"clone","","",13,[[],["classsetunion",3]]],[11,"clone","","",14,[[],["classsetbinaryop",3]]],[11,"clone","","",39,[[],["classsetbinaryopkind",4]]],[11,"clone","","",15,[[],["assertion",3]]],[11,"clone","","",40,[[],["assertionkind",4]]],[11,"clone","","",16,[[],["repetition",3]]],[11,"clone","","",17,[[],["repetitionop",3]]],[11,"clone","","",41,[[],["repetitionkind",4]]],[11,"clone","","",42,[[],["repetitionrange",4]]],[11,"clone","","",18,[[],["group",3]]],[11,"clone","","",43,[[],["groupkind",4]]],[11,"clone","","",19,[[],["capturename",3]]],[11,"clone","","",20,[[],["setflags",3]]],[11,"clone","","",21,[[],["flags",3]]],[11,"clone","","",22,[[],["flagsitem",3]]],[11,"clone","","",44,[[],["flagsitemkind",4]]],[11,"clone","","",45,[[],["flag",4]]],[11,"clone","regex_syntax","",0,[[],["error",4]]],[11,"clone","regex_syntax::hir::literal","",63,[[],["literals",3]]],[11,"clone","","",64,[[],["literal",3]]],[11,"clone","regex_syntax::hir::translate","",66,[[],["translatorbuilder",3]]],[11,"clone","","",67,[[],["translator",3]]],[11,"clone","regex_syntax::hir","",69,[[],["error",3]]],[11,"clone","","",53,[[],["errorkind",4]]],[11,"clone","","",70,[[],["hir",3]]],[11,"clone","","",54,[[],["hirkind",4]]],[11,"clone","","",55,[[],["literal",4]]],[11,"clone","","",56,[[],["class",4]]],[11,"clone","","",71,[[],["classunicode",3]]],[11,"clone","","",72,[[],["classunicoderange",3]]],[11,"clone","","",73,[[],["classbytes",3]]],[11,"clone","","",74,[[],["classbytesrange",3]]],[11,"clone","","",57,[[],["anchor",4]]],[11,"clone","","",58,[[],["wordboundary",4]]],[11,"clone","","",51,[[],["group",3]]],[11,"clone","","",59,[[],["groupkind",4]]],[11,"clone","","",52,[[],["repetition",3]]],[11,"clone","","",61,[[],["repetitionkind",4]]],[11,"clone","","",62,[[],["repetitionrange",4]]],[11,"clone","regex_syntax","",75,[[],["parserbuilder",3]]],[11,"clone","","",76,[[],["parser",3]]],[11,"clone","regex_syntax::utf8","",78,[[],["utf8sequence",4]]],[11,"clone","","",77,[[],["utf8range",3]]],[11,"default","regex_syntax::ast::parse","",46,[[],["parserbuilder",3]]],[11,"default","regex_syntax::hir::translate","",66,[[],["translatorbuilder",3]]],[11,"default","regex_syntax::hir","",72,[[],["classunicoderange",3]]],[11,"default","","",74,[[],["classbytesrange",3]]],[11,"default","regex_syntax","",75,[[],["parserbuilder",3]]],[11,"cmp","regex_syntax::ast","",1,[[["span",3]],["ordering",4]]],[11,"cmp","","",2,[[["position",3]],["ordering",4]]],[11,"cmp","regex_syntax::hir::literal","",64,[[["literal",3]],["ordering",4]]],[11,"cmp","regex_syntax::hir","",72,[[["classunicoderange",3]],["ordering",4]]],[11,"cmp","","",74,[[["classbytesrange",3]],["ordering",4]]],[11,"cmp","regex_syntax::utf8","",78,[[["utf8sequence",4]],["ordering",4]]],[11,"cmp","","",77,[[["utf8range",3]],["ordering",4]]],[11,"eq","regex_syntax::ast","",50,[[["error",3]]]],[11,"ne","","",50,[[["error",3]]]],[11,"eq","","",23,[[["errorkind",4]]]],[11,"ne","","",23,[[["errorkind",4]]]],[11,"eq","","",1,[[["span",3]]]],[11,"ne","","",1,[[["span",3]]]],[11,"eq","","",2,[[["position",3]]]],[11,"ne","","",2,[[["position",3]]]],[11,"eq","","",3,[[["withcomments",3]]]],[11,"ne","","",3,[[["withcomments",3]]]],[11,"eq","","",4,[[["comment",3]]]],[11,"ne","","",4,[[["comment",3]]]],[11,"eq","","",27,[[["ast",4]]]],[11,"ne","","",27,[[["ast",4]]]],[11,"eq","","",5,[[["alternation",3]]]],[11,"ne","","",5,[[["alternation",3]]]],[11,"eq","","",6,[[["concat",3]]]],[11,"ne","","",6,[[["concat",3]]]],[11,"eq","","",7,[[["literal",3]]]],[11,"ne","","",7,[[["literal",3]]]],[11,"eq","","",28,[[["literalkind",4]]]],[11,"ne","","",28,[[["literalkind",4]]]],[11,"eq","","",29,[[["specialliteralkind",4]]]],[11,"eq","","",30,[[["hexliteralkind",4]]]],[11,"eq","","",31,[[["class",4]]]],[11,"ne","","",31,[[["class",4]]]],[11,"eq","","",8,[[["classperl",3]]]],[11,"ne","","",8,[[["classperl",3]]]],[11,"eq","","",32,[[["classperlkind",4]]]],[11,"eq","","",9,[[["classascii",3]]]],[11,"ne","","",9,[[["classascii",3]]]],[11,"eq","","",33,[[["classasciikind",4]]]],[11,"eq","","",10,[[["classunicode",3]]]],[11,"ne","","",10,[[["classunicode",3]]]],[11,"eq","","",34,[[["classunicodekind",4]]]],[11,"ne","","",34,[[["classunicodekind",4]]]],[11,"eq","","",36,[[["classunicodeopkind",4]]]],[11,"eq","","",11,[[["classbracketed",3]]]],[11,"ne","","",11,[[["classbracketed",3]]]],[11,"eq","","",37,[[["classset",4]]]],[11,"ne","","",37,[[["classset",4]]]],[11,"eq","","",38,[[["classsetitem",4]]]],[11,"ne","","",38,[[["classsetitem",4]]]],[11,"eq","","",12,[[["classsetrange",3]]]],[11,"ne","","",12,[[["classsetrange",3]]]],[11,"eq","","",13,[[["classsetunion",3]]]],[11,"ne","","",13,[[["classsetunion",3]]]],[11,"eq","","",14,[[["classsetbinaryop",3]]]],[11,"ne","","",14,[[["classsetbinaryop",3]]]],[11,"eq","","",39,[[["classsetbinaryopkind",4]]]],[11,"eq","","",15,[[["assertion",3]]]],[11,"ne","","",15,[[["assertion",3]]]],[11,"eq","","",40,[[["assertionkind",4]]]],[11,"eq","","",16,[[["repetition",3]]]],[11,"ne","","",16,[[["repetition",3]]]],[11,"eq","","",17,[[["repetitionop",3]]]],[11,"ne","","",17,[[["repetitionop",3]]]],[11,"eq","","",41,[[["repetitionkind",4]]]],[11,"ne","","",41,[[["repetitionkind",4]]]],[11,"eq","","",42,[[["repetitionrange",4]]]],[11,"ne","","",42,[[["repetitionrange",4]]]],[11,"eq","","",18,[[["group",3]]]],[11,"ne","","",18,[[["group",3]]]],[11,"eq","","",43,[[["groupkind",4]]]],[11,"ne","","",43,[[["groupkind",4]]]],[11,"eq","","",19,[[["capturename",3]]]],[11,"ne","","",19,[[["capturename",3]]]],[11,"eq","","",20,[[["setflags",3]]]],[11,"ne","","",20,[[["setflags",3]]]],[11,"eq","","",21,[[["flags",3]]]],[11,"ne","","",21,[[["flags",3]]]],[11,"eq","","",22,[[["flagsitem",3]]]],[11,"ne","","",22,[[["flagsitem",3]]]],[11,"eq","","",44,[[["flagsitemkind",4]]]],[11,"ne","","",44,[[["flagsitemkind",4]]]],[11,"eq","","",45,[[["flag",4]]]],[11,"eq","regex_syntax","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"eq","regex_syntax::hir::literal","",63,[[["literals",3]]]],[11,"ne","","",63,[[["literals",3]]]],[11,"eq","","",64,[[["literal",3]]]],[11,"eq","regex_syntax::hir","",69,[[["error",3]]]],[11,"ne","","",69,[[["error",3]]]],[11,"eq","","",53,[[["errorkind",4]]]],[11,"eq","","",70,[[["hir",3]]]],[11,"ne","","",70,[[["hir",3]]]],[11,"eq","","",54,[[["hirkind",4]]]],[11,"ne","","",54,[[["hirkind",4]]]],[11,"eq","","",55,[[["literal",4]]]],[11,"ne","","",55,[[["literal",4]]]],[11,"eq","","",56,[[["class",4]]]],[11,"ne","","",56,[[["class",4]]]],[11,"eq","","",71,[[["classunicode",3]]]],[11,"ne","","",71,[[["classunicode",3]]]],[11,"eq","","",72,[[["classunicoderange",3]]]],[11,"ne","","",72,[[["classunicoderange",3]]]],[11,"eq","","",73,[[["classbytes",3]]]],[11,"ne","","",73,[[["classbytes",3]]]],[11,"eq","","",74,[[["classbytesrange",3]]]],[11,"ne","","",74,[[["classbytesrange",3]]]],[11,"eq","","",57,[[["anchor",4]]]],[11,"eq","","",58,[[["wordboundary",4]]]],[11,"eq","","",51,[[["group",3]]]],[11,"ne","","",51,[[["group",3]]]],[11,"eq","","",59,[[["groupkind",4]]]],[11,"ne","","",59,[[["groupkind",4]]]],[11,"eq","","",52,[[["repetition",3]]]],[11,"ne","","",52,[[["repetition",3]]]],[11,"eq","","",61,[[["repetitionkind",4]]]],[11,"ne","","",61,[[["repetitionkind",4]]]],[11,"eq","","",62,[[["repetitionrange",4]]]],[11,"ne","","",62,[[["repetitionrange",4]]]],[11,"eq","regex_syntax::utf8","",78,[[["utf8sequence",4]]]],[11,"ne","","",78,[[["utf8sequence",4]]]],[11,"eq","","",77,[[["utf8range",3]]]],[11,"ne","","",77,[[["utf8range",3]]]],[11,"partial_cmp","regex_syntax::ast","",1,[[["span",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",2,[[["position",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","regex_syntax::hir::literal","",64,[[["literal",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","regex_syntax::hir","",72,[[["classunicoderange",3]],[["option",4],["ordering",4]]]],[11,"lt","","",72,[[["classunicoderange",3]]]],[11,"le","","",72,[[["classunicoderange",3]]]],[11,"gt","","",72,[[["classunicoderange",3]]]],[11,"ge","","",72,[[["classunicoderange",3]]]],[11,"partial_cmp","","",74,[[["classbytesrange",3]],[["option",4],["ordering",4]]]],[11,"lt","","",74,[[["classbytesrange",3]]]],[11,"le","","",74,[[["classbytesrange",3]]]],[11,"gt","","",74,[[["classbytesrange",3]]]],[11,"ge","","",74,[[["classbytesrange",3]]]],[11,"partial_cmp","regex_syntax::utf8","",78,[[["utf8sequence",4]],[["option",4],["ordering",4]]]],[11,"lt","","",78,[[["utf8sequence",4]]]],[11,"le","","",78,[[["utf8sequence",4]]]],[11,"gt","","",78,[[["utf8sequence",4]]]],[11,"ge","","",78,[[["utf8sequence",4]]]],[11,"partial_cmp","","",77,[[["utf8range",3]],[["option",4],["ordering",4]]]],[11,"lt","","",77,[[["utf8range",3]]]],[11,"le","","",77,[[["utf8range",3]]]],[11,"gt","","",77,[[["utf8range",3]]]],[11,"ge","","",77,[[["utf8range",3]]]],[11,"deref","regex_syntax::hir::literal","",64,[[],["vec",3]]],[11,"deref_mut","","",64,[[],["vec",3]]],[11,"fmt","regex_syntax::ast::parse","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast::print","",48,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",0,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::literal","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::print","",65,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::translate","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",81,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",80,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::utf8","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",0,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",80,[[["formatter",3]],["result",6]]],[11,"description","regex_syntax::ast","",50,[[]]],[11,"description","regex_syntax","",0,[[]]],[11,"description","regex_syntax::hir","",69,[[]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",49,[[]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["ast",4]],["result",4]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["ast",4]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[],["result",4]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",68,[[]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["hir",3]],["result",4]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["hir",3]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[],["result",4]]]],"p":[[4,"Error"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"Repetition"],[3,"RepetitionOp"],[3,"Group"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"ErrorKind"],[13,"FlagDuplicate"],[13,"FlagRepeatedNegation"],[13,"GroupNameDuplicate"],[4,"Ast"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[4,"ClassPerlKind"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[13,"NamedValue"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[4,"FlagsItemKind"],[4,"Flag"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,"Repetition"],[4,"ErrorKind"],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,"WordBoundary"],[4,"GroupKind"],[13,"CaptureName"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[3,"ParserBuilder"],[3,"Parser"],[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"],[3,"UnicodeWordError"],[3,"CaseFoldError"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"]]},\
"ryu":{"doc":"github crates-io docs-rs","i":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",null,null],[11,"new","","This is a cheap operation; you don\'t need to worry about…",0,[[]]],[11,"format","","Print a floating point number into this buffer and return…",0,[[["float",8]]]],[11,"format_finite","","Print a floating point number into this buffer and return…",0,[[["float",8]]]],[0,"raw","","Unsafe functions that mirror the API of the C…",null,null],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes…",null,[[]]],[5,"format64","","Print f64 to the given buffer and return number of bytes…",null,[[]]],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[]]]],"p":[[3,"Buffer"]]},\
"same_file":{"doc":"This crate provides a safe and simple cross platform way…","i":[[3,"Handle","same_file","A handle to a file that can be tested for equality with…",null,null],[5,"is_same_file","","Returns true if the two file paths may correspond to the…",null,[[],["result",6]]],[11,"from_path","","Construct a handle from a path.",0,[[["path",3],["asref",8]],[["handle",3],["result",6]]]],[11,"from_file","","Construct a handle from a file.",0,[[["file",3]],[["handle",3],["result",6]]]],[11,"stdin","","Construct a handle from stdin.",0,[[],[["handle",3],["result",6]]]],[11,"stdout","","Construct a handle from stdout.",0,[[],[["handle",3],["result",6]]]],[11,"stderr","","Construct a handle from stderr.",0,[[],[["handle",3],["result",6]]]],[11,"as_file","","Return a reference to the underlying file.",0,[[],["file",3]]],[11,"as_file_mut","","Return a mutable reference to the underlying file.",0,[[],["file",3]]],[11,"dev","","Return the underlying device number of this handle.",0,[[]]],[11,"ino","","Return the underlying inode number of this handle.",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"eq","","",0,[[["handle",3]]]],[11,"ne","","",0,[[["handle",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"as_raw_fd","","",0,[[],["rawfd",6]]],[11,"into_raw_fd","","",0,[[],["rawfd",6]]]],"p":[[3,"Handle"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected…",null,null],[4,"Always","","Always run on scope exit.",null,null],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred…",null,[[],[["scopeguard",3],["always",4]]]],[8,"Strategy","","Controls in which cases the associated code should be run",null,null],[10,"should_run","","Return `true` if the guard’s associated code should run…",0,[[]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through…",1,[[],["scopeguard",3]]],[11,"into_inner","","“Defuse” the guard and extract the value without calling…",1,[[]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",null,null],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"should_run","","",2,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"drop","","",1,[[]]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]},\
"serde":{"doc":"SerdeSerde is a framework for serializing and…","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not…",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input…",0,null],[0,"value","","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[],["borrowedstrdeserializer",3]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer",3]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[]]],[11,"end","","Check for remaining elements after passing a…",3,[[],["result",4]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[]]],[11,"end","","Check for remaining elements after passing a…",5,[[],["result",4]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",7,[[]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["expected",8],["unexpected",4]]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["expected",8],["unexpected",4]]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["expected",8]]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,[[]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,[[]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[]]],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["formatter",3]],["result",6]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[],["result",4]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[],["result",4]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[],["result",4]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[],["result",4]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[],["result",4]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[],["result",4]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[],["result",4]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[],["result",4]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[],["result",4]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[],["result",4]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[],["result",4]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[],["result",4]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[],["result",4]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[],["result",4]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[],["result",4]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[],["result",4]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[],["result",4]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[],["result",4]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[],["result",4]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[],["result",4]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[],["result",4]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[],["result",4]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["formatter",3]],["result",6]]],[11,"visit_bool","","The input contains a boolean.",12,[[],["result",4]]],[11,"visit_i8","","The input contains an `i8`.",12,[[],["result",4]]],[11,"visit_i16","","The input contains an `i16`.",12,[[],["result",4]]],[11,"visit_i32","","The input contains an `i32`.",12,[[],["result",4]]],[11,"visit_i64","","The input contains an `i64`.",12,[[],["result",4]]],[11,"visit_i128","","The input contains a `i128`.",12,[[],["result",4]]],[11,"visit_u8","","The input contains a `u8`.",12,[[],["result",4]]],[11,"visit_u16","","The input contains a `u16`.",12,[[],["result",4]]],[11,"visit_u32","","The input contains a `u32`.",12,[[],["result",4]]],[11,"visit_u64","","The input contains a `u64`.",12,[[],["result",4]]],[11,"visit_u128","","The input contains a `u128`.",12,[[],["result",4]]],[11,"visit_f32","","The input contains an `f32`.",12,[[],["result",4]]],[11,"visit_f64","","The input contains an `f64`.",12,[[],["result",4]]],[11,"visit_char","","The input contains a `char`.",12,[[],["result",4]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[],["result",4]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[],["result",4]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["string",3]],["result",4]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,[[],["result",4]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,[[],["result",4]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["vec",3]],["result",4]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result",4]]],[11,"visit_some","","The input contains an optional that is present.",12,[[],["result",4]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[],["result",4]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[],["result",4]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[],["result",4]]],[11,"visit_map","","The input contains a key-value map.",12,[[],["result",4]]],[11,"visit_enum","","The input contains an enum.",12,[[],["result",4]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",13,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[],[["result",4],["option",4]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[],[["option",4],["result",4]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[],["option",4]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[],[["result",4],["option",4]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[],["result",4]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[],[["option",4],["result",4]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[],[["option",4],["result",4]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[],["result",4]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[],["option",4]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,null],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[],["result",4]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[],["result",4]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result",4]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[],["result",4]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result",4]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[],["result",4]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[],["result",4]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a `Serialize` implementation encounters any…",18,[[]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[],["result",4]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from `serialize_seq` for serializing the…",20,null],[16,"SerializeTuple","","Type returned from `serialize_tuple` for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from `serialize_tuple_struct` for…",20,null],[16,"SerializeTupleVariant","","Type returned from `serialize_tuple_variant` for…",20,null],[16,"SerializeMap","","Type returned from `serialize_map` for serializing the…",20,null],[16,"SerializeStruct","","Type returned from `serialize_struct` for serializing the…",20,null],[16,"SerializeStructVariant","","Type returned from `serialize_struct_variant` for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[],["result",4]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[],["result",4]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[],["result",4]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[],["result",4]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[],["result",4]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[],["result",4]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[],["result",4]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[],["result",4]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[],["result",4]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[],["result",4]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[],["result",4]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[],["result",4]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",20,[[],["result",4]]],[10,"serialize_str","","Serialize a `&str`.",20,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result",4]]],[10,"serialize_none","","Serialize a `None` value.",20,[[],["result",4]]],[10,"serialize_some","","Serialize a `Some(T)` value.",20,[[],["result",4]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",20,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[],["result",4]]],[10,"end","","Finish serializing a sequence.",21,[[],["result",4]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[],["result",4]]],[10,"end","","Finish serializing a tuple.",22,[[],["result",4]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[],["result",4]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result",4]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[],["result",4]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result",4]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[],["result",4]]],[10,"serialize_value","","Serialize a map value.",25,[[],["result",4]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[],["result",4]]],[10,"end","","Finish serializing a map.",25,[[],["result",4]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[],["result",4]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[],["result",4]]],[10,"end","","Finish serializing a struct.",26,[[],["result",4]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[],["result",4]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[],["result",4]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result",4]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[],["result",4]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[],["result",4]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[],["result",4]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[],["result",4]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[],["result",4]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[],["result",4]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[],["result",4]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[],["result",4]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[],["result",4]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[],["result",4]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[],["result",4]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[],["result",4]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[],["result",4]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[],["result",4]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[],["result",4]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[],["result",4]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[],["result",4]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[],["result",4]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[],["result",4]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[],["result",4]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[],["result",4]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[],["result",4]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from `serialize_seq` for serializing the…",20,null],[16,"SerializeTuple","","Type returned from `serialize_tuple` for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from `serialize_tuple_struct` for…",20,null],[16,"SerializeTupleVariant","","Type returned from `serialize_tuple_variant` for…",20,null],[16,"SerializeMap","","Type returned from `serialize_map` for serializing the…",20,null],[16,"SerializeStruct","","Type returned from `serialize_struct` for serializing the…",20,null],[16,"SerializeStructVariant","","Type returned from `serialize_struct_variant` for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[],["result",4]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[],["result",4]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[],["result",4]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[],["result",4]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[],["result",4]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[],["result",4]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[],["result",4]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[],["result",4]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[],["result",4]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[],["result",4]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[],["result",4]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[],["result",4]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",20,[[],["result",4]]],[10,"serialize_str","","Serialize a `&str`.",20,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result",4]]],[10,"serialize_none","","Serialize a `None` value.",20,[[],["result",4]]],[10,"serialize_some","","Serialize a `Some(T)` value.",20,[[],["result",4]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",20,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"fmt","serde::de","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","serde::de::value","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","serde::ser","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"deserialize","serde::de","",28,[[],[["ignoredany",3],["result",4]]]],[11,"deserialize_bool","serde::de::value","",30,[[],["result",4]]],[11,"deserialize_i8","","",30,[[],["result",4]]],[11,"deserialize_i16","","",30,[[],["result",4]]],[11,"deserialize_i32","","",30,[[],["result",4]]],[11,"deserialize_i64","","",30,[[],["result",4]]],[11,"deserialize_i128","","",30,[[],["result",4]]],[11,"deserialize_u8","","",30,[[],["result",4]]],[11,"deserialize_u16","","",30,[[],["result",4]]],[11,"deserialize_u32","","",30,[[],["result",4]]],[11,"deserialize_u64","","",30,[[],["result",4]]],[11,"deserialize_u128","","",30,[[],["result",4]]],[11,"deserialize_f32","","",30,[[],["result",4]]],[11,"deserialize_f64","","",30,[[],["result",4]]],[11,"deserialize_char","","",30,[[],["result",4]]],[11,"deserialize_str","","",30,[[],["result",4]]],[11,"deserialize_string","","",30,[[],["result",4]]],[11,"deserialize_bytes","","",30,[[],["result",4]]],[11,"deserialize_byte_buf","","",30,[[],["result",4]]],[11,"deserialize_unit","","",30,[[],["result",4]]],[11,"deserialize_unit_struct","","",30,[[],["result",4]]],[11,"deserialize_newtype_struct","","",30,[[],["result",4]]],[11,"deserialize_seq","","",30,[[],["result",4]]],[11,"deserialize_tuple","","",30,[[],["result",4]]],[11,"deserialize_tuple_struct","","",30,[[],["result",4]]],[11,"deserialize_map","","",30,[[],["result",4]]],[11,"deserialize_struct","","",30,[[],["result",4]]],[11,"deserialize_enum","","",30,[[],["result",4]]],[11,"deserialize_identifier","","",30,[[],["result",4]]],[11,"deserialize_ignored_any","","",30,[[],["result",4]]],[11,"deserialize_any","","",30,[[],["result",4]]],[11,"deserialize_option","","",30,[[],["result",4]]],[11,"deserialize_bool","","",31,[[],["result",4]]],[11,"deserialize_i8","","",31,[[],["result",4]]],[11,"deserialize_i16","","",31,[[],["result",4]]],[11,"deserialize_i32","","",31,[[],["result",4]]],[11,"deserialize_i64","","",31,[[],["result",4]]],[11,"deserialize_i128","","",31,[[],["result",4]]],[11,"deserialize_u8","","",31,[[],["result",4]]],[11,"deserialize_u16","","",31,[[],["result",4]]],[11,"deserialize_u32","","",31,[[],["result",4]]],[11,"deserialize_u64","","",31,[[],["result",4]]],[11,"deserialize_u128","","",31,[[],["result",4]]],[11,"deserialize_f32","","",31,[[],["result",4]]],[11,"deserialize_f64","","",31,[[],["result",4]]],[11,"deserialize_char","","",31,[[],["result",4]]],[11,"deserialize_str","","",31,[[],["result",4]]],[11,"deserialize_string","","",31,[[],["result",4]]],[11,"deserialize_bytes","","",31,[[],["result",4]]],[11,"deserialize_byte_buf","","",31,[[],["result",4]]],[11,"deserialize_option","","",31,[[],["result",4]]],[11,"deserialize_unit","","",31,[[],["result",4]]],[11,"deserialize_unit_struct","","",31,[[],["result",4]]],[11,"deserialize_newtype_struct","","",31,[[],["result",4]]],[11,"deserialize_seq","","",31,[[],["result",4]]],[11,"deserialize_tuple","","",31,[[],["result",4]]],[11,"deserialize_tuple_struct","","",31,[[],["result",4]]],[11,"deserialize_map","","",31,[[],["result",4]]],[11,"deserialize_struct","","",31,[[],["result",4]]],[11,"deserialize_enum","","",31,[[],["result",4]]],[11,"deserialize_identifier","","",31,[[],["result",4]]],[11,"deserialize_ignored_any","","",31,[[],["result",4]]],[11,"deserialize_any","","",31,[[],["result",4]]],[11,"deserialize_bool","","",32,[[],["result",4]]],[11,"deserialize_i8","","",32,[[],["result",4]]],[11,"deserialize_i16","","",32,[[],["result",4]]],[11,"deserialize_i32","","",32,[[],["result",4]]],[11,"deserialize_i64","","",32,[[],["result",4]]],[11,"deserialize_i128","","",32,[[],["result",4]]],[11,"deserialize_u8","","",32,[[],["result",4]]],[11,"deserialize_u16","","",32,[[],["result",4]]],[11,"deserialize_u32","","",32,[[],["result",4]]],[11,"deserialize_u64","","",32,[[],["result",4]]],[11,"deserialize_u128","","",32,[[],["result",4]]],[11,"deserialize_f32","","",32,[[],["result",4]]],[11,"deserialize_f64","","",32,[[],["result",4]]],[11,"deserialize_char","","",32,[[],["result",4]]],[11,"deserialize_str","","",32,[[],["result",4]]],[11,"deserialize_string","","",32,[[],["result",4]]],[11,"deserialize_bytes","","",32,[[],["result",4]]],[11,"deserialize_byte_buf","","",32,[[],["result",4]]],[11,"deserialize_option","","",32,[[],["result",4]]],[11,"deserialize_unit","","",32,[[],["result",4]]],[11,"deserialize_unit_struct","","",32,[[],["result",4]]],[11,"deserialize_newtype_struct","","",32,[[],["result",4]]],[11,"deserialize_seq","","",32,[[],["result",4]]],[11,"deserialize_tuple","","",32,[[],["result",4]]],[11,"deserialize_tuple_struct","","",32,[[],["result",4]]],[11,"deserialize_map","","",32,[[],["result",4]]],[11,"deserialize_struct","","",32,[[],["result",4]]],[11,"deserialize_enum","","",32,[[],["result",4]]],[11,"deserialize_identifier","","",32,[[],["result",4]]],[11,"deserialize_ignored_any","","",32,[[],["result",4]]],[11,"deserialize_any","","",32,[[],["result",4]]],[11,"deserialize_bool","","",33,[[],["result",4]]],[11,"deserialize_i8","","",33,[[],["result",4]]],[11,"deserialize_i16","","",33,[[],["result",4]]],[11,"deserialize_i32","","",33,[[],["result",4]]],[11,"deserialize_i64","","",33,[[],["result",4]]],[11,"deserialize_i128","","",33,[[],["result",4]]],[11,"deserialize_u8","","",33,[[],["result",4]]],[11,"deserialize_u16","","",33,[[],["result",4]]],[11,"deserialize_u32","","",33,[[],["result",4]]],[11,"deserialize_u64","","",33,[[],["result",4]]],[11,"deserialize_u128","","",33,[[],["result",4]]],[11,"deserialize_f32","","",33,[[],["result",4]]],[11,"deserialize_f64","","",33,[[],["result",4]]],[11,"deserialize_char","","",33,[[],["result",4]]],[11,"deserialize_str","","",33,[[],["result",4]]],[11,"deserialize_string","","",33,[[],["result",4]]],[11,"deserialize_bytes","","",33,[[],["result",4]]],[11,"deserialize_byte_buf","","",33,[[],["result",4]]],[11,"deserialize_option","","",33,[[],["result",4]]],[11,"deserialize_unit","","",33,[[],["result",4]]],[11,"deserialize_unit_struct","","",33,[[],["result",4]]],[11,"deserialize_newtype_struct","","",33,[[],["result",4]]],[11,"deserialize_seq","","",33,[[],["result",4]]],[11,"deserialize_tuple","","",33,[[],["result",4]]],[11,"deserialize_tuple_struct","","",33,[[],["result",4]]],[11,"deserialize_map","","",33,[[],["result",4]]],[11,"deserialize_struct","","",33,[[],["result",4]]],[11,"deserialize_enum","","",33,[[],["result",4]]],[11,"deserialize_identifier","","",33,[[],["result",4]]],[11,"deserialize_ignored_any","","",33,[[],["result",4]]],[11,"deserialize_any","","",33,[[],["result",4]]],[11,"deserialize_bool","","",34,[[],["result",4]]],[11,"deserialize_i8","","",34,[[],["result",4]]],[11,"deserialize_i16","","",34,[[],["result",4]]],[11,"deserialize_i32","","",34,[[],["result",4]]],[11,"deserialize_i64","","",34,[[],["result",4]]],[11,"deserialize_i128","","",34,[[],["result",4]]],[11,"deserialize_u8","","",34,[[],["result",4]]],[11,"deserialize_u16","","",34,[[],["result",4]]],[11,"deserialize_u32","","",34,[[],["result",4]]],[11,"deserialize_u64","","",34,[[],["result",4]]],[11,"deserialize_u128","","",34,[[],["result",4]]],[11,"deserialize_f32","","",34,[[],["result",4]]],[11,"deserialize_f64","","",34,[[],["result",4]]],[11,"deserialize_char","","",34,[[],["result",4]]],[11,"deserialize_str","","",34,[[],["result",4]]],[11,"deserialize_string","","",34,[[],["result",4]]],[11,"deserialize_bytes","","",34,[[],["result",4]]],[11,"deserialize_byte_buf","","",34,[[],["result",4]]],[11,"deserialize_option","","",34,[[],["result",4]]],[11,"deserialize_unit","","",34,[[],["result",4]]],[11,"deserialize_unit_struct","","",34,[[],["result",4]]],[11,"deserialize_newtype_struct","","",34,[[],["result",4]]],[11,"deserialize_seq","","",34,[[],["result",4]]],[11,"deserialize_tuple","","",34,[[],["result",4]]],[11,"deserialize_tuple_struct","","",34,[[],["result",4]]],[11,"deserialize_map","","",34,[[],["result",4]]],[11,"deserialize_struct","","",34,[[],["result",4]]],[11,"deserialize_enum","","",34,[[],["result",4]]],[11,"deserialize_identifier","","",34,[[],["result",4]]],[11,"deserialize_ignored_any","","",34,[[],["result",4]]],[11,"deserialize_any","","",34,[[],["result",4]]],[11,"deserialize_bool","","",35,[[],["result",4]]],[11,"deserialize_i8","","",35,[[],["result",4]]],[11,"deserialize_i16","","",35,[[],["result",4]]],[11,"deserialize_i32","","",35,[[],["result",4]]],[11,"deserialize_i64","","",35,[[],["result",4]]],[11,"deserialize_i128","","",35,[[],["result",4]]],[11,"deserialize_u8","","",35,[[],["result",4]]],[11,"deserialize_u16","","",35,[[],["result",4]]],[11,"deserialize_u32","","",35,[[],["result",4]]],[11,"deserialize_u64","","",35,[[],["result",4]]],[11,"deserialize_u128","","",35,[[],["result",4]]],[11,"deserialize_f32","","",35,[[],["result",4]]],[11,"deserialize_f64","","",35,[[],["result",4]]],[11,"deserialize_char","","",35,[[],["result",4]]],[11,"deserialize_str","","",35,[[],["result",4]]],[11,"deserialize_string","","",35,[[],["result",4]]],[11,"deserialize_bytes","","",35,[[],["result",4]]],[11,"deserialize_byte_buf","","",35,[[],["result",4]]],[11,"deserialize_option","","",35,[[],["result",4]]],[11,"deserialize_unit","","",35,[[],["result",4]]],[11,"deserialize_unit_struct","","",35,[[],["result",4]]],[11,"deserialize_newtype_struct","","",35,[[],["result",4]]],[11,"deserialize_seq","","",35,[[],["result",4]]],[11,"deserialize_tuple","","",35,[[],["result",4]]],[11,"deserialize_tuple_struct","","",35,[[],["result",4]]],[11,"deserialize_map","","",35,[[],["result",4]]],[11,"deserialize_struct","","",35,[[],["result",4]]],[11,"deserialize_enum","","",35,[[],["result",4]]],[11,"deserialize_identifier","","",35,[[],["result",4]]],[11,"deserialize_ignored_any","","",35,[[],["result",4]]],[11,"deserialize_any","","",35,[[],["result",4]]],[11,"deserialize_bool","","",36,[[],["result",4]]],[11,"deserialize_i8","","",36,[[],["result",4]]],[11,"deserialize_i16","","",36,[[],["result",4]]],[11,"deserialize_i32","","",36,[[],["result",4]]],[11,"deserialize_i64","","",36,[[],["result",4]]],[11,"deserialize_i128","","",36,[[],["result",4]]],[11,"deserialize_u8","","",36,[[],["result",4]]],[11,"deserialize_u16","","",36,[[],["result",4]]],[11,"deserialize_u32","","",36,[[],["result",4]]],[11,"deserialize_u64","","",36,[[],["result",4]]],[11,"deserialize_u128","","",36,[[],["result",4]]],[11,"deserialize_f32","","",36,[[],["result",4]]],[11,"deserialize_f64","","",36,[[],["result",4]]],[11,"deserialize_char","","",36,[[],["result",4]]],[11,"deserialize_str","","",36,[[],["result",4]]],[11,"deserialize_string","","",36,[[],["result",4]]],[11,"deserialize_bytes","","",36,[[],["result",4]]],[11,"deserialize_byte_buf","","",36,[[],["result",4]]],[11,"deserialize_option","","",36,[[],["result",4]]],[11,"deserialize_unit","","",36,[[],["result",4]]],[11,"deserialize_unit_struct","","",36,[[],["result",4]]],[11,"deserialize_newtype_struct","","",36,[[],["result",4]]],[11,"deserialize_seq","","",36,[[],["result",4]]],[11,"deserialize_tuple","","",36,[[],["result",4]]],[11,"deserialize_tuple_struct","","",36,[[],["result",4]]],[11,"deserialize_map","","",36,[[],["result",4]]],[11,"deserialize_struct","","",36,[[],["result",4]]],[11,"deserialize_enum","","",36,[[],["result",4]]],[11,"deserialize_identifier","","",36,[[],["result",4]]],[11,"deserialize_ignored_any","","",36,[[],["result",4]]],[11,"deserialize_any","","",36,[[],["result",4]]],[11,"deserialize_bool","","",37,[[],["result",4]]],[11,"deserialize_i8","","",37,[[],["result",4]]],[11,"deserialize_i16","","",37,[[],["result",4]]],[11,"deserialize_i32","","",37,[[],["result",4]]],[11,"deserialize_i64","","",37,[[],["result",4]]],[11,"deserialize_i128","","",37,[[],["result",4]]],[11,"deserialize_u8","","",37,[[],["result",4]]],[11,"deserialize_u16","","",37,[[],["result",4]]],[11,"deserialize_u32","","",37,[[],["result",4]]],[11,"deserialize_u64","","",37,[[],["result",4]]],[11,"deserialize_u128","","",37,[[],["result",4]]],[11,"deserialize_f32","","",37,[[],["result",4]]],[11,"deserialize_f64","","",37,[[],["result",4]]],[11,"deserialize_char","","",37,[[],["result",4]]],[11,"deserialize_str","","",37,[[],["result",4]]],[11,"deserialize_string","","",37,[[],["result",4]]],[11,"deserialize_bytes","","",37,[[],["result",4]]],[11,"deserialize_byte_buf","","",37,[[],["result",4]]],[11,"deserialize_option","","",37,[[],["result",4]]],[11,"deserialize_unit","","",37,[[],["result",4]]],[11,"deserialize_unit_struct","","",37,[[],["result",4]]],[11,"deserialize_newtype_struct","","",37,[[],["result",4]]],[11,"deserialize_seq","","",37,[[],["result",4]]],[11,"deserialize_tuple","","",37,[[],["result",4]]],[11,"deserialize_tuple_struct","","",37,[[],["result",4]]],[11,"deserialize_map","","",37,[[],["result",4]]],[11,"deserialize_struct","","",37,[[],["result",4]]],[11,"deserialize_enum","","",37,[[],["result",4]]],[11,"deserialize_identifier","","",37,[[],["result",4]]],[11,"deserialize_ignored_any","","",37,[[],["result",4]]],[11,"deserialize_any","","",37,[[],["result",4]]],[11,"deserialize_bool","","",38,[[],["result",4]]],[11,"deserialize_i8","","",38,[[],["result",4]]],[11,"deserialize_i16","","",38,[[],["result",4]]],[11,"deserialize_i32","","",38,[[],["result",4]]],[11,"deserialize_i64","","",38,[[],["result",4]]],[11,"deserialize_i128","","",38,[[],["result",4]]],[11,"deserialize_u8","","",38,[[],["result",4]]],[11,"deserialize_u16","","",38,[[],["result",4]]],[11,"deserialize_u32","","",38,[[],["result",4]]],[11,"deserialize_u64","","",38,[[],["result",4]]],[11,"deserialize_u128","","",38,[[],["result",4]]],[11,"deserialize_f32","","",38,[[],["result",4]]],[11,"deserialize_f64","","",38,[[],["result",4]]],[11,"deserialize_char","","",38,[[],["result",4]]],[11,"deserialize_str","","",38,[[],["result",4]]],[11,"deserialize_string","","",38,[[],["result",4]]],[11,"deserialize_bytes","","",38,[[],["result",4]]],[11,"deserialize_byte_buf","","",38,[[],["result",4]]],[11,"deserialize_option","","",38,[[],["result",4]]],[11,"deserialize_unit","","",38,[[],["result",4]]],[11,"deserialize_unit_struct","","",38,[[],["result",4]]],[11,"deserialize_newtype_struct","","",38,[[],["result",4]]],[11,"deserialize_seq","","",38,[[],["result",4]]],[11,"deserialize_tuple","","",38,[[],["result",4]]],[11,"deserialize_tuple_struct","","",38,[[],["result",4]]],[11,"deserialize_map","","",38,[[],["result",4]]],[11,"deserialize_struct","","",38,[[],["result",4]]],[11,"deserialize_enum","","",38,[[],["result",4]]],[11,"deserialize_identifier","","",38,[[],["result",4]]],[11,"deserialize_ignored_any","","",38,[[],["result",4]]],[11,"deserialize_any","","",38,[[],["result",4]]],[11,"deserialize_bool","","",39,[[],["result",4]]],[11,"deserialize_i8","","",39,[[],["result",4]]],[11,"deserialize_i16","","",39,[[],["result",4]]],[11,"deserialize_i32","","",39,[[],["result",4]]],[11,"deserialize_i64","","",39,[[],["result",4]]],[11,"deserialize_i128","","",39,[[],["result",4]]],[11,"deserialize_u8","","",39,[[],["result",4]]],[11,"deserialize_u16","","",39,[[],["result",4]]],[11,"deserialize_u32","","",39,[[],["result",4]]],[11,"deserialize_u64","","",39,[[],["result",4]]],[11,"deserialize_u128","","",39,[[],["result",4]]],[11,"deserialize_f32","","",39,[[],["result",4]]],[11,"deserialize_f64","","",39,[[],["result",4]]],[11,"deserialize_char","","",39,[[],["result",4]]],[11,"deserialize_str","","",39,[[],["result",4]]],[11,"deserialize_string","","",39,[[],["result",4]]],[11,"deserialize_bytes","","",39,[[],["result",4]]],[11,"deserialize_byte_buf","","",39,[[],["result",4]]],[11,"deserialize_option","","",39,[[],["result",4]]],[11,"deserialize_unit","","",39,[[],["result",4]]],[11,"deserialize_unit_struct","","",39,[[],["result",4]]],[11,"deserialize_newtype_struct","","",39,[[],["result",4]]],[11,"deserialize_seq","","",39,[[],["result",4]]],[11,"deserialize_tuple","","",39,[[],["result",4]]],[11,"deserialize_tuple_struct","","",39,[[],["result",4]]],[11,"deserialize_map","","",39,[[],["result",4]]],[11,"deserialize_struct","","",39,[[],["result",4]]],[11,"deserialize_enum","","",39,[[],["result",4]]],[11,"deserialize_identifier","","",39,[[],["result",4]]],[11,"deserialize_ignored_any","","",39,[[],["result",4]]],[11,"deserialize_any","","",39,[[],["result",4]]],[11,"deserialize_bool","","",40,[[],["result",4]]],[11,"deserialize_i8","","",40,[[],["result",4]]],[11,"deserialize_i16","","",40,[[],["result",4]]],[11,"deserialize_i32","","",40,[[],["result",4]]],[11,"deserialize_i64","","",40,[[],["result",4]]],[11,"deserialize_i128","","",40,[[],["result",4]]],[11,"deserialize_u8","","",40,[[],["result",4]]],[11,"deserialize_u16","","",40,[[],["result",4]]],[11,"deserialize_u32","","",40,[[],["result",4]]],[11,"deserialize_u64","","",40,[[],["result",4]]],[11,"deserialize_u128","","",40,[[],["result",4]]],[11,"deserialize_f32","","",40,[[],["result",4]]],[11,"deserialize_f64","","",40,[[],["result",4]]],[11,"deserialize_char","","",40,[[],["result",4]]],[11,"deserialize_str","","",40,[[],["result",4]]],[11,"deserialize_string","","",40,[[],["result",4]]],[11,"deserialize_bytes","","",40,[[],["result",4]]],[11,"deserialize_byte_buf","","",40,[[],["result",4]]],[11,"deserialize_option","","",40,[[],["result",4]]],[11,"deserialize_unit","","",40,[[],["result",4]]],[11,"deserialize_unit_struct","","",40,[[],["result",4]]],[11,"deserialize_newtype_struct","","",40,[[],["result",4]]],[11,"deserialize_seq","","",40,[[],["result",4]]],[11,"deserialize_tuple","","",40,[[],["result",4]]],[11,"deserialize_tuple_struct","","",40,[[],["result",4]]],[11,"deserialize_map","","",40,[[],["result",4]]],[11,"deserialize_struct","","",40,[[],["result",4]]],[11,"deserialize_enum","","",40,[[],["result",4]]],[11,"deserialize_identifier","","",40,[[],["result",4]]],[11,"deserialize_ignored_any","","",40,[[],["result",4]]],[11,"deserialize_any","","",40,[[],["result",4]]],[11,"deserialize_bool","","",41,[[],["result",4]]],[11,"deserialize_i8","","",41,[[],["result",4]]],[11,"deserialize_i16","","",41,[[],["result",4]]],[11,"deserialize_i32","","",41,[[],["result",4]]],[11,"deserialize_i64","","",41,[[],["result",4]]],[11,"deserialize_i128","","",41,[[],["result",4]]],[11,"deserialize_u8","","",41,[[],["result",4]]],[11,"deserialize_u16","","",41,[[],["result",4]]],[11,"deserialize_u32","","",41,[[],["result",4]]],[11,"deserialize_u64","","",41,[[],["result",4]]],[11,"deserialize_u128","","",41,[[],["result",4]]],[11,"deserialize_f32","","",41,[[],["result",4]]],[11,"deserialize_f64","","",41,[[],["result",4]]],[11,"deserialize_char","","",41,[[],["result",4]]],[11,"deserialize_str","","",41,[[],["result",4]]],[11,"deserialize_string","","",41,[[],["result",4]]],[11,"deserialize_bytes","","",41,[[],["result",4]]],[11,"deserialize_byte_buf","","",41,[[],["result",4]]],[11,"deserialize_option","","",41,[[],["result",4]]],[11,"deserialize_unit","","",41,[[],["result",4]]],[11,"deserialize_unit_struct","","",41,[[],["result",4]]],[11,"deserialize_newtype_struct","","",41,[[],["result",4]]],[11,"deserialize_seq","","",41,[[],["result",4]]],[11,"deserialize_tuple","","",41,[[],["result",4]]],[11,"deserialize_tuple_struct","","",41,[[],["result",4]]],[11,"deserialize_map","","",41,[[],["result",4]]],[11,"deserialize_struct","","",41,[[],["result",4]]],[11,"deserialize_enum","","",41,[[],["result",4]]],[11,"deserialize_identifier","","",41,[[],["result",4]]],[11,"deserialize_ignored_any","","",41,[[],["result",4]]],[11,"deserialize_any","","",41,[[],["result",4]]],[11,"deserialize_bool","","",42,[[],["result",4]]],[11,"deserialize_i8","","",42,[[],["result",4]]],[11,"deserialize_i16","","",42,[[],["result",4]]],[11,"deserialize_i32","","",42,[[],["result",4]]],[11,"deserialize_i64","","",42,[[],["result",4]]],[11,"deserialize_i128","","",42,[[],["result",4]]],[11,"deserialize_u8","","",42,[[],["result",4]]],[11,"deserialize_u16","","",42,[[],["result",4]]],[11,"deserialize_u32","","",42,[[],["result",4]]],[11,"deserialize_u64","","",42,[[],["result",4]]],[11,"deserialize_u128","","",42,[[],["result",4]]],[11,"deserialize_f32","","",42,[[],["result",4]]],[11,"deserialize_f64","","",42,[[],["result",4]]],[11,"deserialize_char","","",42,[[],["result",4]]],[11,"deserialize_str","","",42,[[],["result",4]]],[11,"deserialize_string","","",42,[[],["result",4]]],[11,"deserialize_bytes","","",42,[[],["result",4]]],[11,"deserialize_byte_buf","","",42,[[],["result",4]]],[11,"deserialize_option","","",42,[[],["result",4]]],[11,"deserialize_unit","","",42,[[],["result",4]]],[11,"deserialize_unit_struct","","",42,[[],["result",4]]],[11,"deserialize_newtype_struct","","",42,[[],["result",4]]],[11,"deserialize_seq","","",42,[[],["result",4]]],[11,"deserialize_tuple","","",42,[[],["result",4]]],[11,"deserialize_tuple_struct","","",42,[[],["result",4]]],[11,"deserialize_map","","",42,[[],["result",4]]],[11,"deserialize_struct","","",42,[[],["result",4]]],[11,"deserialize_enum","","",42,[[],["result",4]]],[11,"deserialize_identifier","","",42,[[],["result",4]]],[11,"deserialize_ignored_any","","",42,[[],["result",4]]],[11,"deserialize_any","","",42,[[],["result",4]]],[11,"deserialize_bool","","",43,[[],["result",4]]],[11,"deserialize_i8","","",43,[[],["result",4]]],[11,"deserialize_i16","","",43,[[],["result",4]]],[11,"deserialize_i32","","",43,[[],["result",4]]],[11,"deserialize_i64","","",43,[[],["result",4]]],[11,"deserialize_i128","","",43,[[],["result",4]]],[11,"deserialize_u8","","",43,[[],["result",4]]],[11,"deserialize_u16","","",43,[[],["result",4]]],[11,"deserialize_u32","","",43,[[],["result",4]]],[11,"deserialize_u64","","",43,[[],["result",4]]],[11,"deserialize_u128","","",43,[[],["result",4]]],[11,"deserialize_f32","","",43,[[],["result",4]]],[11,"deserialize_f64","","",43,[[],["result",4]]],[11,"deserialize_char","","",43,[[],["result",4]]],[11,"deserialize_str","","",43,[[],["result",4]]],[11,"deserialize_string","","",43,[[],["result",4]]],[11,"deserialize_bytes","","",43,[[],["result",4]]],[11,"deserialize_byte_buf","","",43,[[],["result",4]]],[11,"deserialize_option","","",43,[[],["result",4]]],[11,"deserialize_unit","","",43,[[],["result",4]]],[11,"deserialize_unit_struct","","",43,[[],["result",4]]],[11,"deserialize_newtype_struct","","",43,[[],["result",4]]],[11,"deserialize_seq","","",43,[[],["result",4]]],[11,"deserialize_tuple","","",43,[[],["result",4]]],[11,"deserialize_tuple_struct","","",43,[[],["result",4]]],[11,"deserialize_map","","",43,[[],["result",4]]],[11,"deserialize_struct","","",43,[[],["result",4]]],[11,"deserialize_enum","","",43,[[],["result",4]]],[11,"deserialize_identifier","","",43,[[],["result",4]]],[11,"deserialize_ignored_any","","",43,[[],["result",4]]],[11,"deserialize_any","","",43,[[],["result",4]]],[11,"deserialize_bool","","",44,[[],["result",4]]],[11,"deserialize_i8","","",44,[[],["result",4]]],[11,"deserialize_i16","","",44,[[],["result",4]]],[11,"deserialize_i32","","",44,[[],["result",4]]],[11,"deserialize_i64","","",44,[[],["result",4]]],[11,"deserialize_i128","","",44,[[],["result",4]]],[11,"deserialize_u8","","",44,[[],["result",4]]],[11,"deserialize_u16","","",44,[[],["result",4]]],[11,"deserialize_u32","","",44,[[],["result",4]]],[11,"deserialize_u64","","",44,[[],["result",4]]],[11,"deserialize_u128","","",44,[[],["result",4]]],[11,"deserialize_f32","","",44,[[],["result",4]]],[11,"deserialize_f64","","",44,[[],["result",4]]],[11,"deserialize_char","","",44,[[],["result",4]]],[11,"deserialize_str","","",44,[[],["result",4]]],[11,"deserialize_string","","",44,[[],["result",4]]],[11,"deserialize_bytes","","",44,[[],["result",4]]],[11,"deserialize_byte_buf","","",44,[[],["result",4]]],[11,"deserialize_option","","",44,[[],["result",4]]],[11,"deserialize_unit","","",44,[[],["result",4]]],[11,"deserialize_unit_struct","","",44,[[],["result",4]]],[11,"deserialize_newtype_struct","","",44,[[],["result",4]]],[11,"deserialize_seq","","",44,[[],["result",4]]],[11,"deserialize_tuple","","",44,[[],["result",4]]],[11,"deserialize_tuple_struct","","",44,[[],["result",4]]],[11,"deserialize_map","","",44,[[],["result",4]]],[11,"deserialize_struct","","",44,[[],["result",4]]],[11,"deserialize_enum","","",44,[[],["result",4]]],[11,"deserialize_identifier","","",44,[[],["result",4]]],[11,"deserialize_ignored_any","","",44,[[],["result",4]]],[11,"deserialize_any","","",44,[[],["result",4]]],[11,"deserialize_bool","","",45,[[],["result",4]]],[11,"deserialize_i8","","",45,[[],["result",4]]],[11,"deserialize_i16","","",45,[[],["result",4]]],[11,"deserialize_i32","","",45,[[],["result",4]]],[11,"deserialize_i64","","",45,[[],["result",4]]],[11,"deserialize_i128","","",45,[[],["result",4]]],[11,"deserialize_u8","","",45,[[],["result",4]]],[11,"deserialize_u16","","",45,[[],["result",4]]],[11,"deserialize_u32","","",45,[[],["result",4]]],[11,"deserialize_u64","","",45,[[],["result",4]]],[11,"deserialize_u128","","",45,[[],["result",4]]],[11,"deserialize_f32","","",45,[[],["result",4]]],[11,"deserialize_f64","","",45,[[],["result",4]]],[11,"deserialize_char","","",45,[[],["result",4]]],[11,"deserialize_str","","",45,[[],["result",4]]],[11,"deserialize_string","","",45,[[],["result",4]]],[11,"deserialize_bytes","","",45,[[],["result",4]]],[11,"deserialize_byte_buf","","",45,[[],["result",4]]],[11,"deserialize_option","","",45,[[],["result",4]]],[11,"deserialize_unit","","",45,[[],["result",4]]],[11,"deserialize_unit_struct","","",45,[[],["result",4]]],[11,"deserialize_newtype_struct","","",45,[[],["result",4]]],[11,"deserialize_seq","","",45,[[],["result",4]]],[11,"deserialize_tuple","","",45,[[],["result",4]]],[11,"deserialize_tuple_struct","","",45,[[],["result",4]]],[11,"deserialize_map","","",45,[[],["result",4]]],[11,"deserialize_struct","","",45,[[],["result",4]]],[11,"deserialize_enum","","",45,[[],["result",4]]],[11,"deserialize_identifier","","",45,[[],["result",4]]],[11,"deserialize_ignored_any","","",45,[[],["result",4]]],[11,"deserialize_any","","",45,[[],["result",4]]],[11,"deserialize_bool","","",46,[[],["result",4]]],[11,"deserialize_i8","","",46,[[],["result",4]]],[11,"deserialize_i16","","",46,[[],["result",4]]],[11,"deserialize_i32","","",46,[[],["result",4]]],[11,"deserialize_i64","","",46,[[],["result",4]]],[11,"deserialize_i128","","",46,[[],["result",4]]],[11,"deserialize_u8","","",46,[[],["result",4]]],[11,"deserialize_u16","","",46,[[],["result",4]]],[11,"deserialize_u32","","",46,[[],["result",4]]],[11,"deserialize_u64","","",46,[[],["result",4]]],[11,"deserialize_u128","","",46,[[],["result",4]]],[11,"deserialize_f32","","",46,[[],["result",4]]],[11,"deserialize_f64","","",46,[[],["result",4]]],[11,"deserialize_char","","",46,[[],["result",4]]],[11,"deserialize_str","","",46,[[],["result",4]]],[11,"deserialize_string","","",46,[[],["result",4]]],[11,"deserialize_bytes","","",46,[[],["result",4]]],[11,"deserialize_byte_buf","","",46,[[],["result",4]]],[11,"deserialize_option","","",46,[[],["result",4]]],[11,"deserialize_unit","","",46,[[],["result",4]]],[11,"deserialize_unit_struct","","",46,[[],["result",4]]],[11,"deserialize_newtype_struct","","",46,[[],["result",4]]],[11,"deserialize_seq","","",46,[[],["result",4]]],[11,"deserialize_tuple","","",46,[[],["result",4]]],[11,"deserialize_tuple_struct","","",46,[[],["result",4]]],[11,"deserialize_map","","",46,[[],["result",4]]],[11,"deserialize_struct","","",46,[[],["result",4]]],[11,"deserialize_identifier","","",46,[[],["result",4]]],[11,"deserialize_ignored_any","","",46,[[],["result",4]]],[11,"deserialize_any","","",46,[[],["result",4]]],[11,"deserialize_enum","","",46,[[],["result",4]]],[11,"deserialize_any","","",47,[[],["result",4]]],[11,"deserialize_enum","","",47,[[],["result",4]]],[11,"deserialize_bool","","",47,[[],["result",4]]],[11,"deserialize_i8","","",47,[[],["result",4]]],[11,"deserialize_i16","","",47,[[],["result",4]]],[11,"deserialize_i32","","",47,[[],["result",4]]],[11,"deserialize_i64","","",47,[[],["result",4]]],[11,"deserialize_i128","","",47,[[],["result",4]]],[11,"deserialize_u8","","",47,[[],["result",4]]],[11,"deserialize_u16","","",47,[[],["result",4]]],[11,"deserialize_u32","","",47,[[],["result",4]]],[11,"deserialize_u64","","",47,[[],["result",4]]],[11,"deserialize_u128","","",47,[[],["result",4]]],[11,"deserialize_f32","","",47,[[],["result",4]]],[11,"deserialize_f64","","",47,[[],["result",4]]],[11,"deserialize_char","","",47,[[],["result",4]]],[11,"deserialize_str","","",47,[[],["result",4]]],[11,"deserialize_string","","",47,[[],["result",4]]],[11,"deserialize_bytes","","",47,[[],["result",4]]],[11,"deserialize_byte_buf","","",47,[[],["result",4]]],[11,"deserialize_option","","",47,[[],["result",4]]],[11,"deserialize_unit","","",47,[[],["result",4]]],[11,"deserialize_unit_struct","","",47,[[],["result",4]]],[11,"deserialize_newtype_struct","","",47,[[],["result",4]]],[11,"deserialize_seq","","",47,[[],["result",4]]],[11,"deserialize_tuple","","",47,[[],["result",4]]],[11,"deserialize_tuple_struct","","",47,[[],["result",4]]],[11,"deserialize_map","","",47,[[],["result",4]]],[11,"deserialize_struct","","",47,[[],["result",4]]],[11,"deserialize_identifier","","",47,[[],["result",4]]],[11,"deserialize_ignored_any","","",47,[[],["result",4]]],[11,"deserialize_any","","",1,[[],["result",4]]],[11,"deserialize_enum","","",1,[[],["result",4]]],[11,"deserialize_bool","","",1,[[],["result",4]]],[11,"deserialize_i8","","",1,[[],["result",4]]],[11,"deserialize_i16","","",1,[[],["result",4]]],[11,"deserialize_i32","","",1,[[],["result",4]]],[11,"deserialize_i64","","",1,[[],["result",4]]],[11,"deserialize_i128","","",1,[[],["result",4]]],[11,"deserialize_u8","","",1,[[],["result",4]]],[11,"deserialize_u16","","",1,[[],["result",4]]],[11,"deserialize_u32","","",1,[[],["result",4]]],[11,"deserialize_u64","","",1,[[],["result",4]]],[11,"deserialize_u128","","",1,[[],["result",4]]],[11,"deserialize_f32","","",1,[[],["result",4]]],[11,"deserialize_f64","","",1,[[],["result",4]]],[11,"deserialize_char","","",1,[[],["result",4]]],[11,"deserialize_str","","",1,[[],["result",4]]],[11,"deserialize_string","","",1,[[],["result",4]]],[11,"deserialize_bytes","","",1,[[],["result",4]]],[11,"deserialize_byte_buf","","",1,[[],["result",4]]],[11,"deserialize_option","","",1,[[],["result",4]]],[11,"deserialize_unit","","",1,[[],["result",4]]],[11,"deserialize_unit_struct","","",1,[[],["result",4]]],[11,"deserialize_newtype_struct","","",1,[[],["result",4]]],[11,"deserialize_seq","","",1,[[],["result",4]]],[11,"deserialize_tuple","","",1,[[],["result",4]]],[11,"deserialize_tuple_struct","","",1,[[],["result",4]]],[11,"deserialize_map","","",1,[[],["result",4]]],[11,"deserialize_struct","","",1,[[],["result",4]]],[11,"deserialize_identifier","","",1,[[],["result",4]]],[11,"deserialize_ignored_any","","",1,[[],["result",4]]],[11,"deserialize_any","","",48,[[],["result",4]]],[11,"deserialize_enum","","",48,[[],["result",4]]],[11,"deserialize_bool","","",48,[[],["result",4]]],[11,"deserialize_i8","","",48,[[],["result",4]]],[11,"deserialize_i16","","",48,[[],["result",4]]],[11,"deserialize_i32","","",48,[[],["result",4]]],[11,"deserialize_i64","","",48,[[],["result",4]]],[11,"deserialize_i128","","",48,[[],["result",4]]],[11,"deserialize_u8","","",48,[[],["result",4]]],[11,"deserialize_u16","","",48,[[],["result",4]]],[11,"deserialize_u32","","",48,[[],["result",4]]],[11,"deserialize_u64","","",48,[[],["result",4]]],[11,"deserialize_u128","","",48,[[],["result",4]]],[11,"deserialize_f32","","",48,[[],["result",4]]],[11,"deserialize_f64","","",48,[[],["result",4]]],[11,"deserialize_char","","",48,[[],["result",4]]],[11,"deserialize_str","","",48,[[],["result",4]]],[11,"deserialize_string","","",48,[[],["result",4]]],[11,"deserialize_bytes","","",48,[[],["result",4]]],[11,"deserialize_byte_buf","","",48,[[],["result",4]]],[11,"deserialize_option","","",48,[[],["result",4]]],[11,"deserialize_unit","","",48,[[],["result",4]]],[11,"deserialize_unit_struct","","",48,[[],["result",4]]],[11,"deserialize_newtype_struct","","",48,[[],["result",4]]],[11,"deserialize_seq","","",48,[[],["result",4]]],[11,"deserialize_tuple","","",48,[[],["result",4]]],[11,"deserialize_tuple_struct","","",48,[[],["result",4]]],[11,"deserialize_map","","",48,[[],["result",4]]],[11,"deserialize_struct","","",48,[[],["result",4]]],[11,"deserialize_identifier","","",48,[[],["result",4]]],[11,"deserialize_ignored_any","","",48,[[],["result",4]]],[11,"deserialize_any","","",49,[[],["result",4]]],[11,"deserialize_enum","","",49,[[],["result",4]]],[11,"deserialize_bool","","",49,[[],["result",4]]],[11,"deserialize_i8","","",49,[[],["result",4]]],[11,"deserialize_i16","","",49,[[],["result",4]]],[11,"deserialize_i32","","",49,[[],["result",4]]],[11,"deserialize_i64","","",49,[[],["result",4]]],[11,"deserialize_i128","","",49,[[],["result",4]]],[11,"deserialize_u8","","",49,[[],["result",4]]],[11,"deserialize_u16","","",49,[[],["result",4]]],[11,"deserialize_u32","","",49,[[],["result",4]]],[11,"deserialize_u64","","",49,[[],["result",4]]],[11,"deserialize_u128","","",49,[[],["result",4]]],[11,"deserialize_f32","","",49,[[],["result",4]]],[11,"deserialize_f64","","",49,[[],["result",4]]],[11,"deserialize_char","","",49,[[],["result",4]]],[11,"deserialize_str","","",49,[[],["result",4]]],[11,"deserialize_string","","",49,[[],["result",4]]],[11,"deserialize_bytes","","",49,[[],["result",4]]],[11,"deserialize_byte_buf","","",49,[[],["result",4]]],[11,"deserialize_option","","",49,[[],["result",4]]],[11,"deserialize_unit","","",49,[[],["result",4]]],[11,"deserialize_unit_struct","","",49,[[],["result",4]]],[11,"deserialize_newtype_struct","","",49,[[],["result",4]]],[11,"deserialize_seq","","",49,[[],["result",4]]],[11,"deserialize_tuple","","",49,[[],["result",4]]],[11,"deserialize_tuple_struct","","",49,[[],["result",4]]],[11,"deserialize_map","","",49,[[],["result",4]]],[11,"deserialize_struct","","",49,[[],["result",4]]],[11,"deserialize_identifier","","",49,[[],["result",4]]],[11,"deserialize_ignored_any","","",49,[[],["result",4]]],[11,"deserialize_any","","",2,[[],["result",4]]],[11,"deserialize_bool","","",2,[[],["result",4]]],[11,"deserialize_i8","","",2,[[],["result",4]]],[11,"deserialize_i16","","",2,[[],["result",4]]],[11,"deserialize_i32","","",2,[[],["result",4]]],[11,"deserialize_i64","","",2,[[],["result",4]]],[11,"deserialize_i128","","",2,[[],["result",4]]],[11,"deserialize_u8","","",2,[[],["result",4]]],[11,"deserialize_u16","","",2,[[],["result",4]]],[11,"deserialize_u32","","",2,[[],["result",4]]],[11,"deserialize_u64","","",2,[[],["result",4]]],[11,"deserialize_u128","","",2,[[],["result",4]]],[11,"deserialize_f32","","",2,[[],["result",4]]],[11,"deserialize_f64","","",2,[[],["result",4]]],[11,"deserialize_char","","",2,[[],["result",4]]],[11,"deserialize_str","","",2,[[],["result",4]]],[11,"deserialize_string","","",2,[[],["result",4]]],[11,"deserialize_bytes","","",2,[[],["result",4]]],[11,"deserialize_byte_buf","","",2,[[],["result",4]]],[11,"deserialize_option","","",2,[[],["result",4]]],[11,"deserialize_unit","","",2,[[],["result",4]]],[11,"deserialize_unit_struct","","",2,[[],["result",4]]],[11,"deserialize_newtype_struct","","",2,[[],["result",4]]],[11,"deserialize_seq","","",2,[[],["result",4]]],[11,"deserialize_tuple","","",2,[[],["result",4]]],[11,"deserialize_tuple_struct","","",2,[[],["result",4]]],[11,"deserialize_map","","",2,[[],["result",4]]],[11,"deserialize_struct","","",2,[[],["result",4]]],[11,"deserialize_identifier","","",2,[[],["result",4]]],[11,"deserialize_ignored_any","","",2,[[],["result",4]]],[11,"deserialize_enum","","",2,[[],["result",4]]],[11,"deserialize_any","","",3,[[],["result",4]]],[11,"deserialize_bool","","",3,[[],["result",4]]],[11,"deserialize_i8","","",3,[[],["result",4]]],[11,"deserialize_i16","","",3,[[],["result",4]]],[11,"deserialize_i32","","",3,[[],["result",4]]],[11,"deserialize_i64","","",3,[[],["result",4]]],[11,"deserialize_i128","","",3,[[],["result",4]]],[11,"deserialize_u8","","",3,[[],["result",4]]],[11,"deserialize_u16","","",3,[[],["result",4]]],[11,"deserialize_u32","","",3,[[],["result",4]]],[11,"deserialize_u64","","",3,[[],["result",4]]],[11,"deserialize_u128","","",3,[[],["result",4]]],[11,"deserialize_f32","","",3,[[],["result",4]]],[11,"deserialize_f64","","",3,[[],["result",4]]],[11,"deserialize_char","","",3,[[],["result",4]]],[11,"deserialize_str","","",3,[[],["result",4]]],[11,"deserialize_string","","",3,[[],["result",4]]],[11,"deserialize_bytes","","",3,[[],["result",4]]],[11,"deserialize_byte_buf","","",3,[[],["result",4]]],[11,"deserialize_option","","",3,[[],["result",4]]],[11,"deserialize_unit","","",3,[[],["result",4]]],[11,"deserialize_unit_struct","","",3,[[],["result",4]]],[11,"deserialize_newtype_struct","","",3,[[],["result",4]]],[11,"deserialize_seq","","",3,[[],["result",4]]],[11,"deserialize_tuple","","",3,[[],["result",4]]],[11,"deserialize_tuple_struct","","",3,[[],["result",4]]],[11,"deserialize_map","","",3,[[],["result",4]]],[11,"deserialize_struct","","",3,[[],["result",4]]],[11,"deserialize_enum","","",3,[[],["result",4]]],[11,"deserialize_identifier","","",3,[[],["result",4]]],[11,"deserialize_ignored_any","","",3,[[],["result",4]]],[11,"deserialize_any","","",4,[[],["result",4]]],[11,"deserialize_bool","","",4,[[],["result",4]]],[11,"deserialize_i8","","",4,[[],["result",4]]],[11,"deserialize_i16","","",4,[[],["result",4]]],[11,"deserialize_i32","","",4,[[],["result",4]]],[11,"deserialize_i64","","",4,[[],["result",4]]],[11,"deserialize_i128","","",4,[[],["result",4]]],[11,"deserialize_u8","","",4,[[],["result",4]]],[11,"deserialize_u16","","",4,[[],["result",4]]],[11,"deserialize_u32","","",4,[[],["result",4]]],[11,"deserialize_u64","","",4,[[],["result",4]]],[11,"deserialize_u128","","",4,[[],["result",4]]],[11,"deserialize_f32","","",4,[[],["result",4]]],[11,"deserialize_f64","","",4,[[],["result",4]]],[11,"deserialize_char","","",4,[[],["result",4]]],[11,"deserialize_str","","",4,[[],["result",4]]],[11,"deserialize_string","","",4,[[],["result",4]]],[11,"deserialize_bytes","","",4,[[],["result",4]]],[11,"deserialize_byte_buf","","",4,[[],["result",4]]],[11,"deserialize_option","","",4,[[],["result",4]]],[11,"deserialize_unit","","",4,[[],["result",4]]],[11,"deserialize_unit_struct","","",4,[[],["result",4]]],[11,"deserialize_newtype_struct","","",4,[[],["result",4]]],[11,"deserialize_seq","","",4,[[],["result",4]]],[11,"deserialize_tuple","","",4,[[],["result",4]]],[11,"deserialize_tuple_struct","","",4,[[],["result",4]]],[11,"deserialize_map","","",4,[[],["result",4]]],[11,"deserialize_struct","","",4,[[],["result",4]]],[11,"deserialize_enum","","",4,[[],["result",4]]],[11,"deserialize_identifier","","",4,[[],["result",4]]],[11,"deserialize_ignored_any","","",4,[[],["result",4]]],[11,"deserialize_any","","",5,[[],["result",4]]],[11,"deserialize_seq","","",5,[[],["result",4]]],[11,"deserialize_tuple","","",5,[[],["result",4]]],[11,"deserialize_bool","","",5,[[],["result",4]]],[11,"deserialize_i8","","",5,[[],["result",4]]],[11,"deserialize_i16","","",5,[[],["result",4]]],[11,"deserialize_i32","","",5,[[],["result",4]]],[11,"deserialize_i64","","",5,[[],["result",4]]],[11,"deserialize_i128","","",5,[[],["result",4]]],[11,"deserialize_u8","","",5,[[],["result",4]]],[11,"deserialize_u16","","",5,[[],["result",4]]],[11,"deserialize_u32","","",5,[[],["result",4]]],[11,"deserialize_u64","","",5,[[],["result",4]]],[11,"deserialize_u128","","",5,[[],["result",4]]],[11,"deserialize_f32","","",5,[[],["result",4]]],[11,"deserialize_f64","","",5,[[],["result",4]]],[11,"deserialize_char","","",5,[[],["result",4]]],[11,"deserialize_str","","",5,[[],["result",4]]],[11,"deserialize_string","","",5,[[],["result",4]]],[11,"deserialize_bytes","","",5,[[],["result",4]]],[11,"deserialize_byte_buf","","",5,[[],["result",4]]],[11,"deserialize_option","","",5,[[],["result",4]]],[11,"deserialize_unit","","",5,[[],["result",4]]],[11,"deserialize_unit_struct","","",5,[[],["result",4]]],[11,"deserialize_newtype_struct","","",5,[[],["result",4]]],[11,"deserialize_tuple_struct","","",5,[[],["result",4]]],[11,"deserialize_map","","",5,[[],["result",4]]],[11,"deserialize_struct","","",5,[[],["result",4]]],[11,"deserialize_enum","","",5,[[],["result",4]]],[11,"deserialize_identifier","","",5,[[],["result",4]]],[11,"deserialize_ignored_any","","",5,[[],["result",4]]],[11,"deserialize_any","","",6,[[],["result",4]]],[11,"deserialize_enum","","",6,[[],["result",4]]],[11,"deserialize_bool","","",6,[[],["result",4]]],[11,"deserialize_i8","","",6,[[],["result",4]]],[11,"deserialize_i16","","",6,[[],["result",4]]],[11,"deserialize_i32","","",6,[[],["result",4]]],[11,"deserialize_i64","","",6,[[],["result",4]]],[11,"deserialize_i128","","",6,[[],["result",4]]],[11,"deserialize_u8","","",6,[[],["result",4]]],[11,"deserialize_u16","","",6,[[],["result",4]]],[11,"deserialize_u32","","",6,[[],["result",4]]],[11,"deserialize_u64","","",6,[[],["result",4]]],[11,"deserialize_u128","","",6,[[],["result",4]]],[11,"deserialize_f32","","",6,[[],["result",4]]],[11,"deserialize_f64","","",6,[[],["result",4]]],[11,"deserialize_char","","",6,[[],["result",4]]],[11,"deserialize_str","","",6,[[],["result",4]]],[11,"deserialize_string","","",6,[[],["result",4]]],[11,"deserialize_bytes","","",6,[[],["result",4]]],[11,"deserialize_byte_buf","","",6,[[],["result",4]]],[11,"deserialize_option","","",6,[[],["result",4]]],[11,"deserialize_unit","","",6,[[],["result",4]]],[11,"deserialize_unit_struct","","",6,[[],["result",4]]],[11,"deserialize_newtype_struct","","",6,[[],["result",4]]],[11,"deserialize_seq","","",6,[[],["result",4]]],[11,"deserialize_tuple","","",6,[[],["result",4]]],[11,"deserialize_tuple_struct","","",6,[[],["result",4]]],[11,"deserialize_map","","",6,[[],["result",4]]],[11,"deserialize_struct","","",6,[[],["result",4]]],[11,"deserialize_identifier","","",6,[[],["result",4]]],[11,"deserialize_ignored_any","","",6,[[],["result",4]]],[11,"expecting","serde::de","",28,[[["formatter",3]],["result",6]]],[11,"visit_bool","","",28,[[],["result",4]]],[11,"visit_i64","","",28,[[],["result",4]]],[11,"visit_u64","","",28,[[],["result",4]]],[11,"visit_f64","","",28,[[],["result",4]]],[11,"visit_str","","",28,[[],["result",4]]],[11,"visit_none","","",28,[[],["result",4]]],[11,"visit_some","","",28,[[],["result",4]]],[11,"visit_newtype_struct","","",28,[[],["result",4]]],[11,"visit_unit","","",28,[[],["result",4]]],[11,"visit_seq","","",28,[[],["result",4]]],[11,"visit_map","","",28,[[],["result",4]]],[11,"visit_bytes","","",28,[[],["result",4]]],[11,"visit_enum","","",28,[[],["result",4]]],[11,"next_element_seed","serde::de::value","",3,[[],[["result",4],["option",4]]]],[11,"size_hint","","",3,[[],["option",4]]],[11,"next_element_seed","","",5,[[],[["result",4],["option",4]]]],[11,"size_hint","","",5,[[],["option",4]]],[11,"next_key_seed","","",5,[[],[["option",4],["result",4]]]],[11,"next_value_seed","","",5,[[],["result",4]]],[11,"next_entry_seed","","",5,[[],[["result",4],["option",4]]]],[11,"size_hint","","",5,[[],["option",4]]],[11,"variant_seed","","",46,[[],["result",4]]],[11,"variant_seed","","",47,[[],["result",4]]],[11,"variant_seed","","",1,[[],["result",4]]],[11,"variant_seed","","",48,[[],["result",4]]],[11,"variant_seed","","",49,[[],["result",4]]],[11,"variant_seed","","",6,[[],["result",4]]],[11,"serialize_element","serde::ser","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_element","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_key","","",50,[[],["result",4]]],[11,"serialize_value","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"custom","serde::de::value","",29,[[]]],[11,"custom","","",29,[[]]],[11,"clone","","",29,[[],["error",3]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[],["seqdeserializer",3]]],[11,"clone","","",4,[[],["seqaccessdeserializer",3]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[],["mapaccessdeserializer",3]]],[11,"clone","serde::de","",28,[[],["ignoredany",3]]],[11,"clone","","",0,[[],["unexpected",4]]],[11,"default","","",28,[[],["ignoredany",3]]],[11,"eq","serde::de::value","",29,[[["error",3]]]],[11,"ne","","",29,[[["error",3]]]],[11,"eq","serde::de","",0,[[["unexpected",4]]]],[11,"ne","","",0,[[["unexpected",4]]]],[11,"fmt","serde::de::value","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de::value","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","serde::de","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"description","serde::de::value","",29,[[]]]],"p":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]},\
"serde_cbor":{"doc":"CBOR and serialization.","i":[[3,"Deserializer","serde_cbor","A Serde `Deserialize`r of CBOR data.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple CBOR…",null,null],[3,"Error","","This type represents all possible errors that can occur…",null,null],[3,"Serializer","","A structure for serializing Rust values to CBOR.",null,null],[4,"Value","","The `Value` enum, a loosely typed way of representing any…",null,null],[13,"Null","","Represents the absence of a value or the value undefined.",0,null],[13,"Bool","","Represents a boolean value.",0,null],[13,"Integer","","Integer CBOR numbers.",0,null],[13,"Float","","Represents a floating point value.",0,null],[13,"Bytes","","Represents a byte string.",0,null],[13,"Text","","Represents an UTF-8 encoded string.",0,null],[13,"Array","","Represents an array of values.",0,null],[13,"Map","","Represents a map.",0,null],[13,"Tag","","Represents a tagged value",0,null],[5,"from_reader","","Decodes a value from CBOR data in a reader.",null,[[],["result",6]]],[5,"from_slice","","Decodes a value from CBOR data in a slice.",null,[[],["result",6]]],[5,"to_vec","","Serializes a value to a vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_writer","","Serializes a value to a writer.",null,[[],["result",6]]],[0,"de","","Deserialization.",null,null],[3,"IoRead","serde_cbor::de","CBOR input source that reads from a std::io input stream.",null,null],[3,"SliceRead","","A CBOR input source that reads from a slice of bytes.",null,null],[3,"MutSliceRead","","A CBOR input source that reads from a slice of bytes, and…",null,null],[3,"SliceReadFixed","","A CBOR input source that reads from a slice of bytes using…",null,null],[3,"Deserializer","","A Serde `Deserialize`r of CBOR data.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple CBOR…",null,null],[5,"from_slice","","Decodes a value from CBOR data in a slice.",null,[[],["result",6]]],[5,"from_mut_slice","","Decode a value from CBOR data in a mutable slice.",null,[[],["result",6]]],[5,"from_slice_with_scratch","","Decode a value from CBOR data using a scratch buffer.",null,[[],["result",6]]],[5,"from_reader","","Decodes a value from CBOR data in a reader.",null,[[],["result",6]]],[8,"Read","","Trait used by the deserializer for iterating over input.",null,null],[11,"from_reader","","Constructs a `Deserializer` which reads from a `Read`er.",1,[[],[["ioread",3],["deserializer",3]]]],[11,"from_slice","","Constructs a `Deserializer` which reads from a slice.",1,[[],[["sliceread",3],["deserializer",3]]]],[11,"from_mut_slice","","Constructs a `Deserializer` which reads from a mutable…",1,[[],[["mutsliceread",3],["deserializer",3]]]],[11,"new","","Constructs a `Deserializer` from one of the possible…",1,[[]]],[11,"disable_named_format","","Don\'t accept named variants and fields.",1,[[]]],[11,"disable_packed_format","","Don\'t accept numbered variants and fields.",1,[[]]],[11,"disable_standard_enums","","Don\'t accept the new enum format used by `serde_cbor`…",1,[[]]],[11,"disable_legacy_enums","","Don\'t accept the old enum format used by `serde_cbor`…",1,[[]]],[11,"end","","This method should be called after a value has been…",1,[[],["result",6]]],[11,"into_iter","","Turn a CBOR deserializer into an iterator over values of…",1,[[],["streamdeserializer",3]]],[11,"byte_offset","","Return the current offset in the reader",1,[[]]],[11,"new","","Create a new CBOR stream deserializer from one of the…",2,[[],["streamdeserializer",3]]],[11,"byte_offset","","Return the current offset in the reader",2,[[]]],[0,"error","serde_cbor","When serializing or deserializing CBOR goes wrong.",null,null],[3,"Error","serde_cbor::error","This type represents all possible errors that can occur…",null,null],[4,"Category","","Categorizes the cause of a `serde_cbor::Error`.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes…",3,null],[13,"Syntax","","The error was caused by input that was not syntactically…",3,null],[13,"Data","","The error was caused by input data that was semantically…",3,null],[13,"Eof","","The error was caused by prematurely reaching the end of…",3,null],[6,"Result","","Alias for a `Result` with the error type…",null,null],[11,"offset","","The byte offset at which the error occurred.",4,[[]]],[11,"classify","","Categorizes the cause of this error.",4,[[],["category",4]]],[11,"is_io","","Returns true if this error was caused by a failure to read…",4,[[]]],[11,"is_syntax","","Returns true if this error was caused by input that was…",4,[[]]],[11,"is_data","","Returns true if this error was caused by data that was…",4,[[]]],[11,"is_eof","","Returns true if this error was caused by prematurely…",4,[[]]],[11,"is_scratch_too_small","","Returns true if this error was caused by the scratch…",4,[[]]],[11,"new","serde_cbor::de","Creates a new CBOR input source to read from a std::io…",5,[[],["ioread",3]]],[11,"new","","Creates a CBOR input source to read from a slice of bytes.",6,[[],["sliceread",3]]],[11,"new","","Creates a CBOR input source to read from a slice of bytes,…",7,[[],["slicereadfixed",3]]],[11,"new","","Creates a CBOR input source to read from a slice of bytes.",8,[[],["mutsliceread",3]]],[0,"ser","serde_cbor","Serialize a Rust data structure to CBOR data.",null,null],[3,"IoWrite","serde_cbor::ser","A wrapper for types that implement `std::io::Write` to…",null,null],[3,"SliceWrite","","Implements `Write` for mutable byte slices (`&mut [u8]`).",null,null],[3,"Serializer","","A structure for serializing Rust values to CBOR.",null,null],[5,"to_vec","","Serializes a value to a vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_vec_packed","","Serializes a value to a vector in packed format.",null,[[],[["vec",3],["result",6]]]],[5,"to_writer","","Serializes a value to a writer.",null,[[],["result",6]]],[8,"Write","","A sink for serialized CBOR.",null,null],[11,"new","","Creates a new CBOR serializer.",9,[[]]],[11,"packed_format","","Choose concise/packed format for serializer.",9,[[]]],[11,"legacy_enums","","Enable old enum format used by `serde_cbor` versions <=…",9,[[]]],[11,"self_describe","","Writes a CBOR self-describe tag to the stream.",9,[[],["result",6]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",9,[[]]],[0,"tags","serde_cbor","Support for cbor tags",null,null],[3,"Tagged","serde_cbor::tags","A value that is optionally tagged with a cbor tag",null,null],[12,"tag","","cbor tag",10,null],[12,"value","","value",10,null],[5,"current_cbor_tag","","function to get the current cbor tag",null,[[],["option",4]]],[11,"new","","Create a new tagged value",10,[[["option",4]]]],[11,"new","serde_cbor::ser","Wraps an `io::Write` writer to make it compatible with…",11,[[],["iowrite",3]]],[11,"new","","Wraps a mutable slice so it can be used as a `Write`.",12,[[],["slicewrite",3]]],[11,"bytes_written","","Returns the number of bytes written to the underlying slice.",12,[[]]],[11,"into_inner","","Returns the underlying slice.",12,[[]]],[0,"value","serde_cbor","CBOR values, keys and serialization routines.",null,null],[4,"Value","serde_cbor::value","The `Value` enum, a loosely typed way of representing any…",null,null],[13,"Null","","Represents the absence of a value or the value undefined.",0,null],[13,"Bool","","Represents a boolean value.",0,null],[13,"Integer","","Integer CBOR numbers.",0,null],[13,"Float","","Represents a floating point value.",0,null],[13,"Bytes","","Represents a byte string.",0,null],[13,"Text","","Represents an UTF-8 encoded string.",0,null],[13,"Array","","Represents an array of values.",0,null],[13,"Map","","Represents a map.",0,null],[13,"Tag","","Represents a tagged value",0,null],[5,"from_value","","Convert a `serde_cbor::Value` into a type `T`",null,[[["value",4]],[["error",3],["result",4]]]],[5,"to_value","","Convert a `T` into `serde_cbor::Value` which is an enum…",null,[[],[["value",4],["result",4],["error",3]]]],[6,"Result","serde_cbor","Alias for a `Result` with the error type…",null,null],[11,"from","serde_cbor::de","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","serde_cbor::error","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","serde_cbor::ser","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","serde_cbor::value","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","serde_cbor::de","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","serde_cbor::error","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","serde_cbor::ser","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","serde_cbor::tags","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"next","serde_cbor::de","",5,[[],[["result",6],["option",4]]]],[11,"peek","","",5,[[],[["result",6],["option",4]]]],[11,"read_to_buffer","","",5,[[],["result",6]]],[11,"clear_buffer","","",5,[[]]],[11,"take_buffer","","",5,[[],["eitherlifetime",4]]],[11,"read_into","","",5,[[],["result",6]]],[11,"discard","","",5,[[]]],[11,"offset","","",5,[[]]],[11,"next","","",6,[[],[["result",6],["option",4]]]],[11,"peek","","",6,[[],[["result",6],["option",4]]]],[11,"clear_buffer","","",6,[[]]],[11,"read_to_buffer","","",6,[[],["result",6]]],[11,"read","","",6,[[],[["result",6],["eitherlifetime",4]]]],[11,"take_buffer","","",6,[[],["eitherlifetime",4]]],[11,"read_into","","",6,[[],["result",6]]],[11,"discard","","",6,[[]]],[11,"offset","","",6,[[]]],[11,"next","","",7,[[],[["result",6],["option",4]]]],[11,"peek","","",7,[[],[["result",6],["option",4]]]],[11,"clear_buffer","","",7,[[]]],[11,"read_to_buffer","","",7,[[],["result",6]]],[11,"read","","",7,[[],[["result",6],["eitherlifetime",4]]]],[11,"take_buffer","","",7,[[],["eitherlifetime",4]]],[11,"read_into","","",7,[[],["result",6]]],[11,"discard","","",7,[[]]],[11,"offset","","",7,[[]]],[11,"next","","",8,[[],[["result",6],["option",4]]]],[11,"peek","","",8,[[],[["result",6],["option",4]]]],[11,"clear_buffer","","",8,[[]]],[11,"read_to_buffer","","",8,[[],["result",6]]],[11,"take_buffer","","",8,[[],["eitherlifetime",4]]],[11,"read_into","","",8,[[],["result",6]]],[11,"discard","","",8,[[]]],[11,"offset","","",8,[[]]],[11,"write_all","serde_cbor::ser","",11,[[],["result",4]]],[11,"write_all","","",12,[[],["result",4]]],[11,"from","serde_cbor::error","",4,[[["error",3]],["error",3]]],[11,"from","serde_cbor::value","",0,[[],["value",4]]],[11,"from","","",0,[[],["value",4]]],[11,"from","","",0,[[],["value",4]]],[11,"from","","",0,[[],["value",4]]],[11,"from","","",0,[[],["value",4]]],[11,"from","","",0,[[],["value",4]]],[11,"from","","",0,[[],["value",4]]],[11,"from","","",0,[[],["value",4]]],[11,"from","","",0,[[],["value",4]]],[11,"from","","",0,[[],["value",4]]],[11,"from","","",0,[[],["value",4]]],[11,"from","","",0,[[["vec",3]],["value",4]]],[11,"from","","",0,[[["string",3]],["value",4]]],[11,"from","","",0,[[["value",4],["vec",3]],["value",4]]],[11,"from","","",0,[[["value",4],["btreemap",3]],["value",4]]],[11,"next","serde_cbor::de","",2,[[],[["result",6],["option",4]]]],[11,"clone","serde_cbor::error","",3,[[],["category",4]]],[11,"clone","serde_cbor::value","",0,[[],["value",4]]],[11,"cmp","","",0,[[["value",4]],["ordering",4]]],[11,"eq","serde_cbor::error","",3,[[["category",4]]]],[11,"eq","serde_cbor::value","",0,[[["value",4]]]],[11,"partial_cmp","","",0,[[["value",4]],[["ordering",4],["option",4]]]],[11,"fmt","serde_cbor::de","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","serde_cbor::error","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","serde_cbor::de","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","serde_cbor::ser","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","serde_cbor::value","",0,[[["formatter",3]],["result",6]]],[11,"fmt","serde_cbor::error","",4,[[["formatter",3]],["result",6]]],[11,"source","","",4,[[],[["option",4],["error",8]]]],[11,"custom","","",4,[[["display",8]],["error",3]]],[11,"serialize","serde_cbor::tags","",10,[[["serializer",8]],["result",4]]],[11,"serialize","serde_cbor::value","",0,[[],["result",4]]],[11,"deserialize","serde_cbor::tags","",10,[[["deserializer",8]],["result",4]]],[11,"deserialize","serde_cbor::value","",0,[[],[["value",4],["result",4]]]],[11,"custom","serde_cbor::error","",4,[[["display",8]],["error",3]]],[11,"invalid_type","","",4,[[["unexpected",4],["expected",8]],["error",3]]]],"p":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[3,"IoRead"],[3,"SliceRead"],[3,"SliceReadFixed"],[3,"MutSliceRead"],[3,"Serializer"],[3,"Tagged"],[3,"IoWrite"],[3,"SliceWrite"]]},\
"serde_derive":{"doc":"This crate provides Serde\'s two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]},\
"serde_json":{"doc":"Serde JSONJSON is a ubiquitous open-standard format that…","i":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[3,"Error","","This type represents all possible errors that can occur…",null,null],[3,"Serializer","","A structure for serializing Rust values into JSON.",null,null],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[],["result",6]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["result",6],["string",3]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["result",6],["string",3]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["vec",3],["result",6]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[],["result",6]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value",4]],[["error",3],["result",4]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[],[["value",4],["result",4],["error",3]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",null,null],[3,"SliceRead","serde_json::de","JSON input source that reads from a slice of bytes.",null,null],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",null,null],[3,"IoRead","","JSON input source that reads from a std::io input stream.",null,null],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[],["result",6]]],[8,"Read","","Trait used by the deserializer for iterating over input.…",null,null],[11,"new","","Create a JSON deserializer from one of the possible…",1,[[]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,[[]]],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[]]],[11,"end","","The `Deserializer::end` method should be called after a…",1,[[],["result",6]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of…",1,[[],["streamdeserializer",3]]],[11,"new","","Create a JSON stream deserializer from one of the possible…",2,[[]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a…",2,[[]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",null,null],[3,"Error","serde_json::error","This type represents all possible errors that can occur…",null,null],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes…",3,null],[13,"Syntax","","The error was caused by input that was not syntactically…",3,null],[13,"Data","","The error was caused by input data that was semantically…",3,null],[13,"Eof","","The error was caused by prematurely reaching the end of…",3,null],[6,"Result","","Alias for a `Result` with the error type…",null,null],[11,"line","","One-based line number at which the error was detected.",4,[[]]],[11,"column","","One-based column number at which the error was detected.",4,[[]]],[11,"classify","","Categorizes the cause of this error.",4,[[],["category",4]]],[11,"is_io","","Returns true if this error was caused by a failure to read…",4,[[]]],[11,"is_syntax","","Returns true if this error was caused by input that was…",4,[[]]],[11,"is_data","","Returns true if this error was caused by input data that…",4,[[]]],[11,"is_eof","","Returns true if this error was caused by prematurely…",4,[[]]],[0,"map","serde_json","A map of String to serde_json::Value.",null,null],[3,"Map","serde_json::map","Represents a JSON key/value type.",null,null],[3,"VacantEntry","","A vacant Entry. It is part of the `Entry` enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the `Entry` enum.",null,null],[3,"Iter","","An iterator over a serde_json::Map\'s entries.",null,null],[3,"IterMut","","A mutable iterator over a serde_json::Map\'s entries.",null,null],[3,"IntoIter","","An owning iterator over a serde_json::Map\'s entries.",null,null],[3,"Keys","","An iterator over a serde_json::Map\'s keys.",null,null],[3,"Values","","An iterator over a serde_json::Map\'s values.",null,null],[3,"ValuesMut","","A mutable iterator over a serde_json::Map\'s values.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry.",5,null],[13,"Occupied","","An occupied Entry.",5,null],[11,"new","","Makes a new empty Map.",6,[[]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",6,[[]]],[11,"clear","","Clears the map, removing all values.",6,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",6,[[],[["value",4],["option",4]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",6,[[]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",6,[[],[["value",4],["option",4]]]],[11,"insert","","Inserts a key-value pair into the map.",6,[[["value",4],["string",3]],[["value",4],["option",4]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",6,[[],[["value",4],["option",4]]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and…",6,[[],["option",4]]],[11,"append","","Moves all elements from other into Self, leaving other…",6,[[]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for…",6,[[],["entry",4]]],[11,"len","","Returns the number of elements in the map.",6,[[]]],[11,"is_empty","","Returns true if the map contains no elements.",6,[[]]],[11,"iter","","Gets an iterator over the entries of the map.",6,[[],["iter",3]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",6,[[],["itermut",3]]],[11,"keys","","Gets an iterator over the keys of the map.",6,[[],["keys",3]]],[11,"values","","Gets an iterator over the values of the map.",6,[[],["values",3]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",6,[[],["valuesmut",3]]],[11,"key","","Returns a reference to this entry\'s key.",5,[[],["string",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",5,[[["value",4]],["value",4]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",5,[[],["value",4]]],[11,"key","","Gets a reference to the key that would be used when…",7,[[],["string",3]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key,…",7,[[["value",4]],["value",4]]],[11,"key","","Gets a reference to the key in the entry.",8,[[],["string",3]]],[11,"get","","Gets a reference to the value in the entry.",8,[[],["value",4]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,[[],["value",4]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",8,[[],["value",4]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`\'s…",8,[[["value",4]],["value",4]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",8,[[],["value",4]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra…",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human…",null,null],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",null,null],[13,"Quote","","An escaped quote `\\\"`",9,null],[13,"ReverseSolidus","","An escaped reverse solidus `\\\\`",9,null],[13,"Solidus","","An escaped solidus `/`",9,null],[13,"Backspace","","An escaped backspace character (usually escaped as `\\\\b`)",9,null],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\\\f`)",9,null],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\\\n`)",9,null],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as…",9,null],[13,"Tab","","An escaped tab character (usually escaped as `\\\\t`)",9,null],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped…",9,null],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[],["result",6]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["vec",3],["result",6]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["result",6],["string",3]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["result",6],["string",3]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control…",null,null],[11,"write_null","","Writes a `null` value to the specified writer.",10,[[],["result",6]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",10,[[],["result",6]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the…",10,[[],["result",6]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the…",10,[[],["result",6]]],[11,"write_number_str","","Writes a number that has already been rendered to a string.",10,[[],["result",6]]],[11,"begin_string","","Called before each series of `write_string_fragment` and…",10,[[],["result",6]]],[11,"end_string","","Called after each series of `write_string_fragment` and…",10,[[],["result",6]]],[11,"write_string_fragment","","Writes a string fragment that doesn\'t need any escaping to…",10,[[],["result",6]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["charescape",4]],["result",6]]],[11,"begin_array","","Called before every array. Writes a `[` to the specified…",10,[[],["result",6]]],[11,"end_array","","Called after every array. Writes a `]` to the specified…",10,[[],["result",6]]],[11,"begin_array_value","","Called before every array value. Writes a `,` if needed to…",10,[[],["result",6]]],[11,"end_array_value","","Called after every array value.",10,[[],["result",6]]],[11,"begin_object","","Called before every object. Writes a `{` to the specified…",10,[[],["result",6]]],[11,"end_object","","Called after every object. Writes a `}` to the specified…",10,[[],["result",6]]],[11,"begin_object_key","","Called before every object key.",10,[[],["result",6]]],[11,"end_object_key","","Called after every object key. A `:` should be written to…",10,[[],["result",6]]],[11,"begin_object_value","","Called before every object value. A `:` should be written…",10,[[],["result",6]]],[11,"end_object_value","","Called after every object value.",10,[[],["result",6]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn\'t need any escaping…",10,[[],["result",6]]],[11,"new","","Creates a new JSON serializer.",11,[[]]],[11,"pretty","","Creates a new JSON pretty print serializer.",11,[[]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to…",11,[[]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",11,[[]]],[11,"new","","Construct a pretty printer formatter that defaults to…",12,[[]]],[11,"with_indent","","Construct a pretty printer formatter that uses the…",12,[[]]],[0,"value","serde_json","The Value enum, a loosely typed way of representing any…",null,null],[3,"Serializer","serde_json::value","Serializer whose output is a `Value`.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[],[["value",4],["result",4],["error",3]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value",4]],[["error",3],["result",4]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",null,null],[11,"get","","Index into a JSON array or map. A string index can be used…",0,[[["index",8]],[["value",4],["option",4]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",0,[[["index",8]],[["value",4],["option",4]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",0,[[]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",0,[[],[["map",3],["option",4]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",0,[[],[["map",3],["option",4]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",0,[[]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",0,[[],[["option",4],["vec",3]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",0,[[],[["option",4],["vec",3]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[],["option",4]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",0,[[]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[],["option",4]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[],["option",4]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[],["option",4]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",0,[[]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[],["option",4]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[],["option",4]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[],[["value",4],["option",4]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",0,[[],[["value",4],["option",4]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",0,[[],["value",4]]],[11,"is_i64","serde_json","Returns true if the `Number` is an integer between…",13,[[]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",13,[[]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",13,[[]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",13,[[],["option",4]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",13,[[],["option",4]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",13,[[],["option",4]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[],[["option",4],["number",3]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input…",14,[[]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,[[]]],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[]]],[6,"Result","serde_json","Alias for a `Result` with the error type…",null,null],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",null,null],[11,"from","serde_json::de","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","serde_json::error","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","serde_json::ser","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","serde_json::map","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","serde_json","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","serde_json::value","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","serde_json::de","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","serde_json::error","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","serde_json::map","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","serde_json::ser","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","serde_json::value","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"begin_array","serde_json::ser","",12,[[],["result",6]]],[11,"end_array","","",12,[[],["result",6]]],[11,"begin_array_value","","",12,[[],["result",6]]],[11,"end_array_value","","",12,[[],["result",6]]],[11,"begin_object","","",12,[[],["result",6]]],[11,"end_object","","",12,[[],["result",6]]],[11,"begin_object_key","","",12,[[],["result",6]]],[11,"begin_object_value","","",12,[[],["result",6]]],[11,"end_object_value","","",12,[[],["result",6]]],[11,"next","serde_json::de","",14,[[],[["option",4],["result",6]]]],[11,"peek","","",14,[[],[["option",4],["result",6]]]],[11,"discard","","",14,[[]]],[11,"position","","",14,[[],["position",3]]],[11,"peek_position","","",14,[[],["position",3]]],[11,"byte_offset","","",14,[[]]],[11,"parse_str","","",14,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",14,[[["vec",3]],[["result",6],["reference",4]]]],[11,"ignore_str","","",14,[[],["result",6]]],[11,"decode_hex_escape","","",14,[[],["result",6]]],[11,"set_failed","","",14,[[]]],[11,"next","","",15,[[],[["option",4],["result",6]]]],[11,"peek","","",15,[[],[["option",4],["result",6]]]],[11,"discard","","",15,[[]]],[11,"position","","",15,[[],["position",3]]],[11,"peek_position","","",15,[[],["position",3]]],[11,"byte_offset","","",15,[[]]],[11,"parse_str","","",15,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",15,[[["vec",3]],[["result",6],["reference",4]]]],[11,"ignore_str","","",15,[[],["result",6]]],[11,"decode_hex_escape","","",15,[[],["result",6]]],[11,"set_failed","","",15,[[]]],[11,"next","","",16,[[],[["option",4],["result",6]]]],[11,"peek","","",16,[[],[["option",4],["result",6]]]],[11,"discard","","",16,[[]]],[11,"position","","",16,[[],["position",3]]],[11,"peek_position","","",16,[[],["position",3]]],[11,"byte_offset","","",16,[[]]],[11,"parse_str","","",16,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",16,[[["vec",3]],[["result",6],["reference",4]]]],[11,"ignore_str","","",16,[[],["result",6]]],[11,"decode_hex_escape","","",16,[[],["result",6]]],[11,"set_failed","","",16,[[]]],[11,"from","serde_json::value","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[]]],[11,"from","","Convert boolean to `Value`",0,[[]]],[11,"from","","Convert `String` to `Value`",0,[[["string",3]]]],[11,"from","","Convert string slice to `Value`",0,[[]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["cow",4]]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["map",3],["string",3],["value",4]]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec",3]]]],[11,"from","","Convert a slice to `Value`",0,[[]]],[11,"from","","Convert `()` to `Value`",0,[[]]],[11,"from","serde_json","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"next_back","serde_json::map","",17,[[],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"next_back","","",20,[[],["option",4]]],[11,"next_back","","",21,[[],["option",4]]],[11,"next_back","","",22,[[],["option",4]]],[11,"len","","",17,[[]]],[11,"len","","",18,[[]]],[11,"len","","",19,[[]]],[11,"len","","",20,[[]]],[11,"len","","",21,[[]]],[11,"len","","",22,[[]]],[11,"extend","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"next","serde_json::de","",2,[[],[["option",4],["result",6]]]],[11,"next","serde_json::map","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"clone","serde_json::error","",3,[[],["category",4]]],[11,"clone","serde_json::map","",6,[[]]],[11,"clone","serde_json::ser","",23,[[],["compactformatter",3]]],[11,"clone","","",12,[[],["prettyformatter",3]]],[11,"clone","serde_json::value","",0,[[],["value",4]]],[11,"clone","serde_json","",13,[[],["number",3]]],[11,"default","serde_json::map","",6,[[]]],[11,"default","serde_json::ser","",12,[[]]],[11,"default","serde_json::value","",0,[[],["value",4]]],[11,"eq","serde_json::error","",3,[[["category",4]]]],[11,"eq","serde_json::map","",6,[[]]],[11,"eq","serde_json::value","",0,[[["value",4]]]],[11,"ne","","",0,[[["value",4]]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[["string",3]]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","serde_json","",13,[[["number",3]]]],[11,"ne","","",13,[[["number",3]]]],[11,"fmt","serde_json::error","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::map","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","serde_json::ser","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","",0,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",13,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::error","",4,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","Display a JSON value as a string.",0,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",13,[[["formatter",3]],["result",6]]],[11,"index","serde_json::map","",6,[[],["value",4]]],[11,"index","serde_json::value","Index into a `serde_json::Value` using the syntax…",0,[[],["value",4]]],[11,"index_mut","serde_json::map","",6,[[],["value",4]]],[11,"index_mut","serde_json::value","Write into a `serde_json::Value` using the syntax…",0,[[],["value",4]]],[11,"from_str","serde_json","",13,[[],["result",4]]],[11,"from_str","serde_json::value","",0,[[],[["value",4],["result",4],["error",3]]]],[11,"from_iter","serde_json::map","",6,[[]]],[11,"from_iter","serde_json::value","Convert an iteratable type to a `Value`",0,[[["intoiterator",8]]]],[11,"source","serde_json::error","",4,[[],[["option",4],["error",8]]]],[11,"deserialize_any","serde_json::value","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_i8","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_i16","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_i32","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_i64","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_u8","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_u16","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_u32","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_u64","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_f32","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_f64","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_i128","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_u128","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_option","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_enum","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_newtype_struct","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_bool","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_char","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_str","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_string","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_bytes","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_byte_buf","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_unit","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_unit_struct","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_seq","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_tuple","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_tuple_struct","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_map","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_struct","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_identifier","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_ignored_any","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_any","serde_json","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i8","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i16","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i32","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i64","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u8","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u16","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u32","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u64","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_f32","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_f64","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i128","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u128","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_bool","","",13,[[],["result",4]]],[11,"deserialize_char","","",13,[[],["result",4]]],[11,"deserialize_str","","",13,[[],["result",4]]],[11,"deserialize_string","","",13,[[],["result",4]]],[11,"deserialize_bytes","","",13,[[],["result",4]]],[11,"deserialize_byte_buf","","",13,[[],["result",4]]],[11,"deserialize_option","","",13,[[],["result",4]]],[11,"deserialize_unit","","",13,[[],["result",4]]],[11,"deserialize_unit_struct","","",13,[[],["result",4]]],[11,"deserialize_newtype_struct","","",13,[[],["result",4]]],[11,"deserialize_seq","","",13,[[],["result",4]]],[11,"deserialize_tuple","","",13,[[],["result",4]]],[11,"deserialize_tuple_struct","","",13,[[],["result",4]]],[11,"deserialize_map","","",13,[[],["result",4]]],[11,"deserialize_struct","","",13,[[],["result",4]]],[11,"deserialize_enum","","",13,[[],["result",4]]],[11,"deserialize_identifier","","",13,[[],["result",4]]],[11,"deserialize_ignored_any","","",13,[[],["result",4]]],[11,"into_deserializer","serde_json::value","",0,[[]]],[11,"custom","serde_json::error","",4,[[["display",8]],["error",3]]],[11,"serialize","serde_json::map","",6,[[],["result",4]]],[11,"serialize","serde_json::value","",0,[[],["result",4]]],[11,"serialize","serde_json","",13,[[],["result",4]]],[11,"serialize_bool","serde_json::value","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i8","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i16","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i32","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i64","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u8","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u16","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u32","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u64","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_f32","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_f64","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_char","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_str","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_bytes","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_unit","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_unit_struct","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_unit_variant","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_newtype_struct","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_newtype_variant","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_none","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_some","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_seq","","",24,[[["option",4]],["result",6]]],[11,"serialize_tuple","","",24,[[],["result",6]]],[11,"serialize_tuple_struct","","",24,[[],["result",6]]],[11,"serialize_tuple_variant","","",24,[[],["result",6]]],[11,"serialize_map","","",24,[[["option",4]],["result",6]]],[11,"serialize_struct","","",24,[[],["result",6]]],[11,"serialize_struct_variant","","",24,[[],["result",6]]],[11,"collect_str","","",24,[[],[["value",4],["result",6]]]],[11,"deserialize","serde_json::map","",6,[[],["result",4]]],[11,"deserialize","serde_json::value","",0,[[],[["value",4],["result",4]]]],[11,"deserialize","serde_json","",13,[[],[["result",4],["number",3]]]],[11,"custom","serde_json::error","",4,[[["display",8]],["error",3]]],[11,"invalid_type","","",4,[[["expected",8],["unexpected",4]]]]],"p":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"],[3,"Serializer"]]},\
"syn":{"doc":"github crates-io docs-rs","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tokens","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",null,null],[12,"attrs","","",10,null],[12,"pat","","",10,null],[12,"guard","","",10,null],[12,"fat_arrow_token","","",10,null],[12,"body","","",10,null],[12,"comma","","",10,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",11,null],[12,"member","","Name or index of the field.",11,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",11,null],[12,"expr","","Value of the field.",11,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",12,null],[12,"colon_token","","",12,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",null,null],[12,"colon2_token","","",13,null],[12,"lt_token","","",13,null],[12,"args","","",13,null],[12,"gt_token","","",13,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",14,null],[12,"bracket_token","","",14,null],[12,"elems","","",14,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",15,null],[12,"left","","",15,null],[12,"eq_token","","",15,null],[12,"right","","",15,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",16,null],[12,"left","","",16,null],[12,"op","","",16,null],[12,"right","","",16,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[12,"attrs","","",17,null],[12,"async_token","","",17,null],[12,"capture","","",17,null],[12,"block","","",17,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[12,"attrs","","",18,null],[12,"base","","",18,null],[12,"dot_token","","",18,null],[12,"await_token","","",18,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",19,null],[12,"left","","",19,null],[12,"op","","",19,null],[12,"right","","",19,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",20,null],[12,"label","","",20,null],[12,"block","","",20,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",21,null],[12,"box_token","","",21,null],[12,"expr","","",21,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[12,"attrs","","",22,null],[12,"break_token","","",22,null],[12,"label","","",22,null],[12,"expr","","",22,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",23,null],[12,"func","","",23,null],[12,"paren_token","","",23,null],[12,"args","","",23,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",24,null],[12,"expr","","",24,null],[12,"as_token","","",24,null],[12,"ty","","",24,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",25,null],[12,"asyncness","","",25,null],[12,"movability","","",25,null],[12,"capture","","",25,null],[12,"or1_token","","",25,null],[12,"inputs","","",25,null],[12,"or2_token","","",25,null],[12,"output","","",25,null],[12,"body","","",25,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",26,null],[12,"continue_token","","",26,null],[12,"label","","",26,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",27,null],[12,"base","","",27,null],[12,"dot_token","","",27,null],[12,"member","","",27,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",28,null],[12,"label","","",28,null],[12,"for_token","","",28,null],[12,"pat","","",28,null],[12,"in_token","","",28,null],[12,"expr","","",28,null],[12,"body","","",28,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",29,null],[12,"group_token","","",29,null],[12,"expr","","",29,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[12,"attrs","","",30,null],[12,"if_token","","",30,null],[12,"cond","","",30,null],[12,"then_branch","","",30,null],[12,"else_branch","","",30,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",31,null],[12,"expr","","",31,null],[12,"bracket_token","","",31,null],[12,"index","","",31,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[12,"attrs","","",32,null],[12,"let_token","","",32,null],[12,"pat","","",32,null],[12,"eq_token","","",32,null],[12,"expr","","",32,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",null,null],[12,"attrs","","",33,null],[12,"lit","","",33,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",34,null],[12,"label","","",34,null],[12,"loop_token","","",34,null],[12,"body","","",34,null],[3,"ExprMacro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",null,null],[12,"attrs","","",35,null],[12,"mac","","",35,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[12,"attrs","","",36,null],[12,"match_token","","",36,null],[12,"expr","","",36,null],[12,"brace_token","","",36,null],[12,"arms","","",36,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",37,null],[12,"receiver","","",37,null],[12,"dot_token","","",37,null],[12,"method","","",37,null],[12,"turbofish","","",37,null],[12,"paren_token","","",37,null],[12,"args","","",37,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",38,null],[12,"paren_token","","",38,null],[12,"expr","","",38,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",39,null],[12,"qself","","",39,null],[12,"path","","",39,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",40,null],[12,"from","","",40,null],[12,"limits","","",40,null],[12,"to","","",40,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",41,null],[12,"and_token","","",41,null],[12,"raw","","",41,null],[12,"mutability","","",41,null],[12,"expr","","",41,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[12,"attrs","","",42,null],[12,"bracket_token","","",42,null],[12,"expr","","",42,null],[12,"semi_token","","",42,null],[12,"len","","",42,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",43,null],[12,"return_token","","",43,null],[12,"expr","","",43,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",44,null],[12,"path","","",44,null],[12,"brace_token","","",44,null],[12,"fields","","",44,null],[12,"dot2_token","","",44,null],[12,"rest","","",44,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",45,null],[12,"expr","","",45,null],[12,"question_token","","",45,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[12,"attrs","","",46,null],[12,"try_token","","",46,null],[12,"block","","",46,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",47,null],[12,"paren_token","","",47,null],[12,"elems","","",47,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",48,null],[12,"expr","","",48,null],[12,"colon_token","","",48,null],[12,"ty","","",48,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",49,null],[12,"op","","",49,null],[12,"expr","","",49,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",50,null],[12,"unsafe_token","","",50,null],[12,"block","","",50,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",51,null],[12,"label","","",51,null],[12,"while_token","","",51,null],[12,"cond","","",51,null],[12,"body","","",51,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",52,null],[12,"yield_token","","",52,null],[12,"expr","","",52,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",53,null],[12,"span","","",53,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<\'a, \'b, \'c>`.",null,null],[12,"for_token","","",54,null],[12,"lt_token","","",54,null],[12,"lifetimes","","",54,null],[12,"gt_token","","",54,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",55,null],[12,"const_token","","",55,null],[12,"ident","","",55,null],[12,"colon_token","","",55,null],[12,"ty","","",55,null],[12,"eq_token","","",55,null],[12,"default","","",55,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",56,null],[12,"params","","",56,null],[12,"gt_token","","",56,null],[12,"where_clause","","",56,null],[3,"LifetimeDef","","A lifetime definition: `\'a: \'b + \'c + \'d`.",null,null],[12,"attrs","","",57,null],[12,"lifetime","","",57,null],[12,"colon_token","","",57,null],[12,"bounds","","",57,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",58,null],[12,"eq_token","","",58,null],[12,"rhs_ty","","",58,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",null,null],[12,"lifetime","","",59,null],[12,"colon_token","","",59,null],[12,"bounds","","",59,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",60,null],[12,"bounded_ty","","The type being bounded",60,null],[12,"colon_token","","",60,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+\'static`)",60,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",61,null],[12,"modifier","","",61,null],[12,"lifetimes","","The `for<\'a>` in `for<\'a> Foo<&\'a T>`",61,null],[12,"path","","The `Foo<&\'a T>` in `for<\'a> Foo<&\'a T>`",61,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",62,null],[12,"ident","","",62,null],[12,"colon_token","","",62,null],[12,"bounds","","",62,null],[12,"eq_token","","",62,null],[12,"default","","",62,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",63,null],[12,"predicates","","",63,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",64,null],[12,"vis","","",64,null],[12,"sig","","",64,null],[12,"semi_token","","",64,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",65,null],[12,"mac","","",65,null],[12,"semi_token","","",65,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",null,null],[12,"attrs","","",66,null],[12,"vis","","",66,null],[12,"static_token","","",66,null],[12,"mutability","","",66,null],[12,"ident","","",66,null],[12,"colon_token","","",66,null],[12,"ty","","",66,null],[12,"semi_token","","",66,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",67,null],[12,"vis","","",67,null],[12,"type_token","","",67,null],[12,"ident","","",67,null],[12,"semi_token","","",67,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",68,null],[12,"vis","","",68,null],[12,"defaultness","","",68,null],[12,"const_token","","",68,null],[12,"ident","","",68,null],[12,"colon_token","","",68,null],[12,"ty","","",68,null],[12,"eq_token","","",68,null],[12,"expr","","",68,null],[12,"semi_token","","",68,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",69,null],[12,"mac","","",69,null],[12,"semi_token","","",69,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",70,null],[12,"vis","","",70,null],[12,"defaultness","","",70,null],[12,"sig","","",70,null],[12,"block","","",70,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",71,null],[12,"vis","","",71,null],[12,"defaultness","","",71,null],[12,"type_token","","",71,null],[12,"ident","","",71,null],[12,"generics","","",71,null],[12,"eq_token","","",71,null],[12,"ty","","",71,null],[12,"semi_token","","",71,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",72,null],[12,"vis","","",72,null],[12,"const_token","","",72,null],[12,"ident","","",72,null],[12,"colon_token","","",72,null],[12,"ty","","",72,null],[12,"eq_token","","",72,null],[12,"expr","","",72,null],[12,"semi_token","","",72,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",null,null],[12,"attrs","","",73,null],[12,"vis","","",73,null],[12,"enum_token","","",73,null],[12,"ident","","",73,null],[12,"generics","","",73,null],[12,"brace_token","","",73,null],[12,"variants","","",73,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",74,null],[12,"vis","","",74,null],[12,"extern_token","","",74,null],[12,"crate_token","","",74,null],[12,"ident","","",74,null],[12,"rename","","",74,null],[12,"semi_token","","",74,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",75,null],[12,"vis","","",75,null],[12,"sig","","",75,null],[12,"block","","",75,null],[3,"ItemForeignMod","","A block of foreign items: `extern \\\"C\\\" { ... }`.",null,null],[12,"attrs","","",76,null],[12,"abi","","",76,null],[12,"brace_token","","",76,null],[12,"items","","",76,null],[3,"ItemImpl","","An impl block providing trait or associated items:…",null,null],[12,"attrs","","",77,null],[12,"defaultness","","",77,null],[12,"unsafety","","",77,null],[12,"impl_token","","",77,null],[12,"generics","","",77,null],[12,"trait_","","Trait this impl implements.",77,null],[12,"self_ty","","The Self type of the impl.",77,null],[12,"brace_token","","",77,null],[12,"items","","",77,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",null,null],[12,"attrs","","",78,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",78,null],[12,"mac","","",78,null],[12,"semi_token","","",78,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",null,null],[12,"attrs","","",79,null],[12,"vis","","",79,null],[12,"macro_token","","",79,null],[12,"ident","","",79,null],[12,"rules","","",79,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",80,null],[12,"vis","","",80,null],[12,"mod_token","","",80,null],[12,"ident","","",80,null],[12,"content","","",80,null],[12,"semi","","",80,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",81,null],[12,"vis","","",81,null],[12,"static_token","","",81,null],[12,"mutability","","",81,null],[12,"ident","","",81,null],[12,"colon_token","","",81,null],[12,"ty","","",81,null],[12,"eq_token","","",81,null],[12,"expr","","",81,null],[12,"semi_token","","",81,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",82,null],[12,"vis","","",82,null],[12,"struct_token","","",82,null],[12,"ident","","",82,null],[12,"generics","","",82,null],[12,"fields","","",82,null],[12,"semi_token","","",82,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",83,null],[12,"vis","","",83,null],[12,"unsafety","","",83,null],[12,"auto_token","","",83,null],[12,"trait_token","","",83,null],[12,"ident","","",83,null],[12,"generics","","",83,null],[12,"colon_token","","",83,null],[12,"supertraits","","",83,null],[12,"brace_token","","",83,null],[12,"items","","",83,null],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",null,null],[12,"attrs","","",84,null],[12,"vis","","",84,null],[12,"trait_token","","",84,null],[12,"ident","","",84,null],[12,"generics","","",84,null],[12,"eq_token","","",84,null],[12,"bounds","","",84,null],[12,"semi_token","","",84,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",null,null],[12,"attrs","","",85,null],[12,"vis","","",85,null],[12,"type_token","","",85,null],[12,"ident","","",85,null],[12,"generics","","",85,null],[12,"eq_token","","",85,null],[12,"ty","","",85,null],[12,"semi_token","","",85,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",86,null],[12,"vis","","",86,null],[12,"union_token","","",86,null],[12,"ident","","",86,null],[12,"generics","","",86,null],[12,"fields","","",86,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",87,null],[12,"vis","","",87,null],[12,"use_token","","",87,null],[12,"leading_colon","","",87,null],[12,"tree","","",87,null],[12,"semi_token","","",87,null],[3,"Receiver","","The `self` argument of an associated method, whether taken…",null,null],[12,"attrs","","",88,null],[12,"reference","","",88,null],[12,"mutability","","",88,null],[12,"self_token","","",88,null],[3,"Signature","","A function signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",89,null],[12,"asyncness","","",89,null],[12,"unsafety","","",89,null],[12,"abi","","",89,null],[12,"fn_token","","",89,null],[12,"ident","","",89,null],[12,"generics","","",89,null],[12,"paren_token","","",89,null],[12,"inputs","","",89,null],[12,"variadic","","",89,null],[12,"output","","",89,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",90,null],[12,"const_token","","",90,null],[12,"ident","","",90,null],[12,"colon_token","","",90,null],[12,"ty","","",90,null],[12,"default","","",90,null],[12,"semi_token","","",90,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",91,null],[12,"mac","","",91,null],[12,"semi_token","","",91,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",92,null],[12,"sig","","",92,null],[12,"default","","",92,null],[12,"semi_token","","",92,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",93,null],[12,"type_token","","",93,null],[12,"ident","","",93,null],[12,"generics","","",93,null],[12,"colon_token","","",93,null],[12,"bounds","","",93,null],[12,"default","","",93,null],[12,"semi_token","","",93,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",94,null],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",95,null],[12,"items","","",95,null],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",null,null],[12,"ident","","",96,null],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",null,null],[12,"ident","","",97,null],[12,"colon2_token","","",97,null],[12,"tree","","",97,null],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",null,null],[12,"ident","","",98,null],[12,"as_token","","",98,null],[12,"rename","","",98,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",99,null],[12,"attrs","","",99,null],[12,"items","","",99,null],[3,"Lifetime","","A Rust lifetime: `\'a`.",null,null],[12,"apostrophe","","",100,null],[12,"ident","","",100,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",101,null],[12,"span","","",101,null],[3,"LitByte","","A byte literal: `b\'f\'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\\\"foo\\\"`.",null,null],[3,"LitChar","","A character literal: `\'a\'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\\\"foo\\\"`.",null,null],[3,"Macro","","A macro invocation: `println!(\\\"{}\\\", mac)`.",null,null],[12,"path","","",102,null],[12,"bang_token","","",102,null],[12,"delimiter","","",102,null],[12,"tokens","","",102,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",103,null],[12,"brace_token","","",103,null],[12,"variants","","",103,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",104,null],[12,"fields","","",104,null],[12,"semi_token","","",104,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",105,null],[12,"fields","","",105,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",106,null],[12,"vis","","Visibility of the struct or enum.",106,null],[12,"ident","","Name of the struct or enum.",106,null],[12,"generics","","Generics required to complete the definition.",106,null],[12,"data","","Data within the struct or enum.",106,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",107,null],[12,"stmts","","Statements in a block",107,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",108,null],[12,"let_token","","",108,null],[12,"pat","","",108,null],[12,"init","","",108,null],[12,"semi_token","","",108,null],[3,"Abi","","The binary interface of a function: `extern \\\"C\\\"`.",null,null],[12,"extern_token","","",109,null],[12,"name","","",109,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",110,null],[12,"name","","",110,null],[12,"ty","","",110,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",111,null],[12,"elem","","",111,null],[12,"semi_token","","",111,null],[12,"len","","",111,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",112,null],[12,"unsafety","","",112,null],[12,"abi","","",112,null],[12,"fn_token","","",112,null],[12,"paren_token","","",112,null],[12,"inputs","","",112,null],[12,"variadic","","",112,null],[12,"output","","",112,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",113,null],[12,"elem","","",113,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",114,null],[12,"bounds","","",114,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",115,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",116,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",117,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",118,null],[12,"elem","","",118,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",119,null],[12,"path","","",119,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",120,null],[12,"const_token","","",120,null],[12,"mutability","","",120,null],[12,"elem","","",120,null],[3,"TypeReference","","A reference type: `&\'a T` or `&\'a mut T`.",null,null],[12,"and_token","","",121,null],[12,"lifetime","","",121,null],[12,"mutability","","",121,null],[12,"elem","","",121,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",122,null],[12,"elem","","",122,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",123,null],[12,"bounds","","",123,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",124,null],[12,"elems","","",124,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",125,null],[12,"dots","","",125,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",126,null],[12,"member","","",126,null],[12,"colon_token","","",126,null],[12,"pat","","",126,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"attrs","","",127,null],[12,"box_token","","",127,null],[12,"pat","","",127,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"attrs","","",128,null],[12,"by_ref","","",128,null],[12,"mutability","","",128,null],[12,"ident","","",128,null],[12,"subpat","","",128,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"attrs","","",129,null],[12,"expr","","",129,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",130,null],[12,"mac","","",130,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",131,null],[12,"leading_vert","","",131,null],[12,"cases","","",131,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",null,null],[12,"attrs","","",132,null],[12,"qself","","",132,null],[12,"path","","",132,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"attrs","","",133,null],[12,"lo","","",133,null],[12,"limits","","",133,null],[12,"hi","","",133,null],[3,"PatReference","","A reference pattern: `&mut var`.",null,null],[12,"attrs","","",134,null],[12,"and_token","","",134,null],[12,"mutability","","",134,null],[12,"pat","","",134,null],[3,"PatRest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",null,null],[12,"attrs","","",135,null],[12,"dot2_token","","",135,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",null,null],[12,"attrs","","",136,null],[12,"bracket_token","","",136,null],[12,"elems","","",136,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"attrs","","",137,null],[12,"path","","",137,null],[12,"brace_token","","",137,null],[12,"fields","","",137,null],[12,"dot2_token","","",137,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"attrs","","",138,null],[12,"paren_token","","",138,null],[12,"elems","","",138,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"attrs","","",139,null],[12,"path","","",139,null],[12,"pat","","",139,null],[3,"PatType","","A type ascription pattern: `foo: f64`.",null,null],[12,"attrs","","",140,null],[12,"pat","","",140,null],[12,"colon_token","","",140,null],[12,"ty","","",140,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"attrs","","",141,null],[12,"underscore_token","","",141,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",142,null],[12,"lt_token","","",142,null],[12,"args","","",142,null],[12,"gt_token","","",142,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",143,null],[12,"eq_token","","",143,null],[12,"ty","","",143,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",144,null],[12,"colon_token","","",144,null],[12,"bounds","","",144,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",145,null],[12,"inputs","","`(A, B)`",145,null],[12,"output","","`C`",145,null],[3,"Path","","A path at which a named item is exported (e.g.…",null,null],[12,"leading_colon","","",146,null],[12,"segments","","",146,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",147,null],[12,"arguments","","",147,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",148,null],[12,"ty","","",148,null],[12,"position","","",148,null],[12,"as_token","","",148,null],[12,"gt_token","","",148,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",149,null],[13,"Inner","","",149,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",150,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",150,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",150,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",151,null],[13,"Lit","","A Rust literal, like the `\\\"new_name\\\"` in…",151,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",152,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",152,null],[13,"Unit","","Unit struct or unit variant such as `None`.",152,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",153,null],[13,"Crate","","A crate-level visibility: `crate`.",153,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",153,null],[13,"Inherited","","An inherited visibility, which usually means private.",153,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",154,null],[13,"Const","","A const expression. Must be inside of a block.",154,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",155,null],[13,"Closed","","Inclusive at the beginning and end.",155,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",156,null],[13,"Assign","","An assignment expression: `a = compute()`.",156,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",156,null],[13,"Async","","An async block: `async { ... }`.",156,null],[13,"Await","","An await expression: `fut.await`.",156,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",156,null],[13,"Block","","A blocked scope: `{ ... }`.",156,null],[13,"Box","","A box expression: `box f`.",156,null],[13,"Break","","A `break`, with an optional label to break and an optional…",156,null],[13,"Call","","A function call expression: `invoke(a, b)`.",156,null],[13,"Cast","","A cast expression: `foo as f64`.",156,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",156,null],[13,"Continue","","A `continue`, with an optional label.",156,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",156,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",156,null],[13,"Group","","An expression contained within invisible delimiters.",156,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",156,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",156,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",156,null],[13,"Lit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",156,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",156,null],[13,"Macro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",156,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",156,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",156,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",156,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",156,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",156,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",156,null],[13,"Repeat","","An array literal constructed from one repeated element:…",156,null],[13,"Return","","A `return`, with an optional value to be returned.",156,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",156,null],[13,"Try","","A try-expression: `expr?`.",156,null],[13,"TryBlock","","A try block: `try { ... }`.",156,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",156,null],[13,"Type","","A type ascription expression: `foo: f64`.",156,null],[13,"Unary","","A unary operation: `!x`, `*x`.",156,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",156,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",156,null],[13,"While","","A while loop: `while expr { ... }`.",156,null],[13,"Yield","","A yield expression: `yield expr`.",156,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",157,null],[13,"Unnamed","","An unnamed field like `self.0`.",157,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",158,null],[13,"Lifetime","","A lifetime definition: `\'a: \'b + \'c + \'d`.",158,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",158,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",159,null],[13,"Maybe","","",159,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",160,null],[13,"Lifetime","","",160,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",161,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",161,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",161,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"Receiver","","The `self` argument of an associated method, whether taken…",162,null],[13,"Typed","","A function argument accepted by pattern and type.",162,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",163,null],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",163,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",163,null],[13,"Macro","","A macro invocation within an extern block.",163,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",163,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",164,null],[13,"Method","","A method within an impl block.",164,null],[13,"Type","","An associated type within an impl block.",164,null],[13,"Macro","","A macro invocation within an impl block.",164,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",164,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",165,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",165,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",165,null],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",165,null],[13,"ForeignMod","","A block of foreign items: `extern \\\"C\\\" { ... }`.",165,null],[13,"Impl","","An impl block providing trait or associated items:…",165,null],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",165,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",165,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",165,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",165,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",165,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",165,null],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",165,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",165,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",165,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",165,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",165,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",166,null],[13,"Method","","A trait method within the definition of a trait.",166,null],[13,"Type","","An associated type within the definition of a trait.",166,null],[13,"Macro","","A macro invocation within the definition of a trait.",166,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",166,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",null,null],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",167,null],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",167,null],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",167,null],[13,"Glob","","A glob import in a `use` item: `*`.",167,null],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",167,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\\\"foo\\\"`.",168,null],[13,"ByteStr","","A byte string literal: `b\\\"foo\\\"`.",168,null],[13,"Byte","","A byte literal: `b\'f\'`.",168,null],[13,"Char","","A character literal: `\'a\'`.",168,null],[13,"Int","","An integer literal: `1` or `1u16`.",168,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",168,null],[13,"Bool","","A boolean literal: `true` or `false`.",168,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",168,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\\\"data\\\"`.",169,null],[13,"Raw","","A raw string like `r##\\\"data\\\"##`.",169,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",170,null],[13,"Brace","","",170,null],[13,"Bracket","","",170,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",171,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",171,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",171,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",172,null],[13,"Sub","","The `-` operator (subtraction)",172,null],[13,"Mul","","The `*` operator (multiplication)",172,null],[13,"Div","","The `/` operator (division)",172,null],[13,"Rem","","The `%` operator (modulus)",172,null],[13,"And","","The `&&` operator (logical and)",172,null],[13,"Or","","The `||` operator (logical or)",172,null],[13,"BitXor","","The `^` operator (bitwise xor)",172,null],[13,"BitAnd","","The `&` operator (bitwise and)",172,null],[13,"BitOr","","The `|` operator (bitwise or)",172,null],[13,"Shl","","The `<<` operator (shift left)",172,null],[13,"Shr","","The `>>` operator (shift right)",172,null],[13,"Eq","","The `==` operator (equality)",172,null],[13,"Lt","","The `<` operator (less than)",172,null],[13,"Le","","The `<=` operator (less than or equal to)",172,null],[13,"Ne","","The `!=` operator (not equal to)",172,null],[13,"Ge","","The `>=` operator (greater than or equal to)",172,null],[13,"Gt","","The `>` operator (greater than)",172,null],[13,"AddEq","","The `+=` operator",172,null],[13,"SubEq","","The `-=` operator",172,null],[13,"MulEq","","The `*=` operator",172,null],[13,"DivEq","","The `/=` operator",172,null],[13,"RemEq","","The `%=` operator",172,null],[13,"BitXorEq","","The `^=` operator",172,null],[13,"BitAndEq","","The `&=` operator",172,null],[13,"BitOrEq","","The `|=` operator",172,null],[13,"ShlEq","","The `<<=` operator",172,null],[13,"ShrEq","","The `>>=` operator",172,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",173,null],[13,"Not","","The `!` operator for logical inversion",173,null],[13,"Neg","","The `-` operator for negation",173,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",174,null],[13,"Item","","An item definition.",174,null],[13,"Expr","","Expr without trailing semicolon.",174,null],[13,"Semi","","Expression with trailing semicolon.",174,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",175,null],[13,"Type","","A particular type is returned.",175,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",176,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",176,null],[13,"Group","","A type contained within invisible delimiters.",176,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",176,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",176,null],[13,"Macro","","A macro in the type position.",176,null],[13,"Never","","The never type: `!`.",176,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",176,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",176,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",176,null],[13,"Reference","","A reference type: `&\'a T` or `&\'a mut T`.",176,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",176,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",176,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",176,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",176,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Box","","A box pattern: `box v`.",177,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",177,null],[13,"Lit","","A literal pattern: `0`.",177,null],[13,"Macro","","A macro in pattern position.",177,null],[13,"Or","","A pattern that matches any one of a set of cases.",177,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",177,null],[13,"Range","","A range pattern: `1..=2`.",177,null],[13,"Reference","","A reference pattern: `&mut var`.",177,null],[13,"Rest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",177,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",177,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",177,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",177,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",177,null],[13,"Type","","A type ascription pattern: `foo: f64`.",177,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",177,null],[13,"Wild","","A pattern that matches any value: `_`.",177,null],[4,"GenericArgument","","An individual generic argument, like `\'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",178,null],[13,"Type","","A type argument.",178,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",178,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",178,null],[13,"Const","","A const expression. Must be inside of a block.",178,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",179,null],[13,"AngleBracketed","","The `<\'a, T>` in `std::slice::iter<\'a, T>`.",179,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",179,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[],[["result",6],["parse",8]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[],[["file",3],["result",6]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",180,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",181,null],[3,"As","","`as`",null,null],[12,"span","","",182,null],[3,"Async","","`async`",null,null],[12,"span","","",183,null],[3,"Auto","","`auto`",null,null],[12,"span","","",184,null],[3,"Await","","`await`",null,null],[12,"span","","",185,null],[3,"Become","","`become`",null,null],[12,"span","","",186,null],[3,"Box","","`box`",null,null],[12,"span","","",187,null],[3,"Break","","`break`",null,null],[12,"span","","",188,null],[3,"Const","","`const`",null,null],[12,"span","","",189,null],[3,"Continue","","`continue`",null,null],[12,"span","","",190,null],[3,"Crate","","`crate`",null,null],[12,"span","","",191,null],[3,"Default","","`default`",null,null],[12,"span","","",192,null],[3,"Do","","`do`",null,null],[12,"span","","",193,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",194,null],[3,"Else","","`else`",null,null],[12,"span","","",195,null],[3,"Enum","","`enum`",null,null],[12,"span","","",196,null],[3,"Extern","","`extern`",null,null],[12,"span","","",197,null],[3,"Final","","`final`",null,null],[12,"span","","",198,null],[3,"Fn","","`fn`",null,null],[12,"span","","",199,null],[3,"For","","`for`",null,null],[12,"span","","",200,null],[3,"If","","`if`",null,null],[12,"span","","",201,null],[3,"Impl","","`impl`",null,null],[12,"span","","",202,null],[3,"In","","`in`",null,null],[12,"span","","",203,null],[3,"Let","","`let`",null,null],[12,"span","","",204,null],[3,"Loop","","`loop`",null,null],[12,"span","","",205,null],[3,"Macro","","`macro`",null,null],[12,"span","","",206,null],[3,"Match","","`match`",null,null],[12,"span","","",207,null],[3,"Mod","","`mod`",null,null],[12,"span","","",208,null],[3,"Move","","`move`",null,null],[12,"span","","",209,null],[3,"Mut","","`mut`",null,null],[12,"span","","",210,null],[3,"Override","","`override`",null,null],[12,"span","","",211,null],[3,"Priv","","`priv`",null,null],[12,"span","","",212,null],[3,"Pub","","`pub`",null,null],[12,"span","","",213,null],[3,"Ref","","`ref`",null,null],[12,"span","","",214,null],[3,"Return","","`return`",null,null],[12,"span","","",215,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",216,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",217,null],[3,"Static","","`static`",null,null],[12,"span","","",218,null],[3,"Struct","","`struct`",null,null],[12,"span","","",219,null],[3,"Super","","`super`",null,null],[12,"span","","",220,null],[3,"Trait","","`trait`",null,null],[12,"span","","",221,null],[3,"Try","","`try`",null,null],[12,"span","","",222,null],[3,"Type","","`type`",null,null],[12,"span","","",223,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",224,null],[3,"Union","","`union`",null,null],[12,"span","","",225,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",226,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",227,null],[3,"Use","","`use`",null,null],[12,"span","","",228,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",229,null],[3,"Where","","`where`",null,null],[12,"span","","",230,null],[3,"While","","`while`",null,null],[12,"span","","",231,null],[3,"Yield","","`yield`",null,null],[12,"span","","",232,null],[3,"Add","","`+`",null,null],[12,"spans","","",233,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",234,null],[3,"And","","`&`",null,null],[12,"spans","","",235,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",236,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",237,null],[3,"At","","`@`",null,null],[12,"spans","","",238,null],[3,"Bang","","`!`",null,null],[12,"spans","","",239,null],[3,"Caret","","`^`",null,null],[12,"spans","","",240,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",241,null],[3,"Colon","","`:`",null,null],[12,"spans","","",242,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",243,null],[3,"Comma","","`,`",null,null],[12,"spans","","",244,null],[3,"Div","","`/`",null,null],[12,"spans","","",245,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",246,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",247,null],[3,"Dot","","`.`",null,null],[12,"spans","","",248,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",249,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",250,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",251,null],[3,"Eq","","`=`",null,null],[12,"spans","","",252,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",253,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",254,null],[3,"Gt","","`>`",null,null],[12,"spans","","",255,null],[3,"Le","","`<=`",null,null],[12,"spans","","",256,null],[3,"Lt","","`<`",null,null],[12,"spans","","",257,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",258,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",259,null],[3,"Or","","`|`",null,null],[12,"spans","","",260,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",261,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",262,null],[3,"Pound","","`#`",null,null],[12,"spans","","",263,null],[3,"Question","","`?`",null,null],[12,"spans","","",264,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",265,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",266,null],[3,"Rem","","`%`",null,null],[12,"spans","","",267,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",268,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",269,null],[3,"Semi","","`;`",null,null],[12,"spans","","",270,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",271,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",272,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",273,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",274,null],[3,"Star","","`*`",null,null],[12,"spans","","",275,null],[3,"Sub","","`-`",null,null],[12,"spans","","",276,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",277,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",278,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",279,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",280,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",281,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",282,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",279,[[["tokenstream",3]]]],[11,"surround","","",280,[[["tokenstream",3]]]],[11,"surround","","",281,[[["tokenstream",3]]]],[11,"surround","","",282,[[["tokenstream",3]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[],[["result",6],["meta",4]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",0,[[],[["parse",8],["result",6]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",0,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"path","","Returns the identifier that begins this structured meta…",150,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",152,[[],[["iter",3],["field",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",152,[[],[["itermut",3],["field",3]]]],[11,"len","","Returns the number of fields.",152,[[]]],[11,"is_empty","","Returns `true` if there are zero fields.",152,[[]]],[11,"parse_without_eager_brace","","An alternative to the primary `Expr::parse` parser (from…",156,[[["parsestream",6]],[["result",6],["expr",4]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",56,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",56,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",56,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",56,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",56,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",56,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",56,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for…",56,[[]]],[11,"as_turbofish","","Turn a type\'s generics like `<X, Y>` into a turbofish like…",283,[[],["turbofish",3]]],[11,"new","","",57,[[["lifetime",3]]]],[11,"receiver","","A method\'s `self` receiver, such as `&self` or `self:…",89,[[],[["option",4],["fnarg",4]]]],[11,"lifetime","","",88,[[],[["lifetime",3],["option",4]]]],[11,"new","","PanicsPanics if the lifetime does not conform to the…",100,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",168,[[["literal",3]]]],[11,"suffix","","",168,[[]]],[11,"span","","",168,[[],["span",3]]],[11,"set_span","","",168,[[["span",3]]]],[11,"new","","",284,[[["span",3]]]],[11,"value","","",284,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string…",284,[[],[["parse",8],["result",6]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",284,[[["parser",8]],["result",6]]],[11,"span","","",284,[[],["span",3]]],[11,"set_span","","",284,[[["span",3]]]],[11,"suffix","","",284,[[]]],[11,"new","","",285,[[["span",3]]]],[11,"value","","",285,[[],["vec",3]]],[11,"span","","",285,[[],["span",3]]],[11,"set_span","","",285,[[["span",3]]]],[11,"suffix","","",285,[[]]],[11,"new","","",286,[[["span",3]]]],[11,"value","","",286,[[]]],[11,"span","","",286,[[],["span",3]]],[11,"set_span","","",286,[[["span",3]]]],[11,"suffix","","",286,[[]]],[11,"new","","",287,[[["span",3]]]],[11,"value","","",287,[[]]],[11,"span","","",287,[[],["span",3]]],[11,"set_span","","",287,[[["span",3]]]],[11,"suffix","","",287,[[]]],[11,"new","","",288,[[["span",3]]]],[11,"base10_digits","","",288,[[]]],[11,"base10_parse","","Parses the literal into a selected number type.",288,[[],["result",6]]],[11,"suffix","","",288,[[]]],[11,"span","","",288,[[],["span",3]]],[11,"set_span","","",288,[[["span",3]]]],[11,"new","","",289,[[["span",3]]]],[11,"base10_digits","","",289,[[]]],[11,"base10_parse","","",289,[[],["result",6]]],[11,"suffix","","",289,[[]]],[11,"span","","",289,[[],["span",3]]],[11,"set_span","","",289,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters…",102,[[],[["parse",8],["result",6]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters…",102,[[["parser",8]],["result",6]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",107,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",176,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",175,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",123,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",146,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",146,[[]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",146,[[],[["option",4],["ident",3]]]],[11,"is_empty","","",179,[[]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",290,[[],["cursor",3]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",291,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",291,[[]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",291,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",291,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",291,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",291,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",291,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",291,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",291,[[],["option",4]]],[11,"span","","Returns the `Span` of the current token, or…",291,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",292,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",292,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",292,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",293,null],[13,"End","","",293,null],[11,"new","","Creates an empty punctuated sequence.",294,[[],["punctuated",3]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",294,[[]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",294,[[]]],[11,"first","","Borrows the first element in this sequence.",294,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",294,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",294,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",294,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",294,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",294,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",294,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",294,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",294,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",294,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",294,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",294,[[],[["option",4],["pair",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",294,[[]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",294,[[]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",294,[[]]],[11,"insert","","Inserts an element at position `index`.",294,[[]]],[11,"clear","","Clears the sequence of all values and punctuation, making…",294,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",294,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",294,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",294,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",294,[[["parsestream",6]],["result",6]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",293,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",293,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",293,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",293,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",293,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",293,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",295,[[],["span",3]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm","","",null,[[["arm",3]]]],[5,"visit_attr_style","","",null,[[["attrstyle",4]]]],[5,"visit_attribute","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op","","",null,[[["binop",4]]]],[5,"visit_binding","","",null,[[["binding",3]]]],[5,"visit_block","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param","","",null,[[["constparam",3]]]],[5,"visit_constraint","","",null,[[["constraint",3]]]],[5,"visit_data","","",null,[[["data",4]]]],[5,"visit_data_enum","","",null,[[["dataenum",3]]]],[5,"visit_data_struct","","",null,[[["datastruct",3]]]],[5,"visit_data_union","","",null,[[["dataunion",3]]]],[5,"visit_derive_input","","",null,[[["deriveinput",3]]]],[5,"visit_expr","","",null,[[["expr",4]]]],[5,"visit_expr_array","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async","","",null,[[["exprasync",3]]]],[5,"visit_expr_await","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block","","",null,[[["exprblock",3]]]],[5,"visit_expr_box","","",null,[[["exprbox",3]]]],[5,"visit_expr_break","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if","","",null,[[["exprif",3]]]],[5,"visit_expr_index","","",null,[[["exprindex",3]]]],[5,"visit_expr_let","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren","","",null,[[["exprparen",3]]]],[5,"visit_expr_path","","",null,[[["exprpath",3]]]],[5,"visit_expr_range","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield","","",null,[[["expryield",3]]]],[5,"visit_field","","",null,[[["field",3]]]],[5,"visit_field_pat","","",null,[[["fieldpat",3]]]],[5,"visit_field_value","","",null,[[["fieldvalue",3]]]],[5,"visit_fields","","",null,[[["fields",4]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file","","",null,[[["file",3]]]],[5,"visit_fn_arg","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param","","",null,[[["genericparam",4]]]],[5,"visit_generics","","",null,[[["generics",3]]]],[5,"visit_ident","","",null,[[["ident",3]]]],[5,"visit_impl_item","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type","","",null,[[["implitemtype",3]]]],[5,"visit_index","","",null,[[["index",3]]]],[5,"visit_item","","",null,[[["item",4]]]],[5,"visit_item_const","","",null,[[["itemconst",3]]]],[5,"visit_item_enum","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod","","",null,[[["itemmod",3]]]],[5,"visit_item_static","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type","","",null,[[["itemtype",3]]]],[5,"visit_item_union","","",null,[[["itemunion",3]]]],[5,"visit_item_use","","",null,[[["itemuse",3]]]],[5,"visit_label","","",null,[[["label",3]]]],[5,"visit_lifetime","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef",3]]]],[5,"visit_lit","","",null,[[["lit",4]]]],[5,"visit_lit_bool","","",null,[[["litbool",3]]]],[5,"visit_lit_byte","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char","","",null,[[["litchar",3]]]],[5,"visit_lit_float","","",null,[[["litfloat",3]]]],[5,"visit_lit_int","","",null,[[["litint",3]]]],[5,"visit_lit_str","","",null,[[["litstr",3]]]],[5,"visit_local","","",null,[[["local",3]]]],[5,"visit_macro","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter",4]]]],[5,"visit_member","","",null,[[["member",4]]]],[5,"visit_meta","","",null,[[["meta",4]]]],[5,"visit_meta_list","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat","","",null,[[["pat",4]]]],[5,"visit_pat_box","","",null,[[["patbox",3]]]],[5,"visit_pat_ident","","",null,[[["patident",3]]]],[5,"visit_pat_lit","","",null,[[["patlit",3]]]],[5,"visit_pat_macro","","",null,[[["patmacro",3]]]],[5,"visit_pat_or","","",null,[[["pator",3]]]],[5,"visit_pat_path","","",null,[[["patpath",3]]]],[5,"visit_pat_range","","",null,[[["patrange",3]]]],[5,"visit_pat_reference","","",null,[[["patreference",3]]]],[5,"visit_pat_rest","","",null,[[["patrest",3]]]],[5,"visit_pat_slice","","",null,[[["patslice",3]]]],[5,"visit_pat_struct","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type","","",null,[[["pattype",3]]]],[5,"visit_pat_wild","","",null,[[["patwild",3]]]],[5,"visit_path","","",null,[[["path",3]]]],[5,"visit_path_arguments","","",null,[[["patharguments",4]]]],[5,"visit_path_segment","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type","","",null,[[["predicatetype",3]]]],[5,"visit_qself","","",null,[[["qself",3]]]],[5,"visit_range_limits","","",null,[[["rangelimits",4]]]],[5,"visit_receiver","","",null,[[["receiver",3]]]],[5,"visit_return_type","","",null,[[["returntype",4]]]],[5,"visit_signature","","",null,[[["signature",3]]]],[5,"visit_span","","",null,[[["span",3]]]],[5,"visit_stmt","","",null,[[["stmt",4]]]],[5,"visit_trait_bound","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type","","",null,[[["traititemtype",3]]]],[5,"visit_type","","",null,[[["type",4]]]],[5,"visit_type_array","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn",3]]]],[5,"visit_type_group","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro","","",null,[[["typemacro",3]]]],[5,"visit_type_never","","",null,[[["typenever",3]]]],[5,"visit_type_param","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren","","",null,[[["typeparen",3]]]],[5,"visit_type_path","","",null,[[["typepath",3]]]],[5,"visit_type_ptr","","",null,[[["typeptr",3]]]],[5,"visit_type_reference","","",null,[[["typereference",3]]]],[5,"visit_type_slice","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple","","",null,[[["typetuple",3]]]],[5,"visit_un_op","","",null,[[["unop",4]]]],[5,"visit_use_glob","","",null,[[["useglob",3]]]],[5,"visit_use_group","","",null,[[["usegroup",3]]]],[5,"visit_use_name","","",null,[[["usename",3]]]],[5,"visit_use_path","","",null,[[["usepath",3]]]],[5,"visit_use_rename","","",null,[[["userename",3]]]],[5,"visit_use_tree","","",null,[[["usetree",4]]]],[5,"visit_variadic","","",null,[[["variadic",3]]]],[5,"visit_variant","","",null,[[["variant",3]]]],[5,"visit_vis_crate","","",null,[[["viscrate",3]]]],[5,"visit_vis_public","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted",3]]]],[5,"visit_visibility","","",null,[[["visibility",4]]]],[5,"visit_where_clause","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate",4]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",296,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",296,[[["arm",3]]]],[11,"visit_attr_style","","",296,[[["attrstyle",4]]]],[11,"visit_attribute","","",296,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",296,[[["barefnarg",3]]]],[11,"visit_bin_op","","",296,[[["binop",4]]]],[11,"visit_binding","","",296,[[["binding",3]]]],[11,"visit_block","","",296,[[["block",3]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",296,[[["constparam",3]]]],[11,"visit_constraint","","",296,[[["constraint",3]]]],[11,"visit_data","","",296,[[["data",4]]]],[11,"visit_data_enum","","",296,[[["dataenum",3]]]],[11,"visit_data_struct","","",296,[[["datastruct",3]]]],[11,"visit_data_union","","",296,[[["dataunion",3]]]],[11,"visit_derive_input","","",296,[[["deriveinput",3]]]],[11,"visit_expr","","",296,[[["expr",4]]]],[11,"visit_expr_array","","",296,[[["exprarray",3]]]],[11,"visit_expr_assign","","",296,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",296,[[["exprassignop",3]]]],[11,"visit_expr_async","","",296,[[["exprasync",3]]]],[11,"visit_expr_await","","",296,[[["exprawait",3]]]],[11,"visit_expr_binary","","",296,[[["exprbinary",3]]]],[11,"visit_expr_block","","",296,[[["exprblock",3]]]],[11,"visit_expr_box","","",296,[[["exprbox",3]]]],[11,"visit_expr_break","","",296,[[["exprbreak",3]]]],[11,"visit_expr_call","","",296,[[["exprcall",3]]]],[11,"visit_expr_cast","","",296,[[["exprcast",3]]]],[11,"visit_expr_closure","","",296,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",296,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",296,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",296,[[["exprforloop",3]]]],[11,"visit_expr_group","","",296,[[["exprgroup",3]]]],[11,"visit_expr_if","","",296,[[["exprif",3]]]],[11,"visit_expr_index","","",296,[[["exprindex",3]]]],[11,"visit_expr_let","","",296,[[["exprlet",3]]]],[11,"visit_expr_lit","","",296,[[["exprlit",3]]]],[11,"visit_expr_loop","","",296,[[["exprloop",3]]]],[11,"visit_expr_macro","","",296,[[["exprmacro",3]]]],[11,"visit_expr_match","","",296,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",296,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",296,[[["exprparen",3]]]],[11,"visit_expr_path","","",296,[[["exprpath",3]]]],[11,"visit_expr_range","","",296,[[["exprrange",3]]]],[11,"visit_expr_reference","","",296,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",296,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",296,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",296,[[["exprstruct",3]]]],[11,"visit_expr_try","","",296,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",296,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",296,[[["exprtuple",3]]]],[11,"visit_expr_type","","",296,[[["exprtype",3]]]],[11,"visit_expr_unary","","",296,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",296,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",296,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",296,[[["expryield",3]]]],[11,"visit_field","","",296,[[["field",3]]]],[11,"visit_field_pat","","",296,[[["fieldpat",3]]]],[11,"visit_field_value","","",296,[[["fieldvalue",3]]]],[11,"visit_fields","","",296,[[["fields",4]]]],[11,"visit_fields_named","","",296,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",296,[[["fieldsunnamed",3]]]],[11,"visit_file","","",296,[[["file",3]]]],[11,"visit_fn_arg","","",296,[[["fnarg",4]]]],[11,"visit_foreign_item","","",296,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",296,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",296,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",296,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",296,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",296,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",296,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",296,[[["genericparam",4]]]],[11,"visit_generics","","",296,[[["generics",3]]]],[11,"visit_ident","","",296,[[["ident",3]]]],[11,"visit_impl_item","","",296,[[["implitem",4]]]],[11,"visit_impl_item_const","","",296,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",296,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",296,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",296,[[["implitemtype",3]]]],[11,"visit_index","","",296,[[["index",3]]]],[11,"visit_item","","",296,[[["item",4]]]],[11,"visit_item_const","","",296,[[["itemconst",3]]]],[11,"visit_item_enum","","",296,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",296,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",296,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",296,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",296,[[["itemimpl",3]]]],[11,"visit_item_macro","","",296,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",296,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",296,[[["itemmod",3]]]],[11,"visit_item_static","","",296,[[["itemstatic",3]]]],[11,"visit_item_struct","","",296,[[["itemstruct",3]]]],[11,"visit_item_trait","","",296,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",296,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",296,[[["itemtype",3]]]],[11,"visit_item_union","","",296,[[["itemunion",3]]]],[11,"visit_item_use","","",296,[[["itemuse",3]]]],[11,"visit_label","","",296,[[["label",3]]]],[11,"visit_lifetime","","",296,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",296,[[["lifetimedef",3]]]],[11,"visit_lit","","",296,[[["lit",4]]]],[11,"visit_lit_bool","","",296,[[["litbool",3]]]],[11,"visit_lit_byte","","",296,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",296,[[["litbytestr",3]]]],[11,"visit_lit_char","","",296,[[["litchar",3]]]],[11,"visit_lit_float","","",296,[[["litfloat",3]]]],[11,"visit_lit_int","","",296,[[["litint",3]]]],[11,"visit_lit_str","","",296,[[["litstr",3]]]],[11,"visit_local","","",296,[[["local",3]]]],[11,"visit_macro","","",296,[[["macro",3]]]],[11,"visit_macro_delimiter","","",296,[[["macrodelimiter",4]]]],[11,"visit_member","","",296,[[["member",4]]]],[11,"visit_meta","","",296,[[["meta",4]]]],[11,"visit_meta_list","","",296,[[["metalist",3]]]],[11,"visit_meta_name_value","","",296,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",296,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",296,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",296,[[["pat",4]]]],[11,"visit_pat_box","","",296,[[["patbox",3]]]],[11,"visit_pat_ident","","",296,[[["patident",3]]]],[11,"visit_pat_lit","","",296,[[["patlit",3]]]],[11,"visit_pat_macro","","",296,[[["patmacro",3]]]],[11,"visit_pat_or","","",296,[[["pator",3]]]],[11,"visit_pat_path","","",296,[[["patpath",3]]]],[11,"visit_pat_range","","",296,[[["patrange",3]]]],[11,"visit_pat_reference","","",296,[[["patreference",3]]]],[11,"visit_pat_rest","","",296,[[["patrest",3]]]],[11,"visit_pat_slice","","",296,[[["patslice",3]]]],[11,"visit_pat_struct","","",296,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",296,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",296,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",296,[[["pattype",3]]]],[11,"visit_pat_wild","","",296,[[["patwild",3]]]],[11,"visit_path","","",296,[[["path",3]]]],[11,"visit_path_arguments","","",296,[[["patharguments",4]]]],[11,"visit_path_segment","","",296,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",296,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",296,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",296,[[["predicatetype",3]]]],[11,"visit_qself","","",296,[[["qself",3]]]],[11,"visit_range_limits","","",296,[[["rangelimits",4]]]],[11,"visit_receiver","","",296,[[["receiver",3]]]],[11,"visit_return_type","","",296,[[["returntype",4]]]],[11,"visit_signature","","",296,[[["signature",3]]]],[11,"visit_span","","",296,[[["span",3]]]],[11,"visit_stmt","","",296,[[["stmt",4]]]],[11,"visit_trait_bound","","",296,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",296,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",296,[[["traititem",4]]]],[11,"visit_trait_item_const","","",296,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",296,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",296,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",296,[[["traititemtype",3]]]],[11,"visit_type","","",296,[[["type",4]]]],[11,"visit_type_array","","",296,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",296,[[["typebarefn",3]]]],[11,"visit_type_group","","",296,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",296,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",296,[[["typeinfer",3]]]],[11,"visit_type_macro","","",296,[[["typemacro",3]]]],[11,"visit_type_never","","",296,[[["typenever",3]]]],[11,"visit_type_param","","",296,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",296,[[["typeparambound",4]]]],[11,"visit_type_paren","","",296,[[["typeparen",3]]]],[11,"visit_type_path","","",296,[[["typepath",3]]]],[11,"visit_type_ptr","","",296,[[["typeptr",3]]]],[11,"visit_type_reference","","",296,[[["typereference",3]]]],[11,"visit_type_slice","","",296,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",296,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",296,[[["typetuple",3]]]],[11,"visit_un_op","","",296,[[["unop",4]]]],[11,"visit_use_glob","","",296,[[["useglob",3]]]],[11,"visit_use_group","","",296,[[["usegroup",3]]]],[11,"visit_use_name","","",296,[[["usename",3]]]],[11,"visit_use_path","","",296,[[["usepath",3]]]],[11,"visit_use_rename","","",296,[[["userename",3]]]],[11,"visit_use_tree","","",296,[[["usetree",4]]]],[11,"visit_variadic","","",296,[[["variadic",3]]]],[11,"visit_variant","","",296,[[["variant",3]]]],[11,"visit_vis_crate","","",296,[[["viscrate",3]]]],[11,"visit_vis_public","","",296,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",296,[[["visrestricted",3]]]],[11,"visit_visibility","","",296,[[["visibility",4]]]],[11,"visit_where_clause","","",296,[[["whereclause",3]]]],[11,"visit_where_predicate","","",296,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",297,[[]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",298,[[["parsestream",6]],["result",6]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",299,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",299,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",299,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",299,[[],["result",6]]],[11,"error","","Triggers an error at the current position of the parse…",300,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",301,[[],[["parse",8],["result",6]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",301,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine…",301,[[["peek",8]]]],[11,"peek2","","Looks at the second-next token in the parse stream.",301,[[["peek",8]]]],[11,"peek3","","Looks at the third-next token in the parse stream.",301,[[["peek",8]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",301,[[],[["punctuated",3],["result",6]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",301,[[]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",301,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",301,[[]]],[11,"error","","Triggers an error at the current position of the parse…",301,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream,…",301,[[],["result",6]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",301,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation…",301,[[],["cursor",3]]],[11,"new","syn","Usually the `ParseStream::error` method will be used…",302,[[["display",8],["span",3]]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",302,[[["display",8],["totokens",8]]]],[11,"span","","The source location of the error.",302,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of `compile_error!`.",302,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when…",302,[[["error",3]]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the `quote!`…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",303,[[["cursor",3]]]],[11,"display","","",303,[[]]],[11,"span","","",303,[[],["span",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"to_string","","",303,[[],["string",3]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"span","","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",304,[[],["span",3]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"span","","",305,[[],["span",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"span","","",283,[[],["span",3]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"span","","",99,[[],["span",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"span","","",100,[[],["span",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"to_string","","",100,[[],["string",3]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"span","","",101,[[],["span",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"peek","","",286,[[["cursor",3]]]],[11,"display","","",286,[[]]],[11,"span","","",286,[[],["span",3]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"peek","","",285,[[["cursor",3]]]],[11,"display","","",285,[[]]],[11,"span","","",285,[[],["span",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"peek","","",287,[[["cursor",3]]]],[11,"display","","",287,[[]]],[11,"span","","",287,[[],["span",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"peek","","",289,[[["cursor",3]]]],[11,"display","","",289,[[]]],[11,"span","","",289,[[],["span",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"to_string","","",289,[[],["string",3]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"peek","","",288,[[["cursor",3]]]],[11,"display","","",288,[[]]],[11,"span","","",288,[[],["span",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"to_string","","",288,[[],["string",3]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"peek","","",284,[[["cursor",3]]]],[11,"display","","",284,[[]]],[11,"span","","",284,[[],["span",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"span","","",102,[[],["span",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"span","","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"span","","",108,[[],["span",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"span","","",109,[[],["span",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"span","","",110,[[],["span",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"span","","",111,[[],["span",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"span","","",112,[[],["span",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"span","","",113,[[],["span",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"span","","",114,[[],["span",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"span","","",115,[[],["span",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"span","","",116,[[],["span",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"span","","",117,[[],["span",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",136,[[],["span",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",137,[[],["span",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"into_iter","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"to_string","","",302,[[],["string",3]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"into_iter","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"peek","","",168,[[["cursor",3]]]],[11,"display","","",168,[[]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"peek","syn::token","",180,[[["cursor",3]]]],[11,"display","","",180,[[]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"peek","","",181,[[["cursor",3]]]],[11,"display","","",181,[[]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"peek","","",182,[[["cursor",3]]]],[11,"display","","",182,[[]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"peek","","",183,[[["cursor",3]]]],[11,"display","","",183,[[]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"peek","","",184,[[["cursor",3]]]],[11,"display","","",184,[[]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"peek","","",185,[[["cursor",3]]]],[11,"display","","",185,[[]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"peek","","",186,[[["cursor",3]]]],[11,"display","","",186,[[]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"peek","","",187,[[["cursor",3]]]],[11,"display","","",187,[[]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"peek","","",188,[[["cursor",3]]]],[11,"display","","",188,[[]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"peek","","",189,[[["cursor",3]]]],[11,"display","","",189,[[]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"peek","","",190,[[["cursor",3]]]],[11,"display","","",190,[[]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"peek","","",191,[[["cursor",3]]]],[11,"display","","",191,[[]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"peek","","",192,[[["cursor",3]]]],[11,"display","","",192,[[]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"peek","","",193,[[["cursor",3]]]],[11,"display","","",193,[[]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"peek","","",194,[[["cursor",3]]]],[11,"display","","",194,[[]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"peek","","",195,[[["cursor",3]]]],[11,"display","","",195,[[]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"peek","","",196,[[["cursor",3]]]],[11,"display","","",196,[[]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"peek","","",197,[[["cursor",3]]]],[11,"display","","",197,[[]]],[11,"span","","",197,[[],["span",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"peek","","",198,[[["cursor",3]]]],[11,"display","","",198,[[]]],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"peek","","",199,[[["cursor",3]]]],[11,"display","","",199,[[]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"peek","","",200,[[["cursor",3]]]],[11,"display","","",200,[[]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"peek","","",201,[[["cursor",3]]]],[11,"display","","",201,[[]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"peek","","",202,[[["cursor",3]]]],[11,"display","","",202,[[]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"peek","","",203,[[["cursor",3]]]],[11,"display","","",203,[[]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"peek","","",204,[[["cursor",3]]]],[11,"display","","",204,[[]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"peek","","",205,[[["cursor",3]]]],[11,"display","","",205,[[]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"peek","","",206,[[["cursor",3]]]],[11,"display","","",206,[[]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"peek","","",207,[[["cursor",3]]]],[11,"display","","",207,[[]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"peek","","",208,[[["cursor",3]]]],[11,"display","","",208,[[]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"peek","","",209,[[["cursor",3]]]],[11,"display","","",209,[[]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"peek","","",210,[[["cursor",3]]]],[11,"display","","",210,[[]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"peek","","",211,[[["cursor",3]]]],[11,"display","","",211,[[]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"peek","","",212,[[["cursor",3]]]],[11,"display","","",212,[[]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"peek","","",213,[[["cursor",3]]]],[11,"display","","",213,[[]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"peek","","",214,[[["cursor",3]]]],[11,"display","","",214,[[]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"peek","","",215,[[["cursor",3]]]],[11,"display","","",215,[[]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"peek","","",216,[[["cursor",3]]]],[11,"display","","",216,[[]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"peek","","",217,[[["cursor",3]]]],[11,"display","","",217,[[]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"peek","","",218,[[["cursor",3]]]],[11,"display","","",218,[[]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"peek","","",219,[[["cursor",3]]]],[11,"display","","",219,[[]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"peek","","",220,[[["cursor",3]]]],[11,"display","","",220,[[]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"peek","","",221,[[["cursor",3]]]],[11,"display","","",221,[[]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"peek","","",222,[[["cursor",3]]]],[11,"display","","",222,[[]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"peek","","",223,[[["cursor",3]]]],[11,"display","","",223,[[]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"peek","","",224,[[["cursor",3]]]],[11,"display","","",224,[[]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"peek","","",225,[[["cursor",3]]]],[11,"display","","",225,[[]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"peek","","",226,[[["cursor",3]]]],[11,"display","","",226,[[]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"peek","","",227,[[["cursor",3]]]],[11,"display","","",227,[[]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"peek","","",228,[[["cursor",3]]]],[11,"display","","",228,[[]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"peek","","",229,[[["cursor",3]]]],[11,"display","","",229,[[]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"peek","","",230,[[["cursor",3]]]],[11,"display","","",230,[[]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"peek","","",231,[[["cursor",3]]]],[11,"display","","",231,[[]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"peek","","",232,[[["cursor",3]]]],[11,"display","","",232,[[]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"peek","","",233,[[["cursor",3]]]],[11,"display","","",233,[[]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"peek","","",234,[[["cursor",3]]]],[11,"display","","",234,[[]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"peek","","",235,[[["cursor",3]]]],[11,"display","","",235,[[]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"peek","","",236,[[["cursor",3]]]],[11,"display","","",236,[[]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"peek","","",237,[[["cursor",3]]]],[11,"display","","",237,[[]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"peek","","",238,[[["cursor",3]]]],[11,"display","","",238,[[]]],[11,"span","","",238,[[],["span",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"peek","","",239,[[["cursor",3]]]],[11,"display","","",239,[[]]],[11,"span","","",239,[[],["span",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"peek","","",240,[[["cursor",3]]]],[11,"display","","",240,[[]]],[11,"span","","",240,[[],["span",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"peek","","",241,[[["cursor",3]]]],[11,"display","","",241,[[]]],[11,"span","","",241,[[],["span",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"peek","","",242,[[["cursor",3]]]],[11,"display","","",242,[[]]],[11,"span","","",242,[[],["span",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"peek","","",243,[[["cursor",3]]]],[11,"display","","",243,[[]]],[11,"span","","",243,[[],["span",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"peek","","",244,[[["cursor",3]]]],[11,"display","","",244,[[]]],[11,"span","","",244,[[],["span",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"peek","","",245,[[["cursor",3]]]],[11,"display","","",245,[[]]],[11,"span","","",245,[[],["span",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"peek","","",246,[[["cursor",3]]]],[11,"display","","",246,[[]]],[11,"span","","",246,[[],["span",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"peek","","",247,[[["cursor",3]]]],[11,"display","","",247,[[]]],[11,"span","","",247,[[],["span",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"peek","","",248,[[["cursor",3]]]],[11,"display","","",248,[[]]],[11,"span","","",248,[[],["span",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"peek","","",249,[[["cursor",3]]]],[11,"display","","",249,[[]]],[11,"span","","",249,[[],["span",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"peek","","",250,[[["cursor",3]]]],[11,"display","","",250,[[]]],[11,"span","","",250,[[],["span",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"peek","","",251,[[["cursor",3]]]],[11,"display","","",251,[[]]],[11,"span","","",251,[[],["span",3]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"peek","","",252,[[["cursor",3]]]],[11,"display","","",252,[[]]],[11,"span","","",252,[[],["span",3]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"peek","","",253,[[["cursor",3]]]],[11,"display","","",253,[[]]],[11,"span","","",253,[[],["span",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"peek","","",254,[[["cursor",3]]]],[11,"display","","",254,[[]]],[11,"span","","",254,[[],["span",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"peek","","",255,[[["cursor",3]]]],[11,"display","","",255,[[]]],[11,"span","","",255,[[],["span",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"peek","","",256,[[["cursor",3]]]],[11,"display","","",256,[[]]],[11,"span","","",256,[[],["span",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"peek","","",257,[[["cursor",3]]]],[11,"display","","",257,[[]]],[11,"span","","",257,[[],["span",3]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"peek","","",258,[[["cursor",3]]]],[11,"display","","",258,[[]]],[11,"span","","",258,[[],["span",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"peek","","",259,[[["cursor",3]]]],[11,"display","","",259,[[]]],[11,"span","","",259,[[],["span",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"peek","","",260,[[["cursor",3]]]],[11,"display","","",260,[[]]],[11,"span","","",260,[[],["span",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"peek","","",261,[[["cursor",3]]]],[11,"display","","",261,[[]]],[11,"span","","",261,[[],["span",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"peek","","",262,[[["cursor",3]]]],[11,"display","","",262,[[]]],[11,"span","","",262,[[],["span",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"peek","","",263,[[["cursor",3]]]],[11,"display","","",263,[[]]],[11,"span","","",263,[[],["span",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"peek","","",264,[[["cursor",3]]]],[11,"display","","",264,[[]]],[11,"span","","",264,[[],["span",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"peek","","",265,[[["cursor",3]]]],[11,"display","","",265,[[]]],[11,"span","","",265,[[],["span",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"peek","","",266,[[["cursor",3]]]],[11,"display","","",266,[[]]],[11,"span","","",266,[[],["span",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"peek","","",267,[[["cursor",3]]]],[11,"display","","",267,[[]]],[11,"span","","",267,[[],["span",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"peek","","",268,[[["cursor",3]]]],[11,"display","","",268,[[]]],[11,"span","","",268,[[],["span",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"peek","","",269,[[["cursor",3]]]],[11,"display","","",269,[[]]],[11,"span","","",269,[[],["span",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"peek","","",270,[[["cursor",3]]]],[11,"display","","",270,[[]]],[11,"span","","",270,[[],["span",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"peek","","",271,[[["cursor",3]]]],[11,"display","","",271,[[]]],[11,"span","","",271,[[],["span",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"peek","","",272,[[["cursor",3]]]],[11,"display","","",272,[[]]],[11,"span","","",272,[[],["span",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"peek","","",273,[[["cursor",3]]]],[11,"display","","",273,[[]]],[11,"span","","",273,[[],["span",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"peek","","",274,[[["cursor",3]]]],[11,"display","","",274,[[]]],[11,"span","","",274,[[],["span",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"peek","","",275,[[["cursor",3]]]],[11,"display","","",275,[[]]],[11,"span","","",275,[[],["span",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"peek","","",276,[[["cursor",3]]]],[11,"display","","",276,[[]]],[11,"span","","",276,[[],["span",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"peek","","",277,[[["cursor",3]]]],[11,"display","","",277,[[]]],[11,"span","","",277,[[],["span",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"peek","","",278,[[["cursor",3]]]],[11,"display","","",278,[[]]],[11,"span","","",278,[[],["span",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"peek","","",279,[[["cursor",3]]]],[11,"display","","",279,[[]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"peek","","",280,[[["cursor",3]]]],[11,"display","","",280,[[]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"peek","","",281,[[["cursor",3]]]],[11,"display","","",281,[[]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"peek","","",282,[[["cursor",3]]]],[11,"display","","",282,[[]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"from","syn::buffer","",290,[[]]],[11,"into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"span","syn::punctuated","",294,[[],["span",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"into_iter","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"into_iter","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"to_owned","","",308,[[]]],[11,"clone_into","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"to_owned","","",309,[[]]],[11,"clone_into","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"to_owned","","",310,[[]]],[11,"clone_into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"span","","",293,[[],["span",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"from","syn::parse","",312,[[]]],[11,"into","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_string","","",301,[[],["string",3]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"cmp","syn","",303,[[["ident",3]],["ordering",4]]],[11,"partial_cmp","","",303,[[["ident",3]],[["ordering",4],["option",4]]]],[11,"eq","","",303,[[]]],[11,"eq","","",303,[[["ident",3]]]],[11,"clone","","",303,[[],["ident",3]]],[11,"fmt","","",303,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",303,[[]]],[11,"fmt","","",303,[[["formatter",3]],[["error",3],["result",4]]]],[11,"span","","",303,[[],[["option",4],["span",3]]]],[11,"fmt","","",303,[[["formatter",3]],[["error",3],["result",4]]]],[11,"to_tokens","","",303,[[["tokenstream",3]]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"peek","","",168,[[["cursor",3]]]],[11,"display","","",168,[[]]],[11,"peek","","",284,[[["cursor",3]]]],[11,"display","","",284,[[]]],[11,"peek","","",285,[[["cursor",3]]]],[11,"display","","",285,[[]]],[11,"peek","","",286,[[["cursor",3]]]],[11,"display","","",286,[[]]],[11,"peek","","",287,[[["cursor",3]]]],[11,"display","","",287,[[]]],[11,"peek","","",288,[[["cursor",3]]]],[11,"display","","",288,[[]]],[11,"peek","","",289,[[["cursor",3]]]],[11,"display","","",289,[[]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"peek","syn::token","",180,[[["cursor",3]]]],[11,"display","","",180,[[]]],[11,"peek","","",281,[[["cursor",3]]]],[11,"display","","",281,[[]]],[11,"peek","","",279,[[["cursor",3]]]],[11,"display","","",279,[[]]],[11,"peek","","",280,[[["cursor",3]]]],[11,"display","","",280,[[]]],[11,"peek","","",282,[[["cursor",3]]]],[11,"display","","",282,[[]]],[11,"peek","","",181,[[["cursor",3]]]],[11,"display","","",181,[[]]],[11,"peek","","",182,[[["cursor",3]]]],[11,"display","","",182,[[]]],[11,"peek","","",183,[[["cursor",3]]]],[11,"display","","",183,[[]]],[11,"peek","","",184,[[["cursor",3]]]],[11,"display","","",184,[[]]],[11,"peek","","",185,[[["cursor",3]]]],[11,"display","","",185,[[]]],[11,"peek","","",186,[[["cursor",3]]]],[11,"display","","",186,[[]]],[11,"peek","","",187,[[["cursor",3]]]],[11,"display","","",187,[[]]],[11,"peek","","",188,[[["cursor",3]]]],[11,"display","","",188,[[]]],[11,"peek","","",189,[[["cursor",3]]]],[11,"display","","",189,[[]]],[11,"peek","","",190,[[["cursor",3]]]],[11,"display","","",190,[[]]],[11,"peek","","",191,[[["cursor",3]]]],[11,"display","","",191,[[]]],[11,"peek","","",192,[[["cursor",3]]]],[11,"display","","",192,[[]]],[11,"peek","","",193,[[["cursor",3]]]],[11,"display","","",193,[[]]],[11,"peek","","",194,[[["cursor",3]]]],[11,"display","","",194,[[]]],[11,"peek","","",195,[[["cursor",3]]]],[11,"display","","",195,[[]]],[11,"peek","","",196,[[["cursor",3]]]],[11,"display","","",196,[[]]],[11,"peek","","",197,[[["cursor",3]]]],[11,"display","","",197,[[]]],[11,"peek","","",198,[[["cursor",3]]]],[11,"display","","",198,[[]]],[11,"peek","","",199,[[["cursor",3]]]],[11,"display","","",199,[[]]],[11,"peek","","",200,[[["cursor",3]]]],[11,"display","","",200,[[]]],[11,"peek","","",201,[[["cursor",3]]]],[11,"display","","",201,[[]]],[11,"peek","","",202,[[["cursor",3]]]],[11,"display","","",202,[[]]],[11,"peek","","",203,[[["cursor",3]]]],[11,"display","","",203,[[]]],[11,"peek","","",204,[[["cursor",3]]]],[11,"display","","",204,[[]]],[11,"peek","","",205,[[["cursor",3]]]],[11,"display","","",205,[[]]],[11,"peek","","",206,[[["cursor",3]]]],[11,"display","","",206,[[]]],[11,"peek","","",207,[[["cursor",3]]]],[11,"display","","",207,[[]]],[11,"peek","","",208,[[["cursor",3]]]],[11,"display","","",208,[[]]],[11,"peek","","",209,[[["cursor",3]]]],[11,"display","","",209,[[]]],[11,"peek","","",210,[[["cursor",3]]]],[11,"display","","",210,[[]]],[11,"peek","","",211,[[["cursor",3]]]],[11,"display","","",211,[[]]],[11,"peek","","",212,[[["cursor",3]]]],[11,"display","","",212,[[]]],[11,"peek","","",213,[[["cursor",3]]]],[11,"display","","",213,[[]]],[11,"peek","","",214,[[["cursor",3]]]],[11,"display","","",214,[[]]],[11,"peek","","",215,[[["cursor",3]]]],[11,"display","","",215,[[]]],[11,"peek","","",216,[[["cursor",3]]]],[11,"display","","",216,[[]]],[11,"peek","","",217,[[["cursor",3]]]],[11,"display","","",217,[[]]],[11,"peek","","",218,[[["cursor",3]]]],[11,"display","","",218,[[]]],[11,"peek","","",219,[[["cursor",3]]]],[11,"display","","",219,[[]]],[11,"peek","","",220,[[["cursor",3]]]],[11,"display","","",220,[[]]],[11,"peek","","",221,[[["cursor",3]]]],[11,"display","","",221,[[]]],[11,"peek","","",222,[[["cursor",3]]]],[11,"display","","",222,[[]]],[11,"peek","","",223,[[["cursor",3]]]],[11,"display","","",223,[[]]],[11,"peek","","",224,[[["cursor",3]]]],[11,"display","","",224,[[]]],[11,"peek","","",225,[[["cursor",3]]]],[11,"display","","",225,[[]]],[11,"peek","","",226,[[["cursor",3]]]],[11,"display","","",226,[[]]],[11,"peek","","",227,[[["cursor",3]]]],[11,"display","","",227,[[]]],[11,"peek","","",228,[[["cursor",3]]]],[11,"display","","",228,[[]]],[11,"peek","","",229,[[["cursor",3]]]],[11,"display","","",229,[[]]],[11,"peek","","",230,[[["cursor",3]]]],[11,"display","","",230,[[]]],[11,"peek","","",231,[[["cursor",3]]]],[11,"display","","",231,[[]]],[11,"peek","","",232,[[["cursor",3]]]],[11,"display","","",232,[[]]],[11,"peek","","",233,[[["cursor",3]]]],[11,"display","","",233,[[]]],[11,"peek","","",234,[[["cursor",3]]]],[11,"display","","",234,[[]]],[11,"peek","","",235,[[["cursor",3]]]],[11,"display","","",235,[[]]],[11,"peek","","",236,[[["cursor",3]]]],[11,"display","","",236,[[]]],[11,"peek","","",237,[[["cursor",3]]]],[11,"display","","",237,[[]]],[11,"peek","","",238,[[["cursor",3]]]],[11,"display","","",238,[[]]],[11,"peek","","",239,[[["cursor",3]]]],[11,"display","","",239,[[]]],[11,"peek","","",240,[[["cursor",3]]]],[11,"display","","",240,[[]]],[11,"peek","","",241,[[["cursor",3]]]],[11,"display","","",241,[[]]],[11,"peek","","",242,[[["cursor",3]]]],[11,"display","","",242,[[]]],[11,"peek","","",243,[[["cursor",3]]]],[11,"display","","",243,[[]]],[11,"peek","","",244,[[["cursor",3]]]],[11,"display","","",244,[[]]],[11,"peek","","",245,[[["cursor",3]]]],[11,"display","","",245,[[]]],[11,"peek","","",246,[[["cursor",3]]]],[11,"display","","",246,[[]]],[11,"peek","","",247,[[["cursor",3]]]],[11,"display","","",247,[[]]],[11,"peek","","",248,[[["cursor",3]]]],[11,"display","","",248,[[]]],[11,"peek","","",249,[[["cursor",3]]]],[11,"display","","",249,[[]]],[11,"peek","","",250,[[["cursor",3]]]],[11,"display","","",250,[[]]],[11,"peek","","",251,[[["cursor",3]]]],[11,"display","","",251,[[]]],[11,"peek","","",252,[[["cursor",3]]]],[11,"display","","",252,[[]]],[11,"peek","","",253,[[["cursor",3]]]],[11,"display","","",253,[[]]],[11,"peek","","",254,[[["cursor",3]]]],[11,"display","","",254,[[]]],[11,"peek","","",255,[[["cursor",3]]]],[11,"display","","",255,[[]]],[11,"peek","","",256,[[["cursor",3]]]],[11,"display","","",256,[[]]],[11,"peek","","",257,[[["cursor",3]]]],[11,"display","","",257,[[]]],[11,"peek","","",258,[[["cursor",3]]]],[11,"display","","",258,[[]]],[11,"peek","","",259,[[["cursor",3]]]],[11,"display","","",259,[[]]],[11,"peek","","",260,[[["cursor",3]]]],[11,"display","","",260,[[]]],[11,"peek","","",261,[[["cursor",3]]]],[11,"display","","",261,[[]]],[11,"peek","","",262,[[["cursor",3]]]],[11,"display","","",262,[[]]],[11,"peek","","",263,[[["cursor",3]]]],[11,"display","","",263,[[]]],[11,"peek","","",264,[[["cursor",3]]]],[11,"display","","",264,[[]]],[11,"peek","","",265,[[["cursor",3]]]],[11,"display","","",265,[[]]],[11,"peek","","",266,[[["cursor",3]]]],[11,"display","","",266,[[]]],[11,"peek","","",267,[[["cursor",3]]]],[11,"display","","",267,[[]]],[11,"peek","","",268,[[["cursor",3]]]],[11,"display","","",268,[[]]],[11,"peek","","",269,[[["cursor",3]]]],[11,"display","","",269,[[]]],[11,"peek","","",270,[[["cursor",3]]]],[11,"display","","",270,[[]]],[11,"peek","","",271,[[["cursor",3]]]],[11,"display","","",271,[[]]],[11,"peek","","",272,[[["cursor",3]]]],[11,"display","","",272,[[]]],[11,"peek","","",273,[[["cursor",3]]]],[11,"display","","",273,[[]]],[11,"peek","","",274,[[["cursor",3]]]],[11,"display","","",274,[[]]],[11,"peek","","",275,[[["cursor",3]]]],[11,"display","","",275,[[]]],[11,"peek","","",276,[[["cursor",3]]]],[11,"display","","",276,[[]]],[11,"peek","","",277,[[["cursor",3]]]],[11,"display","","",277,[[]]],[11,"peek","","",278,[[["cursor",3]]]],[11,"display","","",278,[[]]],[11,"peek","syn","",303,[[["cursor",3]]]],[11,"display","","",303,[[]]],[11,"parse_any","","",303,[[["parsestream",6]],["result",6]]],[11,"unraw","","",303,[[],["ident",3]]],[11,"advance_to","syn::parse","",301,[[]]],[11,"parse","syn::token","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",183,[[["parsestream",6]],["result",6]]],[11,"parse","","",184,[[["parsestream",6]],["result",6]]],[11,"parse","","",185,[[["parsestream",6]],["result",6]]],[11,"parse","","",186,[[["parsestream",6]],["result",6]]],[11,"parse","","",187,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",195,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",197,[[["parsestream",6]],["result",6]]],[11,"parse","","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",199,[[["parsestream",6]],["result",6]]],[11,"parse","","",200,[[["parsestream",6]],["result",6]]],[11,"parse","","",201,[[["parsestream",6]],["result",6]]],[11,"parse","","",202,[[["parsestream",6]],["result",6]]],[11,"parse","","",203,[[["parsestream",6]],["result",6]]],[11,"parse","","",204,[[["parsestream",6]],["result",6]]],[11,"parse","","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",206,[[["parsestream",6]],["result",6]]],[11,"parse","","",207,[[["parsestream",6]],["result",6]]],[11,"parse","","",208,[[["parsestream",6]],["result",6]]],[11,"parse","","",209,[[["parsestream",6]],["result",6]]],[11,"parse","","",210,[[["parsestream",6]],["result",6]]],[11,"parse","","",211,[[["parsestream",6]],["result",6]]],[11,"parse","","",212,[[["parsestream",6]],["result",6]]],[11,"parse","","",213,[[["parsestream",6]],["result",6]]],[11,"parse","","",214,[[["parsestream",6]],["result",6]]],[11,"parse","","",215,[[["parsestream",6]],["result",6]]],[11,"parse","","",216,[[["parsestream",6]],["result",6]]],[11,"parse","","",217,[[["parsestream",6]],["result",6]]],[11,"parse","","",218,[[["parsestream",6]],["result",6]]],[11,"parse","","",219,[[["parsestream",6]],["result",6]]],[11,"parse","","",220,[[["parsestream",6]],["result",6]]],[11,"parse","","",221,[[["parsestream",6]],["result",6]]],[11,"parse","","",222,[[["parsestream",6]],["result",6]]],[11,"parse","","",223,[[["parsestream",6]],["result",6]]],[11,"parse","","",224,[[["parsestream",6]],["result",6]]],[11,"parse","","",225,[[["parsestream",6]],["result",6]]],[11,"parse","","",226,[[["parsestream",6]],["result",6]]],[11,"parse","","",227,[[["parsestream",6]],["result",6]]],[11,"parse","","",228,[[["parsestream",6]],["result",6]]],[11,"parse","","",229,[[["parsestream",6]],["result",6]]],[11,"parse","","",230,[[["parsestream",6]],["result",6]]],[11,"parse","","",231,[[["parsestream",6]],["result",6]]],[11,"parse","","",232,[[["parsestream",6]],["result",6]]],[11,"parse","","",233,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",237,[[["parsestream",6]],["result",6]]],[11,"parse","","",238,[[["parsestream",6]],["result",6]]],[11,"parse","","",239,[[["parsestream",6]],["result",6]]],[11,"parse","","",240,[[["parsestream",6]],["result",6]]],[11,"parse","","",241,[[["parsestream",6]],["result",6]]],[11,"parse","","",242,[[["parsestream",6]],["result",6]]],[11,"parse","","",243,[[["parsestream",6]],["result",6]]],[11,"parse","","",244,[[["parsestream",6]],["result",6]]],[11,"parse","","",245,[[["parsestream",6]],["result",6]]],[11,"parse","","",246,[[["parsestream",6]],["result",6]]],[11,"parse","","",247,[[["parsestream",6]],["result",6]]],[11,"parse","","",248,[[["parsestream",6]],["result",6]]],[11,"parse","","",249,[[["parsestream",6]],["result",6]]],[11,"parse","","",250,[[["parsestream",6]],["result",6]]],[11,"parse","","",251,[[["parsestream",6]],["result",6]]],[11,"parse","","",252,[[["parsestream",6]],["result",6]]],[11,"parse","","",253,[[["parsestream",6]],["result",6]]],[11,"parse","","",254,[[["parsestream",6]],["result",6]]],[11,"parse","","",255,[[["parsestream",6]],["result",6]]],[11,"parse","","",256,[[["parsestream",6]],["result",6]]],[11,"parse","","",257,[[["parsestream",6]],["result",6]]],[11,"parse","","",258,[[["parsestream",6]],["result",6]]],[11,"parse","","",259,[[["parsestream",6]],["result",6]]],[11,"parse","","",260,[[["parsestream",6]],["result",6]]],[11,"parse","","",261,[[["parsestream",6]],["result",6]]],[11,"parse","","",262,[[["parsestream",6]],["result",6]]],[11,"parse","","",263,[[["parsestream",6]],["result",6]]],[11,"parse","","",264,[[["parsestream",6]],["result",6]]],[11,"parse","","",265,[[["parsestream",6]],["result",6]]],[11,"parse","","",266,[[["parsestream",6]],["result",6]]],[11,"parse","","",267,[[["parsestream",6]],["result",6]]],[11,"parse","","",268,[[["parsestream",6]],["result",6]]],[11,"parse","","",269,[[["parsestream",6]],["result",6]]],[11,"parse","","",270,[[["parsestream",6]],["result",6]]],[11,"parse","","",271,[[["parsestream",6]],["result",6]]],[11,"parse","","",272,[[["parsestream",6]],["result",6]]],[11,"parse","","",273,[[["parsestream",6]],["result",6]]],[11,"parse","","",274,[[["parsestream",6]],["result",6]]],[11,"parse","","",275,[[["parsestream",6]],["result",6]]],[11,"parse","","",276,[[["parsestream",6]],["result",6]]],[11,"parse","","",277,[[["parsestream",6]],["result",6]]],[11,"parse","","",278,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",303,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",153,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],[["result",6],["arm",3]]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],[["result",6],["usetree",4]]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",99,[[["parsestream",6]],["result",6]]],[11,"parse","","",100,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",284,[[["parsestream",6]],["result",6]]],[11,"parse","","",285,[[["parsestream",6]],["result",6]]],[11,"parse","","",286,[[["parsestream",6]],["result",6]]],[11,"parse","","",287,[[["parsestream",6]],["result",6]]],[11,"parse","","",288,[[["parsestream",6]],["result",6]]],[11,"parse","","",289,[[["parsestream",6]],["result",6]]],[11,"parse","","",101,[[["parsestream",6]],["result",6]]],[11,"parse","","",102,[[["parsestream",6]],["result",6]]],[11,"parse","","",106,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",107,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",122,[[["parsestream",6]],["result",6]]],[11,"parse","","",111,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",112,[[["parsestream",6]],["result",6]]],[11,"parse","","",117,[[["parsestream",6]],["result",6]]],[11,"parse","","",115,[[["parsestream",6]],["result",6]]],[11,"parse","","",124,[[["parsestream",6]],["result",6]]],[11,"parse","","",116,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",123,[[["parsestream",6]],["result",6]]],[11,"parse","","",114,[[["parsestream",6]],["result",6]]],[11,"parse","","",113,[[["parsestream",6]],["result",6]]],[11,"parse","","",118,[[["parsestream",6]],["result",6]]],[11,"parse","","",110,[[["parsestream",6]],["result",6]]],[11,"parse","","",109,[[["parsestream",6]],["result",6]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",142,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",143,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",313,[[["parsestream",6]],["result",6]]],[11,"drop","","",301,[[]]],[11,"from","syn","",303,[[["selfvalue",3]],["ident",3]]],[11,"from","","",303,[[["selftype",3]],["ident",3]]],[11,"from","","",303,[[["super",3]],["ident",3]]],[11,"from","","",303,[[["crate",3]],["ident",3]]],[11,"from","","",303,[[["extern",3]],["ident",3]]],[11,"from","","",303,[[["underscore",3]],["ident",3]]],[11,"from","","",150,[[["path",3]],["meta",4]]],[11,"from","","",150,[[["metalist",3]],["meta",4]]],[11,"from","","",150,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",151,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",151,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",152,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",152,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",153,[[["vispublic",3]],["visibility",4]]],[11,"from","","",153,[[["viscrate",3]],["visibility",4]]],[11,"from","","",153,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",156,[[["exprarray",3]],["expr",4]]],[11,"from","","",156,[[["exprassign",3]],["expr",4]]],[11,"from","","",156,[[["exprassignop",3]],["expr",4]]],[11,"from","","",156,[[["exprasync",3]],["expr",4]]],[11,"from","","",156,[[["exprawait",3]],["expr",4]]],[11,"from","","",156,[[["exprbinary",3]],["expr",4]]],[11,"from","","",156,[[["exprblock",3]],["expr",4]]],[11,"from","","",156,[[["exprbox",3]],["expr",4]]],[11,"from","","",156,[[["exprbreak",3]],["expr",4]]],[11,"from","","",156,[[["exprcall",3]],["expr",4]]],[11,"from","","",156,[[["exprcast",3]],["expr",4]]],[11,"from","","",156,[[["exprclosure",3]],["expr",4]]],[11,"from","","",156,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",156,[[["exprfield",3]],["expr",4]]],[11,"from","","",156,[[["exprforloop",3]],["expr",4]]],[11,"from","","",156,[[["exprgroup",3]],["expr",4]]],[11,"from","","",156,[[["exprif",3]],["expr",4]]],[11,"from","","",156,[[["exprindex",3]],["expr",4]]],[11,"from","","",156,[[["exprlet",3]],["expr",4]]],[11,"from","","",156,[[["exprlit",3]],["expr",4]]],[11,"from","","",156,[[["exprloop",3]],["expr",4]]],[11,"from","","",156,[[["exprmacro",3]],["expr",4]]],[11,"from","","",156,[[["exprmatch",3]],["expr",4]]],[11,"from","","",156,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",156,[[["exprparen",3]],["expr",4]]],[11,"from","","",156,[[["exprpath",3]],["expr",4]]],[11,"from","","",156,[[["exprrange",3]],["expr",4]]],[11,"from","","",156,[[["exprreference",3]],["expr",4]]],[11,"from","","",156,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",156,[[["exprreturn",3]],["expr",4]]],[11,"from","","",156,[[["exprstruct",3]],["expr",4]]],[11,"from","","",156,[[["exprtry",3]],["expr",4]]],[11,"from","","",156,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",156,[[["exprtuple",3]],["expr",4]]],[11,"from","","",156,[[["exprtype",3]],["expr",4]]],[11,"from","","",156,[[["exprunary",3]],["expr",4]]],[11,"from","","",156,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",156,[[["exprwhile",3]],["expr",4]]],[11,"from","","",156,[[["expryield",3]],["expr",4]]],[11,"from","","",53,[[],["index",3]]],[11,"from","","",158,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",158,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",158,[[["constparam",3]],["genericparam",4]]],[11,"from","","",62,[[["ident",3]]]],[11,"from","","",160,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",160,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",161,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",161,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",161,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",165,[[["itemconst",3]],["item",4]]],[11,"from","","",165,[[["itemenum",3]],["item",4]]],[11,"from","","",165,[[["itemexterncrate",3]],["item",4]]],[11,"from","","",165,[[["itemfn",3]],["item",4]]],[11,"from","","",165,[[["itemforeignmod",3]],["item",4]]],[11,"from","","",165,[[["itemimpl",3]],["item",4]]],[11,"from","","",165,[[["itemmacro",3]],["item",4]]],[11,"from","","",165,[[["itemmacro2",3]],["item",4]]],[11,"from","","",165,[[["itemmod",3]],["item",4]]],[11,"from","","",165,[[["itemstatic",3]],["item",4]]],[11,"from","","",165,[[["itemstruct",3]],["item",4]]],[11,"from","","",165,[[["itemtrait",3]],["item",4]]],[11,"from","","",165,[[["itemtraitalias",3]],["item",4]]],[11,"from","","",165,[[["itemtype",3]],["item",4]]],[11,"from","","",165,[[["itemunion",3]],["item",4]]],[11,"from","","",165,[[["itemuse",3]],["item",4]]],[11,"from","","",165,[[["deriveinput",3]],["item",4]]],[11,"from","","",106,[[["itemstruct",3]],["deriveinput",3]]],[11,"from","","",106,[[["itemenum",3]],["deriveinput",3]]],[11,"from","","",106,[[["itemunion",3]],["deriveinput",3]]],[11,"from","","",167,[[["usepath",3]],["usetree",4]]],[11,"from","","",167,[[["usename",3]],["usetree",4]]],[11,"from","","",167,[[["userename",3]],["usetree",4]]],[11,"from","","",167,[[["useglob",3]],["usetree",4]]],[11,"from","","",167,[[["usegroup",3]],["usetree",4]]],[11,"from","","",163,[[["foreignitemfn",3]],["foreignitem",4]]],[11,"from","","",163,[[["foreignitemstatic",3]],["foreignitem",4]]],[11,"from","","",163,[[["foreignitemtype",3]],["foreignitem",4]]],[11,"from","","",163,[[["foreignitemmacro",3]],["foreignitem",4]]],[11,"from","","",166,[[["traititemconst",3]],["traititem",4]]],[11,"from","","",166,[[["traititemmethod",3]],["traititem",4]]],[11,"from","","",166,[[["traititemtype",3]],["traititem",4]]],[11,"from","","",166,[[["traititemmacro",3]],["traititem",4]]],[11,"from","","",164,[[["implitemconst",3]],["implitem",4]]],[11,"from","","",164,[[["implitemmethod",3]],["implitem",4]]],[11,"from","","",164,[[["implitemtype",3]],["implitem",4]]],[11,"from","","",164,[[["implitemmacro",3]],["implitem",4]]],[11,"from","","",162,[[["receiver",3]],["fnarg",4]]],[11,"from","","",162,[[["pattype",3]],["fnarg",4]]],[11,"from","","",168,[[["litstr",3]],["lit",4]]],[11,"from","","",168,[[["litbytestr",3]],["lit",4]]],[11,"from","","",168,[[["litbyte",3]],["lit",4]]],[11,"from","","",168,[[["litchar",3]],["lit",4]]],[11,"from","","",168,[[["litint",3]],["lit",4]]],[11,"from","","",168,[[["litfloat",3]],["lit",4]]],[11,"from","","",168,[[["litbool",3]],["lit",4]]],[11,"from","","",288,[[["literal",3]]]],[11,"from","","",289,[[["literal",3]]]],[11,"from","","",171,[[["datastruct",3]],["data",4]]],[11,"from","","",171,[[["dataenum",3]],["data",4]]],[11,"from","","",171,[[["dataunion",3]],["data",4]]],[11,"from","","",176,[[["typearray",3]],["type",4]]],[11,"from","","",176,[[["typebarefn",3]],["type",4]]],[11,"from","","",176,[[["typegroup",3]],["type",4]]],[11,"from","","",176,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",176,[[["typeinfer",3]],["type",4]]],[11,"from","","",176,[[["typemacro",3]],["type",4]]],[11,"from","","",176,[[["typenever",3]],["type",4]]],[11,"from","","",176,[[["typeparen",3]],["type",4]]],[11,"from","","",176,[[["typepath",3]],["type",4]]],[11,"from","","",176,[[["typeptr",3]],["type",4]]],[11,"from","","",176,[[["typereference",3]],["type",4]]],[11,"from","","",176,[[["typeslice",3]],["type",4]]],[11,"from","","",176,[[["typetraitobject",3]],["type",4]]],[11,"from","","",176,[[["typetuple",3]],["type",4]]],[11,"from","","",177,[[["patbox",3]],["pat",4]]],[11,"from","","",177,[[["patident",3]],["pat",4]]],[11,"from","","",177,[[["patlit",3]],["pat",4]]],[11,"from","","",177,[[["patmacro",3]],["pat",4]]],[11,"from","","",177,[[["pator",3]],["pat",4]]],[11,"from","","",177,[[["patpath",3]],["pat",4]]],[11,"from","","",177,[[["patrange",3]],["pat",4]]],[11,"from","","",177,[[["patreference",3]],["pat",4]]],[11,"from","","",177,[[["patrest",3]],["pat",4]]],[11,"from","","",177,[[["patslice",3]],["pat",4]]],[11,"from","","",177,[[["patstruct",3]],["pat",4]]],[11,"from","","",177,[[["pattuple",3]],["pat",4]]],[11,"from","","",177,[[["pattuplestruct",3]],["pat",4]]],[11,"from","","",177,[[["pattype",3]],["pat",4]]],[11,"from","","",177,[[["patwild",3]],["pat",4]]],[11,"from","","",146,[[]]],[11,"from","","",147,[[]]],[11,"from","","",302,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",306,[[],["option",4]]],[11,"next_back","","",307,[[],["option",4]]],[11,"next_back","","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"next_back","","",311,[[],["option",4]]],[11,"len","","",306,[[]]],[11,"len","","",307,[[]]],[11,"len","","",308,[[]]],[11,"len","","",309,[[]]],[11,"len","","",310,[[]]],[11,"len","","",311,[[]]],[11,"extend","","",294,[[["intoiterator",8]]]],[11,"extend","","",294,[[["intoiterator",8]]]],[11,"extend","syn","",302,[[["intoiterator",8]]]],[11,"into_iter","","",152,[[]]],[11,"into_iter","syn::punctuated","",294,[[]]],[11,"into_iter","syn","",302,[[]]],[11,"next","syn::punctuated","",306,[[],["option",4]]],[11,"size_hint","","",306,[[]]],[11,"next","","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"clone","syn::token","",180,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",191,[[]]],[11,"clone","","",192,[[]]],[11,"clone","","",193,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",198,[[]]],[11,"clone","","",199,[[]]],[11,"clone","","",200,[[]]],[11,"clone","","",201,[[]]],[11,"clone","","",202,[[]]],[11,"clone","","",203,[[]]],[11,"clone","","",204,[[]]],[11,"clone","","",205,[[]]],[11,"clone","","",206,[[]]],[11,"clone","","",207,[[]]],[11,"clone","","",208,[[]]],[11,"clone","","",209,[[]]],[11,"clone","","",210,[[]]],[11,"clone","","",211,[[]]],[11,"clone","","",212,[[]]],[11,"clone","","",213,[[]]],[11,"clone","","",214,[[]]],[11,"clone","","",215,[[]]],[11,"clone","","",216,[[]]],[11,"clone","","",217,[[]]],[11,"clone","","",218,[[]]],[11,"clone","","",219,[[]]],[11,"clone","","",220,[[]]],[11,"clone","","",221,[[]]],[11,"clone","","",222,[[]]],[11,"clone","","",223,[[]]],[11,"clone","","",224,[[]]],[11,"clone","","",225,[[]]],[11,"clone","","",226,[[]]],[11,"clone","","",227,[[]]],[11,"clone","","",228,[[]]],[11,"clone","","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",237,[[]]],[11,"clone","","",238,[[]]],[11,"clone","","",239,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",243,[[]]],[11,"clone","","",244,[[]]],[11,"clone","","",245,[[]]],[11,"clone","","",246,[[]]],[11,"clone","","",247,[[]]],[11,"clone","","",248,[[]]],[11,"clone","","",249,[[]]],[11,"clone","","",250,[[]]],[11,"clone","","",251,[[]]],[11,"clone","","",252,[[]]],[11,"clone","","",253,[[]]],[11,"clone","","",254,[[]]],[11,"clone","","",255,[[]]],[11,"clone","","",256,[[]]],[11,"clone","","",257,[[]]],[11,"clone","","",258,[[]]],[11,"clone","","",259,[[]]],[11,"clone","","",260,[[]]],[11,"clone","","",261,[[]]],[11,"clone","","",262,[[]]],[11,"clone","","",263,[[]]],[11,"clone","","",264,[[]]],[11,"clone","","",265,[[]]],[11,"clone","","",266,[[]]],[11,"clone","","",267,[[]]],[11,"clone","","",268,[[]]],[11,"clone","","",269,[[]]],[11,"clone","","",270,[[]]],[11,"clone","","",271,[[]]],[11,"clone","","",272,[[]]],[11,"clone","","",273,[[]]],[11,"clone","","",274,[[]]],[11,"clone","","",275,[[]]],[11,"clone","","",276,[[]]],[11,"clone","","",277,[[]]],[11,"clone","","",278,[[]]],[11,"clone","","",279,[[]]],[11,"clone","","",280,[[]]],[11,"clone","","",281,[[]]],[11,"clone","","",282,[[]]],[11,"clone","syn","",304,[[]]],[11,"clone","","",283,[[]]],[11,"clone","","",305,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",284,[[]]],[11,"clone","","",285,[[]]],[11,"clone","","",286,[[]]],[11,"clone","","",287,[[]]],[11,"clone","","",288,[[]]],[11,"clone","","",289,[[]]],[11,"clone","syn::buffer","",291,[[]]],[11,"clone","syn::punctuated","",294,[[]]],[11,"clone","","",306,[[]]],[11,"clone","","",308,[[]]],[11,"clone","","",309,[[]]],[11,"clone","","",310,[[]]],[11,"clone","","",293,[[]]],[11,"clone","syn","",109,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",0,[[]]],[11,"clone","","",110,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",107,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",103,[[]]],[11,"clone","","",104,[[]]],[11,"clone","","",105,[[]]],[11,"clone","","",106,[[]]],[11,"clone","","",156,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",108,[[]]],[11,"clone","","",102,[[]]],[11,"clone","","",170,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",111,[[]]],[11,"clone","","",112,[[]]],[11,"clone","","",113,[[]]],[11,"clone","","",114,[[]]],[11,"clone","","",115,[[]]],[11,"clone","","",116,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",160,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",161,[[]]],[11,"clone","syn::parse","",300,[[]]],[11,"clone","syn","",302,[[]]],[11,"default","syn::token","",180,[[]]],[11,"default","","",181,[[]]],[11,"default","","",182,[[]]],[11,"default","","",183,[[]]],[11,"default","","",184,[[]]],[11,"default","","",185,[[]]],[11,"default","","",186,[[]]],[11,"default","","",187,[[]]],[11,"default","","",188,[[]]],[11,"default","","",189,[[]]],[11,"default","","",190,[[]]],[11,"default","","",191,[[]]],[11,"default","","",192,[[]]],[11,"default","","",193,[[]]],[11,"default","","",194,[[]]],[11,"default","","",195,[[]]],[11,"default","","",196,[[]]],[11,"default","","",197,[[]]],[11,"default","","",198,[[]]],[11,"default","","",199,[[]]],[11,"default","","",200,[[]]],[11,"default","","",201,[[]]],[11,"default","","",202,[[]]],[11,"default","","",203,[[]]],[11,"default","","",204,[[]]],[11,"default","","",205,[[]]],[11,"default","","",206,[[]]],[11,"default","","",207,[[]]],[11,"default","","",208,[[]]],[11,"default","","",209,[[]]],[11,"default","","",210,[[]]],[11,"default","","",211,[[]]],[11,"default","","",212,[[]]],[11,"default","","",213,[[]]],[11,"default","","",214,[[]]],[11,"default","","",215,[[]]],[11,"default","","",216,[[]]],[11,"default","","",217,[[]]],[11,"default","","",218,[[]]],[11,"default","","",219,[[]]],[11,"default","","",220,[[]]],[11,"default","","",221,[[]]],[11,"default","","",222,[[]]],[11,"default","","",223,[[]]],[11,"default","","",224,[[]]],[11,"default","","",225,[[]]],[11,"default","","",226,[[]]],[11,"default","","",227,[[]]],[11,"default","","",228,[[]]],[11,"default","","",229,[[]]],[11,"default","","",230,[[]]],[11,"default","","",231,[[]]],[11,"default","","",232,[[]]],[11,"default","","",233,[[]]],[11,"default","","",234,[[]]],[11,"default","","",235,[[]]],[11,"default","","",236,[[]]],[11,"default","","",237,[[]]],[11,"default","","",238,[[]]],[11,"default","","",239,[[]]],[11,"default","","",240,[[]]],[11,"default","","",241,[[]]],[11,"default","","",242,[[]]],[11,"default","","",243,[[]]],[11,"default","","",244,[[]]],[11,"default","","",245,[[]]],[11,"default","","",246,[[]]],[11,"default","","",247,[[]]],[11,"default","","",248,[[]]],[11,"default","","",249,[[]]],[11,"default","","",250,[[]]],[11,"default","","",251,[[]]],[11,"default","","",252,[[]]],[11,"default","","",253,[[]]],[11,"default","","",254,[[]]],[11,"default","","",255,[[]]],[11,"default","","",256,[[]]],[11,"default","","",257,[[]]],[11,"default","","",258,[[]]],[11,"default","","",259,[[]]],[11,"default","","",260,[[]]],[11,"default","","",261,[[]]],[11,"default","","",262,[[]]],[11,"default","","",263,[[]]],[11,"default","","",264,[[]]],[11,"default","","",265,[[]]],[11,"default","","",266,[[]]],[11,"default","","",267,[[]]],[11,"default","","",268,[[]]],[11,"default","","",269,[[]]],[11,"default","","",270,[[]]],[11,"default","","",271,[[]]],[11,"default","","",272,[[]]],[11,"default","","",273,[[]]],[11,"default","","",274,[[]]],[11,"default","","",275,[[]]],[11,"default","","",276,[[]]],[11,"default","","",277,[[]]],[11,"default","","",278,[[]]],[11,"default","","",279,[[]]],[11,"default","","",280,[[]]],[11,"default","","",281,[[]]],[11,"default","","",282,[[]]],[11,"default","syn","",56,[[]]],[11,"default","","",54,[[]]],[11,"default","","",179,[[]]],[11,"default","syn::punctuated","",294,[[]]],[11,"cmp","syn","",100,[[["lifetime",3]],["ordering",4]]],[11,"eq","","",157,[[]]],[11,"eq","","",53,[[]]],[11,"eq","","",100,[[["lifetime",3]]]],[11,"eq","syn::buffer","",291,[[]]],[11,"partial_cmp","syn","",100,[[["lifetime",3]],[["ordering",4],["option",4]]]],[11,"deref","syn::token","",180,[[]]],[11,"deref","","",233,[[]]],[11,"deref","","",235,[[]]],[11,"deref","","",238,[[]]],[11,"deref","","",239,[[]]],[11,"deref","","",240,[[]]],[11,"deref","","",242,[[]]],[11,"deref","","",244,[[]]],[11,"deref","","",245,[[]]],[11,"deref","","",247,[[]]],[11,"deref","","",248,[[]]],[11,"deref","","",252,[[]]],[11,"deref","","",255,[[]]],[11,"deref","","",257,[[]]],[11,"deref","","",260,[[]]],[11,"deref","","",263,[[]]],[11,"deref","","",264,[[]]],[11,"deref","","",267,[[]]],[11,"deref","","",270,[[]]],[11,"deref","","",275,[[]]],[11,"deref","","",276,[[]]],[11,"deref","","",278,[[]]],[11,"deref","syn::parse","",300,[[]]],[11,"deref_mut","syn::token","",180,[[]]],[11,"deref_mut","","",233,[[]]],[11,"deref_mut","","",235,[[]]],[11,"deref_mut","","",238,[[]]],[11,"deref_mut","","",239,[[]]],[11,"deref_mut","","",240,[[]]],[11,"deref_mut","","",242,[[]]],[11,"deref_mut","","",244,[[]]],[11,"deref_mut","","",245,[[]]],[11,"deref_mut","","",247,[[]]],[11,"deref_mut","","",248,[[]]],[11,"deref_mut","","",252,[[]]],[11,"deref_mut","","",255,[[]]],[11,"deref_mut","","",257,[[]]],[11,"deref_mut","","",260,[[]]],[11,"deref_mut","","",263,[[]]],[11,"deref_mut","","",264,[[]]],[11,"deref_mut","","",267,[[]]],[11,"deref_mut","","",270,[[]]],[11,"deref_mut","","",275,[[]]],[11,"deref_mut","","",276,[[]]],[11,"deref_mut","","",278,[[]]],[11,"fmt","syn::parse","",301,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",302,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",288,[[["formatter",3]],["result",6]]],[11,"fmt","","",289,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",301,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",302,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",294,[[]]],[11,"index_mut","","",294,[[]]],[11,"hash","syn","",157,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",100,[[]]],[11,"from_iter","syn::punctuated","",294,[[["intoiterator",8]]]],[11,"from_iter","","",294,[[["intoiterator",8]]]],[11,"description","syn","",302,[[]]],[11,"to_tokens","syn::token","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",197,[[["tokenstream",3]]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",238,[[["tokenstream",3]]]],[11,"to_tokens","","",239,[[["tokenstream",3]]]],[11,"to_tokens","","",240,[[["tokenstream",3]]]],[11,"to_tokens","","",241,[[["tokenstream",3]]]],[11,"to_tokens","","",242,[[["tokenstream",3]]]],[11,"to_tokens","","",243,[[["tokenstream",3]]]],[11,"to_tokens","","",244,[[["tokenstream",3]]]],[11,"to_tokens","","",245,[[["tokenstream",3]]]],[11,"to_tokens","","",246,[[["tokenstream",3]]]],[11,"to_tokens","","",247,[[["tokenstream",3]]]],[11,"to_tokens","","",248,[[["tokenstream",3]]]],[11,"to_tokens","","",249,[[["tokenstream",3]]]],[11,"to_tokens","","",250,[[["tokenstream",3]]]],[11,"to_tokens","","",251,[[["tokenstream",3]]]],[11,"to_tokens","","",252,[[["tokenstream",3]]]],[11,"to_tokens","","",253,[[["tokenstream",3]]]],[11,"to_tokens","","",254,[[["tokenstream",3]]]],[11,"to_tokens","","",255,[[["tokenstream",3]]]],[11,"to_tokens","","",256,[[["tokenstream",3]]]],[11,"to_tokens","","",257,[[["tokenstream",3]]]],[11,"to_tokens","","",258,[[["tokenstream",3]]]],[11,"to_tokens","","",259,[[["tokenstream",3]]]],[11,"to_tokens","","",260,[[["tokenstream",3]]]],[11,"to_tokens","","",261,[[["tokenstream",3]]]],[11,"to_tokens","","",262,[[["tokenstream",3]]]],[11,"to_tokens","","",263,[[["tokenstream",3]]]],[11,"to_tokens","","",264,[[["tokenstream",3]]]],[11,"to_tokens","","",265,[[["tokenstream",3]]]],[11,"to_tokens","","",266,[[["tokenstream",3]]]],[11,"to_tokens","","",267,[[["tokenstream",3]]]],[11,"to_tokens","","",268,[[["tokenstream",3]]]],[11,"to_tokens","","",269,[[["tokenstream",3]]]],[11,"to_tokens","","",270,[[["tokenstream",3]]]],[11,"to_tokens","","",271,[[["tokenstream",3]]]],[11,"to_tokens","","",272,[[["tokenstream",3]]]],[11,"to_tokens","","",273,[[["tokenstream",3]]]],[11,"to_tokens","","",274,[[["tokenstream",3]]]],[11,"to_tokens","","",275,[[["tokenstream",3]]]],[11,"to_tokens","","",276,[[["tokenstream",3]]]],[11,"to_tokens","","",277,[[["tokenstream",3]]]],[11,"to_tokens","","",278,[[["tokenstream",3]]]],[11,"to_tokens","syn","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",304,[[["tokenstream",3]]]],[11,"to_tokens","","",283,[[["tokenstream",3]]]],[11,"to_tokens","","",305,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",99,[[["tokenstream",3]]]],[11,"to_tokens","","",100,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",284,[[["tokenstream",3]]]],[11,"to_tokens","","",285,[[["tokenstream",3]]]],[11,"to_tokens","","",286,[[["tokenstream",3]]]],[11,"to_tokens","","",287,[[["tokenstream",3]]]],[11,"to_tokens","","",288,[[["tokenstream",3]]]],[11,"to_tokens","","",289,[[["tokenstream",3]]]],[11,"to_tokens","","",101,[[["tokenstream",3]]]],[11,"to_tokens","","",102,[[["tokenstream",3]]]],[11,"to_tokens","","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",108,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",111,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",112,[[["tokenstream",3]]]],[11,"to_tokens","","",117,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",114,[[["tokenstream",3]]]],[11,"to_tokens","","",113,[[["tokenstream",3]]]],[11,"to_tokens","","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",115,[[["tokenstream",3]]]],[11,"to_tokens","","",116,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",110,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",109,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",137,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",136,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",294,[[["tokenstream",3]]]],[11,"to_tokens","","",293,[[["tokenstream",3]]]],[11,"fmt","syn","",157,[[["formatter",3]],["result",6]]],[11,"span","","",157,[[],[["option",4],["span",3]]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"span","","",53,[[],[["option",4],["span",3]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",303,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",303,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",303,[[["span",3]]]],[11,"visit_abi","syn::visit","",296,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",296,[[["arm",3]]]],[11,"visit_attr_style","","",296,[[["attrstyle",4]]]],[11,"visit_attribute","","",296,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",296,[[["barefnarg",3]]]],[11,"visit_bin_op","","",296,[[["binop",4]]]],[11,"visit_binding","","",296,[[["binding",3]]]],[11,"visit_block","","",296,[[["block",3]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",296,[[["constparam",3]]]],[11,"visit_constraint","","",296,[[["constraint",3]]]],[11,"visit_data","","",296,[[["data",4]]]],[11,"visit_data_enum","","",296,[[["dataenum",3]]]],[11,"visit_data_struct","","",296,[[["datastruct",3]]]],[11,"visit_data_union","","",296,[[["dataunion",3]]]],[11,"visit_derive_input","","",296,[[["deriveinput",3]]]],[11,"visit_expr","","",296,[[["expr",4]]]],[11,"visit_expr_array","","",296,[[["exprarray",3]]]],[11,"visit_expr_assign","","",296,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",296,[[["exprassignop",3]]]],[11,"visit_expr_async","","",296,[[["exprasync",3]]]],[11,"visit_expr_await","","",296,[[["exprawait",3]]]],[11,"visit_expr_binary","","",296,[[["exprbinary",3]]]],[11,"visit_expr_block","","",296,[[["exprblock",3]]]],[11,"visit_expr_box","","",296,[[["exprbox",3]]]],[11,"visit_expr_break","","",296,[[["exprbreak",3]]]],[11,"visit_expr_call","","",296,[[["exprcall",3]]]],[11,"visit_expr_cast","","",296,[[["exprcast",3]]]],[11,"visit_expr_closure","","",296,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",296,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",296,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",296,[[["exprforloop",3]]]],[11,"visit_expr_group","","",296,[[["exprgroup",3]]]],[11,"visit_expr_if","","",296,[[["exprif",3]]]],[11,"visit_expr_index","","",296,[[["exprindex",3]]]],[11,"visit_expr_let","","",296,[[["exprlet",3]]]],[11,"visit_expr_lit","","",296,[[["exprlit",3]]]],[11,"visit_expr_loop","","",296,[[["exprloop",3]]]],[11,"visit_expr_macro","","",296,[[["exprmacro",3]]]],[11,"visit_expr_match","","",296,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",296,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",296,[[["exprparen",3]]]],[11,"visit_expr_path","","",296,[[["exprpath",3]]]],[11,"visit_expr_range","","",296,[[["exprrange",3]]]],[11,"visit_expr_reference","","",296,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",296,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",296,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",296,[[["exprstruct",3]]]],[11,"visit_expr_try","","",296,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",296,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",296,[[["exprtuple",3]]]],[11,"visit_expr_type","","",296,[[["exprtype",3]]]],[11,"visit_expr_unary","","",296,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",296,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",296,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",296,[[["expryield",3]]]],[11,"visit_field","","",296,[[["field",3]]]],[11,"visit_field_pat","","",296,[[["fieldpat",3]]]],[11,"visit_field_value","","",296,[[["fieldvalue",3]]]],[11,"visit_fields","","",296,[[["fields",4]]]],[11,"visit_fields_named","","",296,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",296,[[["fieldsunnamed",3]]]],[11,"visit_file","","",296,[[["file",3]]]],[11,"visit_fn_arg","","",296,[[["fnarg",4]]]],[11,"visit_foreign_item","","",296,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",296,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",296,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",296,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",296,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",296,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",296,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",296,[[["genericparam",4]]]],[11,"visit_generics","","",296,[[["generics",3]]]],[11,"visit_ident","","",296,[[["ident",3]]]],[11,"visit_impl_item","","",296,[[["implitem",4]]]],[11,"visit_impl_item_const","","",296,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",296,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",296,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",296,[[["implitemtype",3]]]],[11,"visit_index","","",296,[[["index",3]]]],[11,"visit_item","","",296,[[["item",4]]]],[11,"visit_item_const","","",296,[[["itemconst",3]]]],[11,"visit_item_enum","","",296,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",296,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",296,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",296,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",296,[[["itemimpl",3]]]],[11,"visit_item_macro","","",296,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",296,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",296,[[["itemmod",3]]]],[11,"visit_item_static","","",296,[[["itemstatic",3]]]],[11,"visit_item_struct","","",296,[[["itemstruct",3]]]],[11,"visit_item_trait","","",296,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",296,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",296,[[["itemtype",3]]]],[11,"visit_item_union","","",296,[[["itemunion",3]]]],[11,"visit_item_use","","",296,[[["itemuse",3]]]],[11,"visit_label","","",296,[[["label",3]]]],[11,"visit_lifetime","","",296,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",296,[[["lifetimedef",3]]]],[11,"visit_lit","","",296,[[["lit",4]]]],[11,"visit_lit_bool","","",296,[[["litbool",3]]]],[11,"visit_lit_byte","","",296,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",296,[[["litbytestr",3]]]],[11,"visit_lit_char","","",296,[[["litchar",3]]]],[11,"visit_lit_float","","",296,[[["litfloat",3]]]],[11,"visit_lit_int","","",296,[[["litint",3]]]],[11,"visit_lit_str","","",296,[[["litstr",3]]]],[11,"visit_local","","",296,[[["local",3]]]],[11,"visit_macro","","",296,[[["macro",3]]]],[11,"visit_macro_delimiter","","",296,[[["macrodelimiter",4]]]],[11,"visit_member","","",296,[[["member",4]]]],[11,"visit_meta","","",296,[[["meta",4]]]],[11,"visit_meta_list","","",296,[[["metalist",3]]]],[11,"visit_meta_name_value","","",296,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",296,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",296,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",296,[[["pat",4]]]],[11,"visit_pat_box","","",296,[[["patbox",3]]]],[11,"visit_pat_ident","","",296,[[["patident",3]]]],[11,"visit_pat_lit","","",296,[[["patlit",3]]]],[11,"visit_pat_macro","","",296,[[["patmacro",3]]]],[11,"visit_pat_or","","",296,[[["pator",3]]]],[11,"visit_pat_path","","",296,[[["patpath",3]]]],[11,"visit_pat_range","","",296,[[["patrange",3]]]],[11,"visit_pat_reference","","",296,[[["patreference",3]]]],[11,"visit_pat_rest","","",296,[[["patrest",3]]]],[11,"visit_pat_slice","","",296,[[["patslice",3]]]],[11,"visit_pat_struct","","",296,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",296,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",296,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",296,[[["pattype",3]]]],[11,"visit_pat_wild","","",296,[[["patwild",3]]]],[11,"visit_path","","",296,[[["path",3]]]],[11,"visit_path_arguments","","",296,[[["patharguments",4]]]],[11,"visit_path_segment","","",296,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",296,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",296,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",296,[[["predicatetype",3]]]],[11,"visit_qself","","",296,[[["qself",3]]]],[11,"visit_range_limits","","",296,[[["rangelimits",4]]]],[11,"visit_receiver","","",296,[[["receiver",3]]]],[11,"visit_return_type","","",296,[[["returntype",4]]]],[11,"visit_signature","","",296,[[["signature",3]]]],[11,"visit_span","","",296,[[["span",3]]]],[11,"visit_stmt","","",296,[[["stmt",4]]]],[11,"visit_trait_bound","","",296,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",296,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",296,[[["traititem",4]]]],[11,"visit_trait_item_const","","",296,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",296,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",296,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",296,[[["traititemtype",3]]]],[11,"visit_type","","",296,[[["type",4]]]],[11,"visit_type_array","","",296,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",296,[[["typebarefn",3]]]],[11,"visit_type_group","","",296,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",296,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",296,[[["typeinfer",3]]]],[11,"visit_type_macro","","",296,[[["typemacro",3]]]],[11,"visit_type_never","","",296,[[["typenever",3]]]],[11,"visit_type_param","","",296,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",296,[[["typeparambound",4]]]],[11,"visit_type_paren","","",296,[[["typeparen",3]]]],[11,"visit_type_path","","",296,[[["typepath",3]]]],[11,"visit_type_ptr","","",296,[[["typeptr",3]]]],[11,"visit_type_reference","","",296,[[["typereference",3]]]],[11,"visit_type_slice","","",296,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",296,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",296,[[["typetuple",3]]]],[11,"visit_un_op","","",296,[[["unop",4]]]],[11,"visit_use_glob","","",296,[[["useglob",3]]]],[11,"visit_use_group","","",296,[[["usegroup",3]]]],[11,"visit_use_name","","",296,[[["usename",3]]]],[11,"visit_use_path","","",296,[[["usepath",3]]]],[11,"visit_use_rename","","",296,[[["userename",3]]]],[11,"visit_use_tree","","",296,[[["usetree",4]]]],[11,"visit_variadic","","",296,[[["variadic",3]]]],[11,"visit_variant","","",296,[[["variant",3]]]],[11,"visit_vis_crate","","",296,[[["viscrate",3]]]],[11,"visit_vis_public","","",296,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",296,[[["visrestricted",3]]]],[11,"visit_visibility","","",296,[[["visibility",4]]]],[11,"visit_where_clause","","",296,[[["whereclause",3]]]],[11,"visit_where_predicate","","",296,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",312,[[["peek",8]]]],[11,"error","","Triggers an error at the current position of the parse…",312,[[],["error",3]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"Arm"],[3,"FieldValue"],[3,"Label"],[3,"MethodTurbofish"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Block"],[3,"Local"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"GenericMethodArgument"],[4,"RangeLimits"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"Stmt"],[4,"ReturnType"],[4,"Type"],[4,"Pat"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"textwrap":{"doc":"`textwrap` provides functions for word wrapping and…","i":[[3,"HyphenSplitter","textwrap","Simple and default way to split words: splitting on…",null,null],[3,"NoHyphenation","","Use this as a `Wrapper.splitter` to avoid any kind of…",null,null],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text.…",null,null],[12,"width","","The width in columns at which the text will be wrapped.",0,null],[12,"initial_indent","","Indentation used for the first line of output.",0,null],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",0,null],[12,"break_words","","Allow long words to be broken if they cannot fit on a…",0,null],[12,"splitter","","The method for splitting words. If the `hyphenation`…",0,null],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns…",null,null],[3,"WrapIter","","An iterator over the lines of the input string which…",null,null],[5,"dedent","","Removes common leading whitespace from each line.",null,[[],["string",3]]],[5,"indent","","Add prefix to each non-empty line.",null,[[],["string",3]]],[5,"fill","","Fill a line of text at `width` characters. Strings are…",null,[[],["string",3]]],[5,"wrap","","Wrap a line of text at `width` characters. Strings are…",null,[[],[["vec",3],["cow",4]]]],[5,"wrap_iter","","Lazily wrap a line of text at `width` characters. Strings…",null,[[],[["intowrapiter",3],["hyphensplitter",3]]]],[8,"WordSplitter","","An interface for splitting words.",null,null],[10,"split","","Return all possible splits of word. Each split is a triple…",1,[[],["vec",3]]],[11,"new","","Create a new Wrapper for wrapping at the specified width.…",0,[[],[["wrapper",3],["hyphensplitter",3]]]],[11,"with_splitter","","Use the given `WordSplitter` to create a new Wrapper for…",0,[[],["wrapper",3]]],[11,"initial_indent","","Change `self.initial_indent`. The initial indentation is…",0,[[],["wrapper",3]]],[11,"subsequent_indent","","Change `self.subsequent_indent`. The subsequent…",0,[[],["wrapper",3]]],[11,"break_words","","Change `self.break_words`. This controls if words longer…",0,[[],["wrapper",3]]],[11,"fill","","Fill a line of text at `self.width` characters. Strings…",0,[[],["string",3]]],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings…",0,[[],[["cow",4],["vec",3]]]],[11,"wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[],["wrapiter",3]]],[11,"into_wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[],["intowrapiter",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"split","","",3,[[],["vec",3]]],[11,"split","","",2,[[],["vec",3]]],[11,"next","","",4,[[],[["cow",4],["option",4]]]],[11,"next","","",5,[[],[["cow",4],["option",4]]]],[11,"clone","","",3,[[],["nohyphenation",3]]],[11,"clone","","",2,[[],["hyphensplitter",3]]],[11,"clone","","",0,[[],["wrapper",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]]],"p":[[3,"Wrapper"],[8,"WordSplitter"],[3,"HyphenSplitter"],[3,"NoHyphenation"],[3,"IntoWrapIter"],[3,"WrapIter"]]},\
"tinytemplate":{"doc":"TinyTemplateTinyTemplate is a minimal templating library…","i":[[3,"TinyTemplate","tinytemplate","The TinyTemplate struct is the entry point for the…",null,null],[5,"escape","","Appends `value` to `output`, performing HTML-escaping in…",null,[[["string",3]]]],[5,"format","","The format function is used as the default value formatter…",null,[[["string",3],["value",4]],["result",6]]],[5,"format_unescaped","","Identical to `format` except that this does not perform…",null,[[["string",3],["value",4]],["result",6]]],[0,"error","","Module containing the error type returned by TinyTemplate…",null,null],[4,"Error","tinytemplate::error","Enum representing the potential errors that TinyTemplate…",null,null],[13,"ParseError","","",0,null],[12,"msg","tinytemplate::error::Error","",1,null],[12,"line","","",1,null],[12,"column","","",1,null],[13,"RenderError","tinytemplate::error","",0,null],[12,"msg","tinytemplate::error::Error","",2,null],[12,"line","","",2,null],[12,"column","","",2,null],[13,"SerdeError","tinytemplate::error","",0,null],[12,"err","tinytemplate::error::Error","",3,null],[13,"GenericError","tinytemplate::error","",0,null],[12,"msg","tinytemplate::error::Error","",4,null],[13,"StdFormatError","tinytemplate::error","",0,null],[12,"err","tinytemplate::error::Error","",5,null],[13,"CalledTemplateError","tinytemplate::error","",0,null],[12,"name","tinytemplate::error::Error","",6,null],[12,"err","","",6,null],[12,"line","","",6,null],[12,"column","","",6,null],[13,"CalledFormatterError","tinytemplate::error","",0,null],[12,"name","tinytemplate::error::Error","",7,null],[12,"err","","",7,null],[12,"line","","",7,null],[12,"column","","",7,null],[13,"__NonExhaustive","tinytemplate::error","",0,null],[6,"Result","","",null,null],[0,"syntax","tinytemplate","Documentation of TinyTemplate\'s template syntax.",null,null],[6,"ValueFormatter","","Type alias for closures which can be used as value…",null,null],[11,"new","","Create a new TinyTemplate registry. The returned registry…",8,[[],["tinytemplate",3]]],[11,"add_template","","Parse and compile the given template, then register it…",8,[[],["result",6]]],[11,"set_default_formatter","","Changes the default formatter from `format` to…",8,[[]]],[11,"add_formatter","","Register the given formatter function under the given name.",8,[[]]],[11,"render","","Render the template with the given name using the given…",8,[[],[["result",6],["string",3]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tinytemplate::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",0,[[["serdejsonerror",3]],["error",4]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"default","tinytemplate","",8,[[],["tinytemplate",3]]],[11,"fmt","tinytemplate::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"description","","",0,[[]]]],"p":[[4,"Error"],[13,"ParseError"],[13,"RenderError"],[13,"SerdeError"],[13,"GenericError"],[13,"StdFormatError"],[13,"CalledTemplateError"],[13,"CalledFormatterError"],[3,"TinyTemplate"]]},\
"unicode_width":{"doc":"Determine displayed width of `char` and `str` types…","i":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width…",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode…",null,null],[10,"width","","Returns the character\'s displayed width in columns, or…",0,[[],["option",4]]],[10,"width_cjk","","Returns the character\'s displayed width in columns, or…",0,[[],["option",4]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",null,null],[10,"width","","Returns the string\'s displayed width in columns.",1,[[]]],[10,"width_cjk","","Returns the string\'s displayed width in columns.",1,[[]]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]},\
"unicode_xid":{"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[]]]],"p":[[8,"UnicodeXID"]]},\
"walkdir":{"doc":"Crate `walkdir` provides an efficient and cross platform…","i":[[3,"DirEntry","walkdir","A directory entry.",null,null],[3,"Error","","An error produced by recursively walking a directory.",null,null],[3,"WalkDir","","A builder to create an iterator for recursively walking a…",null,null],[3,"IntoIter","","An iterator for recursively descending into a directory.",null,null],[3,"FilterEntry","","A recursive directory iterator that skips entries.",null,null],[11,"path","","The full path that this entry represents.",0,[[],["path",3]]],[11,"into_path","","The full path that this entry represents.",0,[[],["pathbuf",3]]],[11,"path_is_symlink","","Returns `true` if and only if this entry was created from…",0,[[]]],[11,"metadata","","Return the metadata for the file that this entry points to.",0,[[],[["result",6],["metadata",3]]]],[11,"file_type","","Return the file type for the file that this entry points to.",0,[[],["filetype",3]]],[11,"file_name","","Return the file name of this entry.",0,[[],["osstr",3]]],[11,"depth","","Returns the depth at which this entry was created relative…",0,[[]]],[11,"path","","Returns the path associated with this error if one exists.",1,[[],[["path",3],["option",4]]]],[11,"loop_ancestor","","Returns the path at which a cycle was detected.",1,[[],[["path",3],["option",4]]]],[11,"depth","","Returns the depth at which this error occurred relative to…",1,[[]]],[11,"io_error","","Inspect the original `io::Error` if there is one.",1,[[],[["option",4],["error",3]]]],[11,"into_io_error","","Similar to `io_error` except consumes self to convert to…",1,[[],[["error",3],["option",4]]]],[6,"Result","","A result type for walkdir operations.",null,null],[8,"DirEntryExt","","Unix-specific extension methods for `walkdir::DirEntry`",null,null],[10,"ino","","Returns the underlying `d_ino` field in the contained…",2,[[]]],[11,"new","","Create a builder for a recursive directory iterator…",3,[[["path",3],["asref",8]]]],[11,"min_depth","","Set the minimum depth of entries yielded by the iterator.",3,[[]]],[11,"max_depth","","Set the maximum depth of entries yield by the iterator.",3,[[]]],[11,"follow_links","","Follow symbolic links. By default, this is disabled.",3,[[]]],[11,"max_open","","Set the maximum number of simultaneously open file…",3,[[]]],[11,"sort_by","","Set a function for sorting directory entries.",3,[[]]],[11,"contents_first","","Yield a directory\'s contents before the directory itself.…",3,[[]]],[11,"same_file_system","","Do not cross file system boundaries.",3,[[]]],[11,"skip_current_dir","","Skips the current directory.",4,[[]]],[11,"filter_entry","","Yields only entries which satisfy the given predicate and…",4,[[],["filterentry",3]]],[11,"filter_entry","","Yields only entries which satisfy the given predicate and…",5,[[],["filterentry",3]]],[11,"skip_current_dir","","Skips the current directory.",5,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"ino","","Returns the underlying `d_ino` field in the contained…",0,[[]]],[11,"into_iter","","",3,[[],["intoiter",3]]],[11,"next","","Advances the iterator and returns the next value.",4,[[],[["result",6],["option",4]]]],[11,"next","","Advances the iterator and returns the next value.",5,[[],[["result",6],["option",4]]]],[11,"clone","","",0,[[],["direntry",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"description","","",1,[[]]],[11,"cause","","",1,[[],[["error",8],["option",4]]]],[11,"source","","",1,[[],[["option",4],["error",8]]]]],"p":[[3,"DirEntry"],[3,"Error"],[8,"DirEntryExt"],[3,"WalkDir"],[3,"IntoIter"],[3,"FilterEntry"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);